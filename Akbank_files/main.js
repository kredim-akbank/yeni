webpackJsonp([1],{

/***/ "+XFQ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

var _utils = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var CalcDetailsV2 = (_class = function (_BappBase) {
  _inherits(CalcDetailsV2, _BappBase);

  function CalcDetailsV2(props, context) {
    _classCallCheck(this, CalcDetailsV2);

    return _possibleConstructorReturn(this, (CalcDetailsV2.__proto__ || Object.getPrototypeOf(CalcDetailsV2)).call(this, props, context));
  }

  _createClass(CalcDetailsV2, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevProps.showCalcDetails !== this.props.showCalcDetails) {
        if (this.props.showCalcDetails && $(window).width() < 768) {
          // eslint-disable-line
          if ($.fn.dataTable.isDataTable('#responsive-table')) {
            return;
          }

          $('#responsive-table').DataTable({
            ordering: false,
            searching: false,
            lengthChange: false,
            info: false,
            sPaginationType: 'listbox',

            responsive: {
              details: {
                display: $.fn.dataTable.Responsive.display.childRow
              }
            },
            iDisplayLength: 4
          });

          var customBtns = $('.custom-pagination a'),
              selectbox = $('.dataTables_paginate select');
          customBtns.click(function (e) {
            e.preventDefault();
            if ($(this).hasClass('previous')) {
              if (selectbox.val() == 1) return;
              selectbox.val(parseInt(selectbox.val()) - 1).trigger('change');
            } else {
              if (selectbox.val() == selectbox.find('option').length) return;
              selectbox.val(parseInt(selectbox.val()) + 1).trigger('change');
            }
          });
        }
      }
    }
  }, {
    key: "handleCloseClick",
    value: function handleCloseClick() {
      // Hesaplama DetaylarÄ± linki
      $('a.link').trigger('click');
      _ihtiyackredisistate2.default.toggleCalcDetailsV2(this.props.showCalcDetails);
    }
  }, {
    key: "render",
    value: function render() {

      var calcResult = this.props.calcResult || {};

      if (!calcResult.toplamTaksitTutari) {
        return null;
      }

      var krediTahsisUcreti = Utils.addThousandSeparator(calcResult.toplamMasraf, true, '.') + " TL";
      var aylikMaliyetOrani = "% " + (calcResult.aylikMaliyetOrani ? calcResult.aylikMaliyetOrani.toFixed(4).replace('.', ',') : '');
      var efektifYillkFaizOrani = "% " + (calcResult.yearlyInterestRate ? calcResult.yearlyInterestRate.toFixed(4).replace('.', ',') : '');

      var summary = _react2.default.createElement(
        "table",
        { className: "table2" },
        _react2.default.createElement(
          "tbody",
          null,
          _react2.default.createElement(
            "tr",
            { className: "desc-row" },
            _react2.default.createElement(
              "td",
              null,
              "Kredi Tahsis \xDCcreti"
            ),
            _react2.default.createElement(
              "td",
              null,
              _react2.default.createElement(
                "span",
                { className: "KTU" },
                krediTahsisUcreti
              )
            )
          ),
          _react2.default.createElement(
            "tr",
            { className: "desc-row" },
            _react2.default.createElement(
              "td",
              null,
              "Ayl\u0131k Maliyet Oran\u0131"
            ),
            _react2.default.createElement(
              "td",
              null,
              _react2.default.createElement(
                "span",
                { className: "AMO" },
                aylikMaliyetOrani
              )
            )
          ),
          _react2.default.createElement(
            "tr",
            { className: "desc-row" },
            _react2.default.createElement(
              "td",
              null,
              "Efektif Y\u0131ll\u0131k Faiz Oran\u0131"
            ),
            _react2.default.createElement(
              "td",
              null,
              _react2.default.createElement(
                "span",
                { className: "YMO" },
                efektifYillkFaizOrani
              )
            )
          )
        )
      );
      var tableHeader = _react2.default.createElement(
        "tr",
        { className: "mb-collepse-row" },
        _react2.default.createElement(
          "th",
          null,
          "D\xF6nem"
        ),
        _react2.default.createElement(
          "th",
          null,
          "Taksit Tutar\u0131",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            " (TL)"
          )
        ),
        _react2.default.createElement(
          "th",
          { className: "none" },
          "Faiz \xD6demesi",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            " (TL)"
          )
        ),
        _react2.default.createElement(
          "th",
          { className: "none" },
          "KKDF",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            " (TL)"
          )
        ),
        _react2.default.createElement(
          "th",
          { className: "none" },
          "BSMV",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            " (TL)"
          )
        ),
        _react2.default.createElement(
          "th",
          { className: "none" },
          "Anapara \xD6demesi",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            " (TL)"
          )
        ),
        _react2.default.createElement(
          "th",
          null,
          "Kalan Anapara",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            " (TL)"
          )
        )
      );

      var odemePlani = null;
      if (calcResult.odemePlaniArr) {
        odemePlani = calcResult.odemePlaniArr.map(function (item, index) {
          return _react2.default.createElement(
            "tr",
            { className: "mb-collepse-row", key: index },
            _react2.default.createElement(
              "td",
              null,
              index + 1
            ),
            _react2.default.createElement(
              "td",
              null,
              Utils.addThousandSeparator(item.aylikOdeme.toFixed(2), true, '.'),
              " ",
              _react2.default.createElement(
                "span",
                { className: "currency" },
                "TL"
              )
            ),
            _react2.default.createElement(
              "td",
              null,
              Utils.addThousandSeparator(item.faizOdemesi.toFixed(2), true, '.'),
              " ",
              _react2.default.createElement(
                "span",
                { className: "currency" },
                "TL"
              )
            ),
            _react2.default.createElement(
              "td",
              null,
              Utils.addThousandSeparator(item.kkdfOdemesi.toFixed(2), true, '.'),
              " ",
              _react2.default.createElement(
                "span",
                { className: "currency" },
                "TL"
              )
            ),
            _react2.default.createElement(
              "td",
              null,
              Utils.addThousandSeparator(item.bsmvOdemesi.toFixed(2), true, '.'),
              " ",
              _react2.default.createElement(
                "span",
                { className: "currency" },
                "TL"
              )
            ),
            _react2.default.createElement(
              "td",
              null,
              Utils.addThousandSeparator(item.anaparaOdemesi.toFixed(2), true, '.'),
              " ",
              _react2.default.createElement(
                "span",
                { className: "currency" },
                "TL"
              )
            ),
            _react2.default.createElement(
              "td",
              null,
              Utils.addThousandSeparator(item.kalanAnapara.toFixed(2), true, '.'),
              " ",
              _react2.default.createElement(
                "span",
                { className: "currency" },
                "TL"
              )
            )
          );
        });
      }

      var odemePlaniToplamlari = _react2.default.createElement(
        "tr",
        { className: "total-row mb-collepse-row" },
        _react2.default.createElement(
          "td",
          null,
          "Toplam"
        ),
        _react2.default.createElement(
          "td",
          null,
          Utils.addThousandSeparator(calcResult.toplamTaksitTutari.toFixed(2), true, '.'),
          " ",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            "TL"
          )
        ),
        _react2.default.createElement(
          "td",
          null,
          Utils.addThousandSeparator(calcResult.toplamFaizOdemesi.toFixed(2), true, '.'),
          " ",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            "TL"
          )
        ),
        _react2.default.createElement(
          "td",
          null,
          Utils.addThousandSeparator(calcResult.toplamKkdfOdemesi.toFixed(2), true, '.'),
          " ",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            "TL"
          )
        ),
        _react2.default.createElement(
          "td",
          null,
          Utils.addThousandSeparator(calcResult.toplamBsmvOdemesi.toFixed(2), true, '.'),
          " ",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            "TL"
          )
        ),
        _react2.default.createElement(
          "td",
          null,
          Utils.addThousandSeparator(calcResult.toplamAnaparaOdemesi.toFixed(2), true, '.'),
          " ",
          _react2.default.createElement(
            "span",
            { className: "currency" },
            "TL"
          )
        ),
        _react2.default.createElement(
          "td",
          null,
          "-"
        )
      );

      return _react2.default.createElement(
        "div",
        { className: "tooltip-container" },
        _react2.default.createElement(
          "div",
          { className: "close" },
          _react2.default.createElement("button", { type: "button", className: "btn-close", "aria-label": "Close", onClick: this.handleCloseClick })
        ),
        _react2.default.createElement(
          "div",
          { className: "content" },
          _react2.default.createElement(
            "ul",
            { className: "nav nav-pills mb-3", id: "pills-tab", role: "tablist" },
            _react2.default.createElement(
              "li",
              { className: "nav-item", role: "presentation" },
              _react2.default.createElement(
                "button",
                { className: "nav-link active", id: "pills-home-tab", "data-bs-toggle": "pill", "data-bs-target": "#pills-home",
                  type: "button", role: "tab", "aria-controls": "pills-home", "aria-selected": "true" },
                "Masraf ve Maliyet Oranlar\u0131"
              )
            ),
            _react2.default.createElement(
              "li",
              { className: "nav-item", role: "presentation" },
              _react2.default.createElement(
                "button",
                { className: "nav-link", id: "pills-profile-tab", "data-bs-toggle": "pill", "data-bs-target": "#pills-profile",
                  type: "button", role: "tab", "aria-controls": "pills-profile", "aria-selected": "false" },
                "\xD6deme Plan\u0131"
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "tab-content", id: "pills-tabContent" },
            _react2.default.createElement(
              "div",
              { className: "tab-pane fade show active oran", id: "pills-home", role: "tabpanel",
                "aria-labelledby": "pills-home-tab" },
              summary,
              _react2.default.createElement("div", { dangerouslySetInnerHTML: { __html: this.props.calcDetailsText } })
            ),
            _react2.default.createElement(
              "div",
              { className: "tab-pane fade plan", id: "pills-profile", role: "tabpanel", "aria-labelledby": "pills-profile-tab" },
              _react2.default.createElement(
                "table",
                { id: "responsive-table", className: "", width: "100%" },
                _react2.default.createElement(
                  "thead",
                  null,
                  tableHeader
                ),
                _react2.default.createElement(
                  "tbody",
                  { className: "responsive-table-body" },
                  odemePlaniToplamlari,
                  odemePlani
                )
              ),
              _react2.default.createElement(
                "div",
                { className: "custom-pagination d-md-none" },
                _react2.default.createElement(
                  "a",
                  { href: "#", className: "previous", "data-number": "1" },
                  "\xD6nceki Sayfa"
                ),
                _react2.default.createElement(
                  "a",
                  { href: "#", className: "next", "data-number": "1" },
                  "Sonraki Sayfa"
                )
              )
            )
          )
        )
      );
    }
  }]);

  return CalcDetailsV2;
}(_webcore.BappBase), (_applyDecoratedDescriptor(_class.prototype, "handleCloseClick", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleCloseClick"), _class.prototype)), _class);


function mapStateToProps(state, ownProps) {
  return {
    tokenSessionId: state.ihtiyacKredisiState.tokenSessionId,
    fetching: state.ihtiyacKredisiState.fetching,
    error: state.ihtiyacKredisiState.error,
    productInfo: state.ihtiyacKredisiState.productInfo,
    calcResult: state.ihtiyacKredisiState.calcResult,
    showCalcDetails: state.ihtiyacKredisiState.showCalcDetails
  };
}

CalcDetailsV2.propTypes = {
  calcDetailsText: _propTypes2.default.string
};

exports.default = (0, _reactRedux.connect)(mapStateToProps)(CalcDetailsV2);

/***/ }),

/***/ "//Fk":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("U5ju"), __esModule: true };

/***/ }),

/***/ "0XFg":
/***/ (function(module, exports, __webpack_require__) {

(function(window) {
    var re = {
        not_string: /[^s]/,
        number: /[diefg]/,
        json: /[j]/,
        not_json: /[^j]/,
        text: /^[^\x25]+/,
        modulo: /^\x25{2}/,
        placeholder: /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijosuxX])/,
        key: /^([a-z_][a-z_\d]*)/i,
        key_access: /^\.([a-z_][a-z_\d]*)/i,
        index_access: /^\[(\d+)\]/,
        sign: /^[\+\-]/
    }

    function sprintf() {
        var key = arguments[0], cache = sprintf.cache
        if (!(cache[key] && cache.hasOwnProperty(key))) {
            cache[key] = sprintf.parse(key)
        }
        return sprintf.format.call(null, cache[key], arguments)
    }

    sprintf.format = function(parse_tree, argv) {
        var cursor = 1, tree_length = parse_tree.length, node_type = "", arg, output = [], i, k, match, pad, pad_character, pad_length, is_positive = true, sign = ""
        for (i = 0; i < tree_length; i++) {
            node_type = get_type(parse_tree[i])
            if (node_type === "string") {
                output[output.length] = parse_tree[i]
            }
            else if (node_type === "array") {
                match = parse_tree[i] // convenience purposes only
                if (match[2]) { // keyword argument
                    arg = argv[cursor]
                    for (k = 0; k < match[2].length; k++) {
                        if (!arg.hasOwnProperty(match[2][k])) {
                            throw new Error(sprintf("[sprintf] property '%s' does not exist", match[2][k]))
                        }
                        arg = arg[match[2][k]]
                    }
                }
                else if (match[1]) { // positional argument (explicit)
                    arg = argv[match[1]]
                }
                else { // positional argument (implicit)
                    arg = argv[cursor++]
                }

                if (get_type(arg) == "function") {
                    arg = arg()
                }

                if (re.not_string.test(match[8]) && re.not_json.test(match[8]) && (get_type(arg) != "number" && isNaN(arg))) {
                    throw new TypeError(sprintf("[sprintf] expecting number but found %s", get_type(arg)))
                }

                if (re.number.test(match[8])) {
                    is_positive = arg >= 0
                }

                switch (match[8]) {
                    case "b":
                        arg = arg.toString(2)
                    break
                    case "c":
                        arg = String.fromCharCode(arg)
                    break
                    case "d":
                    case "i":
                        arg = parseInt(arg, 10)
                    break
                    case "j":
                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0)
                    break
                    case "e":
                        arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential()
                    break
                    case "f":
                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg)
                    break
                    case "g":
                        arg = match[7] ? parseFloat(arg).toPrecision(match[7]) : parseFloat(arg)
                    break
                    case "o":
                        arg = arg.toString(8)
                    break
                    case "s":
                        arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg)
                    break
                    case "u":
                        arg = arg >>> 0
                    break
                    case "x":
                        arg = arg.toString(16)
                    break
                    case "X":
                        arg = arg.toString(16).toUpperCase()
                    break
                }
                if (re.json.test(match[8])) {
                    output[output.length] = arg
                }
                else {
                    if (re.number.test(match[8]) && (!is_positive || match[3])) {
                        sign = is_positive ? "+" : "-"
                        arg = arg.toString().replace(re.sign, "")
                    }
                    else {
                        sign = ""
                    }
                    pad_character = match[4] ? match[4] === "0" ? "0" : match[4].charAt(1) : " "
                    pad_length = match[6] - (sign + arg).length
                    pad = match[6] ? (pad_length > 0 ? str_repeat(pad_character, pad_length) : "") : ""
                    output[output.length] = match[5] ? sign + arg + pad : (pad_character === "0" ? sign + pad + arg : pad + sign + arg)
                }
            }
        }
        return output.join("")
    }

    sprintf.cache = {}

    sprintf.parse = function(fmt) {
        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0
        while (_fmt) {
            if ((match = re.text.exec(_fmt)) !== null) {
                parse_tree[parse_tree.length] = match[0]
            }
            else if ((match = re.modulo.exec(_fmt)) !== null) {
                parse_tree[parse_tree.length] = "%"
            }
            else if ((match = re.placeholder.exec(_fmt)) !== null) {
                if (match[2]) {
                    arg_names |= 1
                    var field_list = [], replacement_field = match[2], field_match = []
                    if ((field_match = re.key.exec(replacement_field)) !== null) {
                        field_list[field_list.length] = field_match[1]
                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== "") {
                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {
                                field_list[field_list.length] = field_match[1]
                            }
                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {
                                field_list[field_list.length] = field_match[1]
                            }
                            else {
                                throw new SyntaxError("[sprintf] failed to parse named argument key")
                            }
                        }
                    }
                    else {
                        throw new SyntaxError("[sprintf] failed to parse named argument key")
                    }
                    match[2] = field_list
                }
                else {
                    arg_names |= 2
                }
                if (arg_names === 3) {
                    throw new Error("[sprintf] mixing positional and named placeholders is not (yet) supported")
                }
                parse_tree[parse_tree.length] = match
            }
            else {
                throw new SyntaxError("[sprintf] unexpected placeholder")
            }
            _fmt = _fmt.substring(match[0].length)
        }
        return parse_tree
    }

    var vsprintf = function(fmt, argv, _argv) {
        _argv = (argv || []).slice(0)
        _argv.splice(0, 0, fmt)
        return sprintf.apply(null, _argv)
    }

    /**
     * helpers
     */
    function get_type(variable) {
        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase()
    }

    function str_repeat(input, multiplier) {
        return Array(multiplier + 1).join(input)
    }

    /**
     * export to either browser or node.js
     */
    if (true) {
        exports.sprintf = sprintf
        exports.vsprintf = vsprintf
    }
    else {
        window.sprintf = sprintf
        window.vsprintf = vsprintf

        if (typeof define === "function" && define.amd) {
            define(function() {
                return {
                    sprintf: sprintf,
                    vsprintf: vsprintf
                }
            })
        }
    }
})(typeof window === "undefined" ? this : window);


/***/ }),

/***/ "0v1V":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _passiveEventListeners = __webpack_require__("yBKa");

var _utils = __webpack_require__("ECVE");

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scrollHash = {
  mountFlag: false,
  initialized: false,
  scroller: null,
  containers: {},

  mount: function mount(scroller) {
    this.scroller = scroller;

    this.handleHashChange = this.handleHashChange.bind(this);
    window.addEventListener('hashchange', this.handleHashChange);

    this.initStateFromHash();
    this.mountFlag = true;
  },
  mapContainer: function mapContainer(to, container) {
    this.containers[to] = container;
  },
  isMounted: function isMounted() {
    return this.mountFlag;
  },
  isInitialized: function isInitialized() {
    return this.initialized;
  },
  initStateFromHash: function initStateFromHash() {
    var _this = this;

    var hash = this.getHash();
    if (hash) {
      window.setTimeout(function () {
        _this.scrollTo(hash, true);
        _this.initialized = true;
      }, 10);
    } else {
      this.initialized = true;
    }
  },
  scrollTo: function scrollTo(to, isInit) {
    var scroller = this.scroller;
    var element = scroller.get(to);
    if (element && (isInit || to !== scroller.getActiveLink())) {
      var container = this.containers[to] || document;
      scroller.scrollTo(to, { container: container });
    }
  },
  getHash: function getHash() {
    return _utils2.default.getHash();
  },
  changeHash: function changeHash(to, saveHashHistory) {
    if (this.isInitialized() && _utils2.default.getHash() !== to) {
      _utils2.default.updateHash(to, saveHashHistory);
    }
  },
  handleHashChange: function handleHashChange() {
    this.scrollTo(this.getHash());
  },
  unmount: function unmount() {
    this.scroller = null;
    this.containers = null;
    window.removeEventListener('hashchange', this.handleHashChange);
  }
};

exports.default = scrollHash;

/***/ }),

/***/ "1vP6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FaqList = function (_BappBase) {
  _inherits(FaqList, _BappBase);

  function FaqList(props) {
    _classCallCheck(this, FaqList);

    return _possibleConstructorReturn(this, (FaqList.__proto__ || Object.getPrototypeOf(FaqList)).call(this, props));
  }

  _createClass(FaqList, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prepProps, prevState) {
      if (prepProps.list != this.props.list) {
        MODULES.Utility.Accordion();
      }
    }
  }, {
    key: "renderList",
    value: function renderList(list) {
      var fmtMaxTutar = this.props.fmtMaxTutar;
      /*eslint-disable */
      return JSON.parse(list).map(function (sss, index) {
        var description = sss.description.replaceAll("{fmtMaxTutar}", fmtMaxTutar);
        return _react2.default.createElement(
          "div",
          { className: "acc", key: index },
          _react2.default.createElement(
            "h4",
            { className: "acc-title" },
            sss.title
          ),
          _react2.default.createElement(
            "div",
            { className: "acc-content" },
            _react2.default.createElement("p", { dangerouslySetInnerHTML: { __html: description } })
          )
        );
      });
      /*eslint-enable */
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "section",
        { className: "section accordions" },
        _react2.default.createElement(
          "div",
          { className: "container-v2 container-mobile" },
          this.props.list && this.renderList(this.props.list)
        )
      );
    }
  }]);

  return FaqList;
}(_webcore.BappBase);

FaqList.propTypes = {
  list: _propTypes2.default.string,
  fmtMaxTutar: _propTypes2.default.string
};

exports.default = FaqList;

/***/ }),

/***/ "2/Fb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _message = __webpack_require__("+g8O");

var _message2 = _interopRequireDefault(_message);

__webpack_require__("4buR");

var _form = __webpack_require__("3kzJ");

var _form2 = _interopRequireDefault(_form);

__webpack_require__("2xzD");

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _label = __webpack_require__("79hd");

var _label2 = _interopRequireDefault(_label);

__webpack_require__("fLa5");

var _utils = __webpack_require__("FOo0");

var _button = __webpack_require__("66uW");

var _button2 = _interopRequireDefault(_button);

__webpack_require__("jU+E");

var _select = __webpack_require__("qjcq");

var _select2 = _interopRequireDefault(_select);

__webpack_require__("WCkl");

var _textfield = __webpack_require__("8WwK");

var _textfield2 = _interopRequireDefault(_textfield);

__webpack_require__("ipFE");

var _amount = __webpack_require__("okEX");

var _amount2 = _interopRequireDefault(_amount);

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

var _utils2 = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils2);

var _constants = __webpack_require__("iRmV");

var Constants = _interopRequireWildcard(_constants);

var _lodash = __webpack_require__("M4fF");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var EMAIL_MAX_LENGTH = 81;
var yesNoOptions = [{ value: 'E', name: 'Evet' }, { value: 'H', name: 'HayÄ±r' }];

var MeslekBilgileri = (_class = function (_BappBase) {
  _inherits(MeslekBilgileri, _BappBase);

  function MeslekBilgileri(props) {
    _classCallCheck(this, MeslekBilgileri);

    var _this = _possibleConstructorReturn(this, (MeslekBilgileri.__proto__ || Object.getPrototypeOf(MeslekBilgileri)).call(this, props));

    _this.state = {
      selectedOgrenimDurumuId: '',
      selectedCalismaSekliId: '',
      selectedMeslekId: '',
      selectedFaaliyetAlaniId: '',
      selectedUnvanId: '',
      gelir: '',
      selectedCalismaSuresi: '',
      selectedYurtdisiBaglantisi: '',
      eposta: '',
      isyeriTelefonu: '',
      selectedCddIslemHacmi: '',
      SelectedCddIslemSayisi: '',
      selectedCddVarlikKaynagi: [],
      selectedCddYerlesikUlkeBilgisi: '',
      educationStatuses: [],
      calismaSekilleri: [],
      meslekler: [],
      faaliyetAlanlari: [],
      unvanlar: [],
      calismaSuresi: [],
      varlikKaynaklari: [],
      islemHacimleri: [],
      islemSayilari: [],
      ikinciUyrukUlkeler: [],
      isError: false

    };
    return _this;
  }

  _createClass(MeslekBilgileri, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.getEducationStatuses();
      this.getCddVarlikKaynagi();
      this.getCddIslemHacmi();
      this.getCddIslemSayisi();
      this.getCddYerlesikUlkeListesi();
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/3.6/ek-bilgiler",
        pageTitle: "HÄ±zlÄ± Ä°htiyaÃ§ Kredisi"
      });
    }
  }, {
    key: "getEducationStatuses",
    value: function getEducationStatuses() {
      var _this2 = this;

      _ihtiyackredisistate2.default.getEducationStatuses({
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this2.setState({ educationStatuses: response.educationStatuses });
        }
      });
    }
  }, {
    key: "getWorkTypes",
    value: function getWorkTypes(ogrenimDurumuId) {
      var _this3 = this;

      _ihtiyackredisistate2.default.getWorkTypes({
        ogrenimDurumu: ogrenimDurumuId,
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this3.setState({ calismaSekilleri: response.calismaSekilleri });
        }
      });
    }
  }, {
    key: "getOccupations",
    value: function getOccupations(calismaSekliId) {
      var _this4 = this;

      _ihtiyackredisistate2.default.getOccupations({
        ogrenimDurumu: this.state.selectedOgrenimDurumuId,
        calismaSekli: calismaSekliId,
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this4.setState({ meslekler: response.meslekler });
        }
      });
    }
  }, {
    key: "getActivityAreas",
    value: function getActivityAreas(meslekId) {
      var _this5 = this;

      _ihtiyackredisistate2.default.getActivityAreas({
        ogrenimDurumu: this.state.selectedOgrenimDurumuId,
        calismaSekli: this.state.selectedCalismaSekliId,
        meslek: meslekId,
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this5.setState({ faaliyetAlanlari: response.faaliyetAlanlari });
        }
      });
    }
  }, {
    key: "getTitles",
    value: function getTitles(meslekId) {
      var _this6 = this;

      _ihtiyackredisistate2.default.getTitles({
        ogrenimDurumu: this.state.selectedOgrenimDurumuId,
        calismaSekli: this.state.selectedCalismaSekliId,
        meslek: meslekId,
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this6.setState({ unvanlar: response.unvanlar });
        }
      });
    }
  }, {
    key: "getJobExperience",
    value: function getJobExperience() {
      var _this7 = this;

      _ihtiyackredisistate2.default.getJobExperience({
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this7.setState({ calismaSuresi: response.calismaSuresi });
        }
      });
    }
  }, {
    key: "getCddVarlikKaynagi",
    value: function getCddVarlikKaynagi() {
      var _this8 = this;

      _ihtiyackredisistate2.default.getCddVarlikKaynagi({
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this8.setState({ varlikKaynaklari: response.varlikKaynaklari });
        }
      });
    }
  }, {
    key: "getCddIslemHacmi",
    value: function getCddIslemHacmi() {
      var _this9 = this;

      _ihtiyackredisistate2.default.getCddIslemHacmi({
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this9.setState({ islemHacimleri: response.islemHacimleri });
        }
      });
    }
  }, {
    key: "getCddIslemSayisi",
    value: function getCddIslemSayisi() {
      var _this10 = this;

      _ihtiyackredisistate2.default.getCddIslemSayisi({
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this10.setState({ islemSayilari: response.islemSayilari });
        }
      });
    }
  }, {
    key: "getCddYerlesikUlkeListesi",
    value: function getCddYerlesikUlkeListesi() {
      var _this11 = this;

      _ihtiyackredisistate2.default.getCddYerlesikUlkeListesi({
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this11.setState({ ikinciUyrukUlkeler: response.ikinciUyrukUlkeler });
        }
      });
    }
  }, {
    key: "handleInputChange",
    value: function handleInputChange(meta) {
      var _this12 = this;

      if (meta.egitim) {
        var newOgrenimDurumuId = meta.egitim ? meta.egitim.value : null;
        this.setState({
          selectedOgrenimDurumuId: newOgrenimDurumuId,
          selectedCalismaSekliId: '',
          selectedMeslekId: '',
          selectedFaaliyetAlaniId: '',
          selectedUnvanId: ''
        }, function () {
          if (Utils.isNullOrEmpty(newOgrenimDurumuId) === false) {
            _this12.getWorkTypes(newOgrenimDurumuId);
          }
        });
      }

      if (meta.isTuru) {
        var newCalismaSekliId = meta.isTuru ? meta.isTuru.value : null;
        this.setState({
          selectedCalismaSekliId: newCalismaSekliId,
          selectedMeslekId: '',
          selectedFaaliyetAlaniId: '',
          selectedUnvanId: ''
        }, function () {
          if (Utils.isNullOrEmpty(newCalismaSekliId) === false) {
            _this12.getOccupations(newCalismaSekliId);
          }
        });
      }

      if (meta.meslek) {
        var newMeslekId = meta.meslek ? meta.meslek.value : null;
        this.setState({
          selectedMeslekId: newMeslekId,
          selectedFaaliyetAlaniId: '',
          selectedUnvanId: ''
        }, function () {
          if (Utils.isNullOrEmpty(newMeslekId) === false) {
            _this12.getActivityAreas(newMeslekId);
            _this12.getTitles(newMeslekId);
            _this12.getJobExperience();
          }
        });
      }

      if (meta.isyeriFaaliyet) {
        var newFaaliyetAlaniId = meta.isyeriFaaliyet ? meta.isyeriFaaliyet.value : null;
        this.setState({
          selectedFaaliyetAlaniId: newFaaliyetAlaniId,
          selectedUnvanId: ''
        });
      }

      if (meta.isyeriUnvan) {
        var newUnvanId = meta.isyeriUnvan ? meta.isyeriUnvan.value : null;
        this.setState({
          selectedUnvanId: newUnvanId
        });
      }

      if (meta.calismaSuresi) {
        var newCalismaSuresi = meta.calismaSuresi ? meta.calismaSuresi.value : null;
        this.setState({
          selectedCalismaSuresi: newCalismaSuresi
        });
      }

      if (meta.yurtdisiBaglantisi) {
        var newYurtdisiBaglantisi = meta.yurtdisiBaglantisi ? meta.yurtdisiBaglantisi.value : null;
        this.setState({
          selectedYurtdisiBaglantisi: newYurtdisiBaglantisi
        });
      }

      if (meta.varlikKaynagi) {
        var newVarlikKaynagi = meta.varlikKaynagi ? meta.varlikKaynagi : null;
        this.setState({
          selectedCddVarlikKaynagi: newVarlikKaynagi,
          isError: false
        });
      }

      if (meta.islemHacmi) {
        var newIslemHacmi = meta.islemHacmi ? meta.islemHacmi.value : null;
        this.setState({
          selectedCddIslemHacmi: newIslemHacmi
        });
      }

      if (meta.islemSayisi) {
        var newIslemSayisi = meta.islemSayisi ? meta.islemSayisi.value : null;
        this.setState({
          SelectedCddIslemSayisi: newIslemSayisi
        });
      }

      if (meta.yerlesikUlke) {
        var newYerlesikUlke = meta.yerlesikUlke ? meta.yerlesikUlke.value : null;
        this.setState({
          selectedCddYerlesikUlkeBilgisi: newYerlesikUlke
        });
      }
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit(e, formValues) {
      var _this13 = this;

      var isValid = true;

      if (this.props.additionalInfoFlg) {
        if (!(formValues.egitim >= 0 && formValues.isTuru && formValues.meslek && formValues.isyeriFaaliyet && formValues.gelir)) {
          isValid = false;
        }
      }

      if (this.props.additionalInfo2Flg) {
        if (!(formValues.calismaSuresi && formValues.yurtdisiBaglantisi && formValues.eposta && formValues.isyeriTelefonu)) {
          isValid = false;
        }
      }

      if (this.props.eligible) {
        if (!(formValues.islemHacmi && formValues.islemSayisi && formValues.yerlesikUlke)) {
          isValid = false;
        }

        if (!(formValues.varlikKaynagi.length > 0)) {
          isValid = false;
          this.setState({ isError: true });
        }
      }

      var request = {
        tckn: this.props.tckn,
        tokenSessionId: this.props.tokenSessionId
      };

      if (formValues.egitim) {
        request.ogrenimDurumu = this.state.selectedOgrenimDurumuId;
      }
      if (formValues.isTuru) {
        request.isTuru = this.state.selectedCalismaSekliId;
      }
      if (formValues.meslek) {
        request.meslek = this.state.selectedMeslekId;
      }
      if (formValues.isyeriFaaliyet) {
        request.isyeriFaaliyetAlani = this.state.selectedFaaliyetAlaniId;
      }
      if (formValues.isyeriUnvan) {
        request.unvan = this.state.selectedUnvanId;
      }
      if (formValues.gelir) {
        request.gelir = formValues.gelir.amount;
      }
      if (formValues.calismaSuresi) {
        request.calismaSuresi = this.state.selectedCalismaSuresi;
      }
      if (formValues.yurtdisiBaglantisi) {
        request.yurtdisiBaglantisi = this.state.selectedYurtdisiBaglantisi;
      }
      if (formValues.eposta) {
        request.eposta = formValues.eposta;
      }
      if (formValues.isyeriTelefonu) {
        request.isyeriTelefonu = formValues.isyeriTelefonu ? "0090" + formValues.isyeriTelefonu : "";
      }
      if (this.props.eligible) {
        request.eligible = this.props.eligible;
      }
      if (formValues.varlikKaynagi) {
        request.varlikKaynagi = this.state.selectedCddVarlikKaynagi;
      }
      if (formValues.islemHacmi) {
        request.islemHacmi = this.state.selectedCddIslemHacmi;
      }
      if (formValues.islemSayisi) {
        request.islemSayisi = this.state.SelectedCddIslemSayisi;
      }
      if (formValues.yerlesikUlke) {
        request.yerlesikUlke = this.state.selectedCddYerlesikUlkeBilgisi;
      }

      if (isValid) {
        _ihtiyackredisistate2.default.additionalInfo(request).then(function (response) {
          if (response && !response.error) {
            _webcore.routeActions.push({
              pathname: _this13.props.nextPage
            });
          }
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        null,
        this.props.error && _react2.default.createElement(
          _message2.default,
          { id: "errorMsg", msgType: "error" },
          this.props.error
        ),
        _react2.default.createElement(
          _form2.default,
          {
            className: "meslek-bilgileri-form",
            onSubmit: this.handleSubmit,
            onChange: this.handleInputChange
          },
          _react2.default.createElement(
            _panel2.default,
            { hasFooter: false },
            _react2.default.createElement(
              _panel2.default.Body,
              null,
              this.props.additionalInfoFlg && _react2.default.createElement(
                _react2.default.Fragment,
                null,
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "OgrenimDurumuGroup" },
                  _react2.default.createElement(_label2.default, { text: "\xD6\u011Frenim Durumu", forId: "egitim" }),
                  _react2.default.createElement(_select2.default, {
                    id: "egitim",
                    name: "egitim",
                    placeholder: "Se\xE7iniz",
                    options: this.state.educationStatuses,
                    onChange: this.handleOgrenimDurumuChange,
                    value: this.state.selectedOgrenimDurumuId,
                    valueField: "ogrenimDurumKod",
                    displayField: "ogrenimDurumAd",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    validations: [(0, _utils.required)("LÃ¼tfen ÃÄrenim Durumunuzu seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "CalismaSekliGroup" },
                  _react2.default.createElement(_label2.default, { text: "\xC7al\u0131\u015Fma \u015Eekli", forId: "isTuru" }),
                  _react2.default.createElement(_select2.default, {
                    id: "isTuru",
                    name: "isTuru",
                    placeholder: "Se\xE7iniz",
                    options: this.state.calismaSekilleri,
                    onChange: this.handleCalismaSekliChange,
                    value: this.state.selectedCalismaSekliId,
                    valueField: "calismaSekliKod",
                    displayField: "calismaSekliAd",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    disabled: Utils.isNullOrEmpty(this.state.selectedOgrenimDurumuId),
                    validations: [(0, _utils.required)("LÃ¼tfen ÃalÄ±Åma Åeklinizi seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "MeslekGroup" },
                  _react2.default.createElement(_label2.default, { text: "Meslek", forId: "meslek" }),
                  _react2.default.createElement(_select2.default, {
                    id: "meslek",
                    name: "meslek",
                    placeholder: "Se\xE7iniz",
                    options: this.state.meslekler,
                    onChange: this.handleMeslekChange,
                    value: this.state.selectedMeslekId,
                    valueField: "meslekKod",
                    displayField: "meslekAd",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    disabled: Utils.isNullOrEmpty(this.state.selectedCalismaSekliId),
                    validations: [(0, _utils.required)("LÃ¼tfen MesleÄinizi seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "FaaliyetAlaniGroup" },
                  _react2.default.createElement(_label2.default, { text: "\u0130\u015F Yeri Faaliyet Alan\u0131", forId: "faaliyetAlani" }),
                  _react2.default.createElement(_select2.default, {
                    id: "isyeriFaaliyet",
                    name: "isyeriFaaliyet",
                    placeholder: "Se\xE7iniz",
                    options: this.state.faaliyetAlanlari,
                    onChange: this.handleFaaliyetAlaniChange,
                    value: this.state.selectedFaaliyetAlaniId,
                    valueField: "faaliyetAlaniKod",
                    displayField: "faaliyetAlaniAd",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    disabled: Utils.isNullOrEmpty(this.state.selectedMeslekId),
                    validations: [(0, _utils.required)("LÃ¼tfen Faaliyet alanÄ±nÄ±zÄ± seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "UnvanGroup" },
                  _react2.default.createElement(_label2.default, { text: "Unvan", forId: "isyeriUnvan" }),
                  _react2.default.createElement(_select2.default, {
                    id: "isyeriUnvan",
                    name: "isyeriUnvan",
                    placeholder: "Se\xE7iniz",
                    options: this.state.unvanlar,
                    onChange: this.handleUnvanChange,
                    value: this.state.selectedUnvanId,
                    valueField: "unvanKod",
                    displayField: "unvanAd",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    disabled: Utils.isNullOrEmpty(this.state.selectedMeslekId),
                    validations: [(0, _utils.required)("LÃ¼tfen ÃnvanÄ±nÄ±zÄ± seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "gelir" },
                  _react2.default.createElement(_label2.default, { text: "Ayl\u0131k Net Gelir (TL)", forId: "gelir" }),
                  _react2.default.createElement(_amount2.default, {
                    id: "gelir",
                    name: "gelir",
                    align: "left",
                    withDecimalPart: false,
                    validations: [_amount2.default.requiredAmount("LÃ¼tfen AylÄ±k Net Gelir bilginizi giriniz.")]
                  })
                )
              ),
              this.props.additionalInfo2Flg && _react2.default.createElement(
                _react2.default.Fragment,
                null,
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "CalismaSuresiGroup" },
                  _react2.default.createElement(_label2.default, { text: "\xC7al\u0131\u015Fma S\xFCresi", forId: "calismaSuresi" }),
                  _react2.default.createElement(_select2.default, {
                    id: "calismaSuresi",
                    name: "calismaSuresi",
                    placeholder: "Se\xE7iniz",
                    options: this.state.calismaSuresi,
                    onChange: this.handleCalismaSuresiChange,
                    value: this.state.selectedCalismaSuresi,
                    valueField: "calismaSuresiKod",
                    displayField: "calismaSuresi",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    disabled: Utils.isNullOrEmpty(this.state.selectedMeslekId),
                    validations: [(0, _utils.required)("LÃ¼tfen Ã§alÄ±Åma sÃ¼resi seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "YurtdisiBaglantisiGroup" },
                  _react2.default.createElement(_label2.default, { text: "Yurt D\u0131\u015F\u0131 Ba\u011Flant\u0131s\u0131", forId: "yurtdisiBaglantisi" }),
                  _react2.default.createElement(_select2.default, {
                    id: "yurtdisiBaglantisi",
                    name: "yurtdisiBaglantisi",
                    placeholder: "Se\xE7iniz",
                    options: yesNoOptions,
                    onChange: this.handleYurtdisiBaglantisiChange,
                    value: this.state.selectedYurtdisiBaglantisi,
                    valueField: "value",
                    displayField: "name",
                    validations: [(0, _utils.required)("LÃ¼tfen yurtdÄ±ÅÄ± baÄlantÄ±sÄ± seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "EPostaAdresi" },
                  _react2.default.createElement(_label2.default, { text: "E-Posta Adresiniz", forId: "eposta" }),
                  _react2.default.createElement(_textfield2.default, {
                    id: "eposta",
                    type: "text",
                    name: "eposta",
                    placeholder: "eposta@ornek.com",
                    onBlur: this.handleEmailBlur,
                    value: this.state.eposta,
                    maxLength: EMAIL_MAX_LENGTH,
                    validations: [(0, _utils.required)("LÃ¼tfen email adresinizi giriniz."), (0, _utils.maxLength)(EMAIL_MAX_LENGTH, "LÃ¼tfen email adresinizi kontrol ediniz."), (0, _utils.email)("LÃ¼tfen geÃ§erli bir email adresi giriniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "IsYeriTelefonu" },
                  _react2.default.createElement(_label2.default, { text: "\u0130\u015F Yeri Telefonu", forId: "isyeriTelefonu" }),
                  _react2.default.createElement(_textfield2.default, {
                    id: "isyeriTelefonu",
                    type: "tel",
                    name: "isyeriTelefonu",
                    maxLength: 13,
                    mask: "111 111 11 11",
                    value: this.state.isyeriTelefonu,
                    placeholder: "___ ___ __ __",
                    validations: [(0, _utils.required)("LÃ¼tfen Telefon NumaranÄ±zÄ± giriniz")]
                  })
                )
              ),
              this.props.eligible && _react2.default.createElement(
                _react2.default.Fragment,
                null,
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "YerlesikUlkeGroup" },
                  _react2.default.createElement(_label2.default, { text: "Yerle\u015Fik \xDClke Bilgisi", forId: "yerlesikUlke" }),
                  _react2.default.createElement(_select2.default, {
                    id: "yerlesikUlke",
                    name: "yerlesikUlke",
                    placeholder: "Se\xE7iniz",
                    options: this.state.ikinciUyrukUlkeler,
                    onChange: this.handleYerlesikUlkeChange,
                    value: this.state.selectedCddYerlesikUlkeBilgisi,
                    valueField: "ikinciUyrukUlkeKod",
                    displayField: "ikinciUyrukUlkeAd",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    validations: [(0, _utils.required)("LÃ¼tfen yerleÅik Ã¼lke seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "VarlikKaynagiGroup" },
                  this.state.isError && _react2.default.createElement(
                    _message2.default,
                    { id: "errorMsg", msgType: "error" },
                    "LÃ¼tfen varlÄ±k kaynaÄÄ± seÃ§iniz."
                  ),
                  _react2.default.createElement(_label2.default, { text: "Varl\u0131k Kayna\u011F\u0131", forId: "varlikKaynagi" }),
                  _react2.default.createElement(_select2.default, {
                    id: "varlikKaynagi",
                    name: "varlikKaynagi",
                    placeholder: "Se\xE7iniz",
                    options: this.state.varlikKaynaklari,
                    onChange: this.handleVarlikKaynagiChange,
                    value: this.state.selectedCddVarlikKaynagi,
                    valueField: "varlikKaynagiKod",
                    displayField: "varlikKaynagi",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    multi: true
                    // validations={[required("LÃ¼tfen varlÄ±k kaynaÄÄ± seÃ§iniz.")]} Bu component iÃ§in bu Ã¶zelliÄi kullanamÄ±yoruz.
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "IslemHacmiGroup" },
                  _react2.default.createElement(_label2.default, { text: "\u0130\u015Flem Hacmi", forId: "islemHacmi" }),
                  _react2.default.createElement(_select2.default, {
                    id: "islemHacmi",
                    name: "islemHacmi",
                    placeholder: "Se\xE7iniz",
                    options: this.state.islemHacimleri,
                    onChange: this.handleIslemHacmiChange,
                    value: this.state.selectedCddIslemHacmi,
                    valueField: "islemHacmiKod",
                    displayField: "islemHacmi",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    validations: [(0, _utils.required)("LÃ¼tfen iÅlem hacmi seÃ§iniz.")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "IslemSayisiGroup" },
                  _react2.default.createElement(_label2.default, { text: "\u0130\u015Flem Say\u0131s\u0131", forId: "islemSayisi" }),
                  _react2.default.createElement(_select2.default, {
                    id: "islemSayisi",
                    name: "islemSayisi",
                    placeholder: "Se\xE7iniz",
                    options: this.state.islemSayilari,
                    onChange: this.handleIslemSayisiChange,
                    value: this.state.SelectedCddIslemSayisi,
                    valueField: "islemSayisiKod",
                    displayField: "islemSayisi",
                    noResultsText: "Kay\u0131t bulunamad\u0131",
                    validations: [(0, _utils.required)("LÃ¼tfen iÅlem sayÄ±sÄ± seÃ§iniz.")]
                  })
                )
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { className: "form-action-row" },
                _react2.default.createElement(_button2.default, {
                  id: "btn01",
                  text: "Devam Et",
                  fetching: this.props.fetching,
                  disabled: this.props.fetching
                })
              )
            )
          )
        )
      );
    }
  }]);

  return MeslekBilgileri;
}(_webcore.BappBase), (_applyDecoratedDescriptor(_class.prototype, "handleInputChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleInputChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleSubmit", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleSubmit"), _class.prototype)), _class);


function mapStateToProps(state, ownProps) {
  return {
    tckn: state.ihtiyacKredisiState.tckn,
    tokenSessionId: state.ihtiyacKredisiState.tokenSessionId,
    nextPage: state.ihtiyacKredisiState.nextPage,
    additionalInfoFlg: state.ihtiyacKredisiState.additionalInfoFlg,
    additionalInfo2Flg: state.ihtiyacKredisiState.additionalInfo2Flg,
    branchFlg: state.ihtiyacKredisiState.branchFlg,
    eligible: state.ihtiyacKredisiState.eligible,
    fetching: state.ihtiyacKredisiState.fetching,
    error: state.ihtiyacKredisiState.error
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(MeslekBilgileri);

/***/ }),

/***/ "2Bql":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requiredAmount = requiredAmount;
exports.minValueAmount = minValueAmount;
exports.maxValueAmount = maxValueAmount;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hasValue = function hasValue(value) {
  if (value === null || value === undefined || value === "" || parseFloat(value) === 0 || Number.isNaN(value)) {
    return false;
  } else {
    return true;
  }
};

function requiredAmount(message) {
  return function (value, props) {
    if (!hasValue(value.amount) || !hasValue(value.currency)) {
      return _react2.default.createElement(
        _element2.default,
        { type: "span", className: "form-error is-visible" },
        message || "Tutar ve Para birimi alanÄ±nÄ±n girilmesi zorunludur"
      );
    }
  };
}

function minValueAmount(val, message) {
  return function (value, props) {
    if (hasValue(value.amount) && parseFloat(value.amount) < val) {
      return _react2.default.createElement(
        _element2.default,
        { type: "span", className: "form-error is-visible" },
        message || "Tutar alanÄ± " + val + " deÄerinden az olamaz"
      );
    }
  };
}

function maxValueAmount(val, message) {
  return function (value, props) {
    if (hasValue(value.amount) && parseFloat(value.amount) > val) {
      return _react2.default.createElement(
        _element2.default,
        { type: "span", className: "form-error is-visible" },
        message || "Tutar alanÄ± " + val + " deÄerinden fazla olamaz"
      );
    }
  };
}

/***/ }),

/***/ "2KxR":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "2Nry":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "2xzD":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "3UrO":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "3fs2":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("RY/4");
var ITERATOR = __webpack_require__("dSzd")('iterator');
var Iterators = __webpack_require__("/bQp");
module.exports = __webpack_require__("FeBl").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "3rWo":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _reactRedux = __webpack_require__("RH2O");

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _link = __webpack_require__("sOPI");

var _link2 = _interopRequireDefault(_link);

__webpack_require__("USSv");

var _infobox = __webpack_require__("lo3n");

var _infobox2 = _interopRequireDefault(_infobox);

var _utils = __webpack_require__("FOo0");

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

__webpack_require__("sleA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Success = function (_BappBase) {
  _inherits(Success, _BappBase);

  function Success(props) {
    _classCallCheck(this, Success);

    return _possibleConstructorReturn(this, (Success.__proto__ || Object.getPrototypeOf(Success)).call(this, props));
  }

  _createClass(Success, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      _ihtiyackredisistate2.default.getConfig('WebCredit.ResultPage.CrosssellLinks');
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/4/sonuc",
        pageTitle: "HÄ±zlÄ± Ä°htiyaÃ§ Kredisi"
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        null,
        _react2.default.createElement(
          _panel2.default,
          { hasFooter: false },
          _react2.default.createElement(
            _panel2.default.Body,
            null,
            _react2.default.createElement(
              _react2.default.Fragment,
              null,
              _react2.default.createElement(_image2.default, { path: "public/images/common/illustrations/illustrations-confirmed.svg", className: "result-img" }),
              _react2.default.createElement(
                _element2.default,
                { type: "h1" },
                "Tebrikler!"
              ),
              _react2.default.createElement(
                _element2.default,
                { type: "h1" },
                "BaÅvurun baÅarÄ±yla tamamlandÄ±."
              ),
              _react2.default.createElement(
                _element2.default,
                { type: "h2" },
                "BirkaÃ§ dakika iÃ§inde baÅvuru sonucunu SMS ile bildireceÄiz."
              )
            ),
            this.props.eligible && _react2.default.createElement(
              _react2.default.Fragment,
              null,
              _react2.default.createElement(
                _element2.default,
                { type: "h2", className: "bold" },
                "Telefonunda NFC â YakÄ±n Alan Ä°letiÅimi Ã¶zelliÄi var ise hemen Akbank Mobilâi indirerek mÃ¼Återi olabilir ve baÅvurun onaylandÄ±ÄÄ± durumda kredini anÄ±nda mobilden kullanabilirsin."
              )
            )
          )
        ),
        this.props.configValue && _react2.default.createElement(
          _panel2.default,
          { hasFooter: false, className: "result-crosssell-block" },
          _react2.default.createElement(_block2.default, { dangerouslySetInnerHTML: { __html: this.props.configValue } })
        )
      );
    }
  }]);

  return Success;
}(_webcore.BappBase);

Success.propTypes = {};

Success.defaultProps = {};

function mapStateToProps(state, ownProps) {
  return {
    eligible: state.ihtiyacKredisiState.eligible,
    configValue: state.ihtiyacKredisiState.configValue,
    error: state.ihtiyacKredisiState.error
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(Success);

/***/ }),

/***/ "4buR":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "5zde":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("zQR9");
__webpack_require__("qyJz");
module.exports = __webpack_require__("FeBl").Array.from;


/***/ }),

/***/ "6LHJ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _link = __webpack_require__("sOPI");

var _link2 = _interopRequireDefault(_link);

__webpack_require__("USSv");

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _list = __webpack_require__("RAc1");

var _list2 = _interopRequireDefault(_list);

__webpack_require__("3UrO");

__webpack_require__("FDS3");

var _menustate = __webpack_require__("nu99");

var _menustate2 = _interopRequireDefault(_menustate);

var _provider = __webpack_require__("fGOM");

__webpack_require__("FaSI");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_React$Component) {
  _inherits(Header, _React$Component);

  function Header(props, context) {
    _classCallCheck(this, Header);

    var _this = _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).call(this, props));

    _this.state = {
      size: context.device ? context.device.getState() : null,
      switchIcon: false
    };

    _this.handleClick = _this.handleClick.bind(_this);
    _this.handleLogoutClick = _this.handleLogoutClick.bind(_this);
    return _this;
  }

  _createClass(Header, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      if (this.context.device) {
        this.context.device.subscribe(function (size) {
          _this2.setState({ size: size });
        });
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps, nextContext) {
      if (this.props.menuCollapsed !== nextProps.menuCollapsed) {
        this.setState({ switchIcon: !nextProps.menuCollapsed });
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return this.state.size !== nextState.size || this.state.switchIcon !== nextState.switchIcon || this.props.authenticated !== nextProps.authenticated || this.props.tracker !== nextProps.tracker;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.context.device) {
        this.context.device.unsubscribe();
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      this.setState(function (prevState, prop) {
        _menustate2.default.collapseMenu(prevState.switchIcon);
        return { switchIcon: !prevState.switchIcon };
      });
    }
  }, {
    key: "handleLogoutClick",
    value: function handleLogoutClick() {
      if (this.props.onLogoutClick) {
        this.props.onLogoutClick();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return this.props.authenticated ? _react2.default.createElement(
        _block2.default,
        { type: "header", className: "bapp-header" },
        this.state.size < _provider.Sizes.xl && _react2.default.createElement(
          _block2.default,
          { className: "bapp-header-burger" },
          _react2.default.createElement(_link2.default, {
            custom: true,
            className: (0, _classnames2.default)({
              "bapp-icon-menu-burger": !this.state.switchIcon,
              "bapp-icon-chevron-left": this.state.switchIcon
            }),
            onClick: this.handleClick
          }),
          this.state.switchIcon ? _react2.default.createElement(
            _element2.default,
            { className: "bapp-header-welcome" },
            this.props.nameSurname || ""
          ) : null
        ),
        !(this.state.size === _provider.Sizes.xs && this.state.switchIcon) && _react2.default.createElement(
          _link2.default,
          { custom: true, className: "bapp-logo-link" },
          _react2.default.createElement(_image2.default, { path: "public/images/logo.png", className: "bapp-logo", name: "AkbankLogo" })
        ),
        !(this.state.size === _provider.Sizes.xs && !this.state.switchIcon) && _react2.default.createElement(
          _list2.default,
          { custom: true, className: "bapp-header-menu", disabled: true },
          this.state.size === _provider.Sizes.xl && _react2.default.createElement(
            _list2.default.Item,
            { className: "bapp-header-welcome" },
            this.props.nameSurname || ""
          ),
          _react2.default.createElement(
            _list2.default.Item,
            null,
            _react2.default.createElement(
              _link2.default,
              { iconName: "bapp-icon-settings", iconOnLeft: false },
              "Settings"
            )
          ),
          _react2.default.createElement(
            _list2.default.Item,
            null,
            _react2.default.createElement(
              _link2.default,
              { iconName: "bapp-icon-logout", iconOnLeft: false, onClick: this.handleLogoutClick },
              "Logout"
            )
          )
        )
      ) : _react2.default.createElement(
        _block2.default,
        {
          type: "header",
          className: (0, _classnames2.default)("bapp-header", {
            low: !this.props.tracker,
            high: this.props.tracker
          })
        },
        _react2.default.createElement(
          _block2.default,
          { className: "bapp-header-wrapper logo-container" },
          _react2.default.createElement(
            _block2.default,
            { className: "bapp-logo-container bapp-logo-has-padding" },
            _react2.default.createElement(_image2.default, { path: "public/images/logo.png", className: "bapp-logo", name: "AkbankLogo" })
          )
        ),
        this.props.tracker && _react2.default.createElement(
          _block2.default,
          { className: "bapp-header-wrapper tracker-container" },
          this.props.tracker
        )
      );
    }
  }]);

  return Header;
}(_react2.default.Component);

Header.propTypes = {
  authenticated: _propTypes2.default.bool,
  nameSurname: _propTypes2.default.string,
  menuCollapsed: _propTypes2.default.bool,
  onLogoutClick: _propTypes2.default.func,
  tracker: _propTypes2.default.object
};

Header.defaultProps = {
  authenticated: false
};

Header.contextTypes = {
  device: _propTypes2.default.any
};

exports.default = Header;

/***/ }),

/***/ "7NNL":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var routeModel = exports.routeModel = {
  route: {
    path: "/",
    childRoutes: []
  }
};

/***/ }),

/***/ "82Mu":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7KvD");
var macrotask = __webpack_require__("L42u").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__("R9M2")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "8hRR":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("B0bq"), __esModule: true };

/***/ }),

/***/ "9EQB":
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["@bapp/webcore"] = factory();
	else
		root["@bapp/webcore"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 10);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("GiK3");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("VUfu");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("fZjL");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("pFYg");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Zx67");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Zrlr");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("wxAW");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("zwoO");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Pf15");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var lifecycleAspectConfig = exports.lifecycleAspectConfig = {};

var setupLifecycleAspect = exports.setupLifecycleAspect = function () {
    function setupLifecycleAspect(config) {
        exports.lifecycleAspectConfig = lifecycleAspectConfig = config;
    }

    return setupLifecycleAspect;
}();

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.languageService = exports.setupPromiseAspectActions = exports.setupRouteAspectActions = exports.setupLifecycleAspect = exports.clearLog = exports.setLogger = exports.addLog = exports.sendLogQueue = exports.AsyncCall = exports.webSocketConnect = exports.signalRConnect = exports.configureServerStore = exports.SESSION = exports.LOCAL = exports.MEMORY = exports.isCached = exports.getCache = exports.setCache = exports.throttle = exports.debounce = exports.trace = exports.safe = exports.log = exports.initialstate = exports.cache = exports.autobind = exports.authorize = exports.addAjaxEnricher = exports.CreateFlightstateMiddleware = exports.PostAjaxAsync = exports.GetAjaxAsync = exports.State = exports.module = exports.page = exports.BappModule = exports.BappBase = exports.store = exports.routeReducer = exports.ConnectedRouter = exports.routeManager = exports.routeActions = exports.configure = undefined;

var _react = __webpack_require__(0);

var React = _interopRequireWildcard(_react);

var _nucleus = __webpack_require__(1);

var _socket = __webpack_require__(16);

var _history = __webpack_require__(23);

var _router = __webpack_require__(24);

var _router2 = _interopRequireDefault(_router);

var _base = __webpack_require__(12);

var _base2 = _interopRequireDefault(_base);

var _module2 = __webpack_require__(14);

var _module3 = _interopRequireDefault(_module2);

var _page = __webpack_require__(29);

var _page2 = _interopRequireDefault(_page);

var _module4 = __webpack_require__(30);

var _module5 = _interopRequireDefault(_module4);

var _lifecycleaspect = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

var store = null;
var configure = exports.configure = function () {
  function configure(corereducers, middlewares) {
    var history = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _history.createMemoryHistory)();
    var url = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";
    var isProduction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var bufferlength = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 250;
    var external_store = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;

    _nucleus.reducerRegistery.init(corereducers, bufferlength);
    _router.ConnectedRouter.history = history;
    if (external_store) {
      exports.store = store = external_store;
      (0, _nucleus.setStore)(store);
    } else {
      var reduxRouterMiddleware = (0, _router.routerMiddleware)(_router.ConnectedRouter.history);
      exports.store = store = (0, _nucleus.configureStore)({}, middlewares, isProduction, reduxRouterMiddleware);
    }
    (0, _base.setServiceUrl)(url);
    return store;
  }

  return configure;
}();

exports.routeActions = _router.routeActions;
exports.routeManager = _router2["default"];
exports.ConnectedRouter = _router.ConnectedRouter;
exports.routeReducer = _router.routeReducer;
exports.store = store;
exports.BappBase = _base2["default"];
exports.BappModule = _module3["default"];
exports.page = _page2["default"];
exports.module = _module5["default"];
exports.State = _nucleus.State;
exports.GetAjaxAsync = _nucleus.GetAjaxAsync;
exports.PostAjaxAsync = _nucleus.PostAjaxAsync;
exports.CreateFlightstateMiddleware = _nucleus.CreateFlightstateMiddleware;
exports.addAjaxEnricher = _nucleus.addAjaxEnricher;
exports.authorize = _nucleus.authorize;
exports.autobind = _nucleus.autobind;
exports.cache = _nucleus.cache;
exports.initialstate = _nucleus.initialstate;
exports.log = _nucleus.log;
exports.safe = _nucleus.safe;
exports.trace = _nucleus.trace;
exports.debounce = _nucleus.debounce;
exports.throttle = _nucleus.throttle;
exports.setCache = _nucleus.setCache;
exports.getCache = _nucleus.getCache;
exports.isCached = _nucleus.isCached;
exports.MEMORY = _nucleus.MEMORY;
exports.LOCAL = _nucleus.LOCAL;
exports.SESSION = _nucleus.SESSION;
exports.configureServerStore = _nucleus.configureServerStore;
exports.signalRConnect = _socket.signalRConnect;
exports.webSocketConnect = _socket.webSocketConnect;
exports.AsyncCall = _nucleus.AsyncCall;
exports.sendLogQueue = _nucleus.sendLogQueue;
exports.addLog = _nucleus.addLog;
exports.setLogger = _nucleus.setLogger;
exports.clearLog = _nucleus.clearLog;
exports.setupLifecycleAspect = _lifecycleaspect.setupLifecycleAspect;
exports.setupRouteAspectActions = _router.setupRouteAspectActions;
exports.setupPromiseAspectActions = _nucleus.setupPromiseAspectActions;
exports.languageService = _nucleus.languageService;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("KSGD");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = __webpack_require__(2);

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = __webpack_require__(3);

var _typeof3 = _interopRequireDefault(_typeof2);

var _getPrototypeOf = __webpack_require__(4);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(5);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(6);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(7);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(8);

var _inherits3 = _interopRequireDefault(_inherits2);

exports.setServiceUrl = setServiceUrl;

var _react = __webpack_require__(0);

var React = _interopRequireWildcard(_react);

var _propTypes = __webpack_require__(11);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _lodash = __webpack_require__(28);

var _lodash2 = _interopRequireDefault(_lodash);

var _nucleus = __webpack_require__(1);

var _lifecycleaspect = __webpack_require__(9);

var _reactScroll = __webpack_require__(13);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function setServiceUrl(url) {
  _nucleus.languageService.url = url;
}

// prettier-ignore


var BappBase = function (_React$Component) {
  (0, _inherits3["default"])(BappBase, _React$Component);

  function BappBase(props) {
    (0, _classCallCheck3["default"])(this, BappBase);
    return (0, _possibleConstructorReturn3["default"])(this, (BappBase.__proto__ || (0, _getPrototypeOf2["default"])(BappBase)).call(this, props));

    /*
    traceLifeCycle(this, "componentWillMount")
    traceLifeCycle(this, "componentWillUnmount")
    traceLifeCycle(this, "componentDidMount")
    traceLifeCycle(this, "componentWillUpdate")
    traceLifeCycle(this, "componentWillReceiveProps")
    traceLifeCycle(this, "shouldComponentUpdate")
    traceLifeCycle(this, "componentDidUpdate")
    traceLifeCycle(this, "render")
    */
  }

  (0, _createClass3["default"])(BappBase, [{
    key: "getChildContext",
    value: function () {
      function getChildContext() {
        return {
          setFormData: this.setFormData.bind(this)
        };
      }

      return getChildContext;
    }()

    // prettier-ignore

  }, {
    key: "shouldComponentUpdate",
    value: function () {
      function shouldComponentUpdate(nextProps, nextState, isShallowComparison) {
        return (
          //$FlowFixMe
          this.props.location && this.props.location.pathname !== nextProps.location.pathname || !this.shallowEqual(nextProps, this.props, isShallowComparison) || !this.shallowEqual(nextState, this.state, isShallowComparison)
        );
      }

      return shouldComponentUpdate;
    }()
  }, {
    key: "componentWillMount",
    value: function () {
      function componentWillMount() {
        if (_lifecycleaspect.lifecycleAspectConfig.componentWillMountAspect) {
          _lifecycleaspect.lifecycleAspectConfig.componentWillMountAspect();
        }
      }

      return componentWillMount;
    }()
  }, {
    key: "componentDidMount",
    value: function () {
      function componentDidMount() {
        if (_lifecycleaspect.lifecycleAspectConfig.componentDidMountAspect) {
          _lifecycleaspect.lifecycleAspectConfig.componentDidMountAspect();
        }
      }

      return componentDidMount;
    }()
  }, {
    key: "componentWillUnmount",
    value: function () {
      function componentWillUnmount() {
        if (_lifecycleaspect.lifecycleAspectConfig.componentWillUnmountAspect) {
          _lifecycleaspect.lifecycleAspectConfig.componentWillUnmountAspect();
        }
      }

      return componentWillUnmount;
    }()
  }, {
    key: "shallowEqual",
    value: function () {
      function shallowEqual(objA, objB, isShallowComparison) {
        if (isShallowComparison === false) {
          return true;
        }
        if (_lodash2["default"].isEqual(objA, objB)) {
          return true;
        }
        if ((typeof objA === "undefined" ? "undefined" : (0, _typeof3["default"])(objA)) !== "object" || objA === null || (typeof objB === "undefined" ? "undefined" : (0, _typeof3["default"])(objB)) !== "object" || objB === null) {
          return false;
        }
        var keysA = (0, _keys2["default"])(objA);
        var keysB = (0, _keys2["default"])(objB);
        if (keysA.length !== keysB.length) {
          return false;
        }
        var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
        for (var i = 0; i < keysA.length; i++) {
          if (keysA[i] == "routing" || keysA[i] == "history" || keysA[i] == "location" || keysA[i] == "match") {
            continue;
          }
          if (!bHasOwnProperty(keysA[i]) || !_lodash2["default"].isEqual(objA[keysA[i]], objB[keysA[i]])) {
            return false;
          }
        }
        return true;
      }

      return shallowEqual;
    }()
  }, {
    key: "changeLanguage",
    value: function () {
      function changeLanguage(newLang) {
        return _nucleus.languageService.changeLanguage(newLang);
      }

      return changeLanguage;
    }()
  }, {
    key: "translate",
    value: function () {
      function translate(key, args) {
        return _nucleus.languageService.translate(key, args);
      }

      return translate;
    }()
  }, {
    key: "getElement",
    value: function () {
      function getElement(elementName) {
        return React.createElement(_reactScroll.Element, { name: elementName });
      }

      return getElement;
    }()
  }, {
    key: "setScroll",
    value: function () {
      function setScroll(direction, positionInPixels, options, elementName) {
        if (direction === "TOP") {
          _reactScroll.animateScroll.scrollToTop(options);
        } else if (direction === "BOTTOM") {
          _reactScroll.animateScroll.scrollToBottom(options);
        } else if (direction === "TO") {
          _reactScroll.animateScroll.scrollTo(positionInPixels, options);
        } else if (direction === "MORE") {
          _reactScroll.animateScroll.scrollMore(positionInPixels, options);
        } else if (direction === "WITHELEMENT") {
          _reactScroll.scroller.scrollTo(elementName, options);
        }
      }

      return setScroll;
    }()
  }, {
    key: "subscribeToScroll",
    value: function () {
      function subscribeToScroll(callback) {
        window.addEventListener("scroll", callback);
      }

      return subscribeToScroll;
    }()
  }, {
    key: "unsubscribeToScroll",
    value: function () {
      function unsubscribeToScroll(callback) {
        window.removeEventListener("scroll", callback);
      }

      return unsubscribeToScroll;
    }()
  }, {
    key: "setFormData",
    value: function () {
      function setFormData(data) {
        this.setState(data);
      }

      return setFormData;
    }()
  }, {
    key: "render",
    value: function () {
      function render() {
        return null;
      }

      return render;
    }()
  }, {
    key: "lang",
    get: function () {
      function get() {
        return _nucleus.languageService.query();
      }

      return get;
    }()
  }]);
  return BappBase;
}(React.Component);

BappBase.childContextTypes = {
  setFormData: _propTypes2["default"].func
};

exports["default"] = BappBase;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("rPdZ");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = __webpack_require__(2);

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = __webpack_require__(3);

var _typeof3 = _interopRequireDefault(_typeof2);

var _getPrototypeOf = __webpack_require__(4);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(5);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(6);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(7);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(8);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(0);

var React = _interopRequireWildcard(_react);

var _nucleus = __webpack_require__(1);

var _lifecycleaspect = __webpack_require__(9);

var _reactScroll = __webpack_require__(13);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// prettier-ignore
var BappModule = function (_React$Component) {
  (0, _inherits3["default"])(BappModule, _React$Component);

  function BappModule(props) {
    (0, _classCallCheck3["default"])(this, BappModule);
    return (0, _possibleConstructorReturn3["default"])(this, (BappModule.__proto__ || (0, _getPrototypeOf2["default"])(BappModule)).call(this, props));

    /*
    traceLifeCycle(this, "componentWillMount")
    traceLifeCycle(this, "componentWillUnmount")
    traceLifeCycle(this, "componentDidMount")
    traceLifeCycle(this, "componentWillUpdate")
    traceLifeCycle(this, "componentWillReceiveProps")
    traceLifeCycle(this, "shouldComponentUpdate")
    traceLifeCycle(this, "componentDidUpdate")
    traceLifeCycle(this, "render")
    */
  }

  // prettier-ignore


  (0, _createClass3["default"])(BappModule, [{
    key: "shouldComponentUpdate",
    value: function () {
      function shouldComponentUpdate(nextProps, nextState, isShallowComparison) {
        return (
          //$FlowFixMe
          this.props.location && this.props.location.pathname !== nextProps.location.pathname || !this.shallowEqual(nextProps, this.props, isShallowComparison) || !this.shallowEqual(nextState, this.state, isShallowComparison)
        );
      }

      return shouldComponentUpdate;
    }()
  }, {
    key: "componentWillMount",
    value: function () {
      function componentWillMount() {
        if (_lifecycleaspect.lifecycleAspectConfig.componentWillMountAspect) {
          _lifecycleaspect.lifecycleAspectConfig.componentWillMountAspect();
        }
      }

      return componentWillMount;
    }()
  }, {
    key: "componentDidMount",
    value: function () {
      function componentDidMount() {
        if (_lifecycleaspect.lifecycleAspectConfig.componentDidMountAspect) {
          _lifecycleaspect.lifecycleAspectConfig.componentDidMountAspect();
        }
      }

      return componentDidMount;
    }()
  }, {
    key: "componentWillUnmount",
    value: function () {
      function componentWillUnmount() {
        if (_lifecycleaspect.lifecycleAspectConfig.componentWillUnmountAspect) {
          _lifecycleaspect.lifecycleAspectConfig.componentWillUnmountAspect();
        }
      }

      return componentWillUnmount;
    }()
  }, {
    key: "shallowEqual",
    value: function () {
      function shallowEqual(objA, objB, isShallowComparison) {
        if (isShallowComparison === false) {
          return true;
        }
        if (objA === objB) {
          return true;
        }
        if ((typeof objA === "undefined" ? "undefined" : (0, _typeof3["default"])(objA)) !== "object" || objA === null || (typeof objB === "undefined" ? "undefined" : (0, _typeof3["default"])(objB)) !== "object" || objB === null) {
          return false;
        }
        var keysA = (0, _keys2["default"])(objA);
        var keysB = (0, _keys2["default"])(objB);
        if (keysA.length !== keysB.length) {
          return false;
        }
        var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
        for (var i = 0; i < keysA.length; i++) {
          if (keysA[i] == "routing" || keysA[i] == "history" || keysA[i] == "location" || keysA[i] == "match") {
            continue;
          }
          if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
            return false;
          }
        }
        return true;
      }

      return shallowEqual;
    }()
  }, {
    key: "translate",
    value: function () {
      function translate(key, args) {
        return _nucleus.languageService.translate(key, args);
      }

      return translate;
    }()
  }, {
    key: "changeLanguage",
    value: function () {
      function changeLanguage(newLang) {
        return _nucleus.languageService.changeLanguage(newLang);
      }

      return changeLanguage;
    }()
  }, {
    key: "getElement",
    value: function () {
      function getElement(elementName) {
        return React.createElement(_reactScroll.Element, { name: elementName });
      }

      return getElement;
    }()
  }, {
    key: "setScroll",
    value: function () {
      function setScroll(direction, positionInPixels, options, elementName) {
        if (direction === "TOP") {
          _reactScroll.animateScroll.scrollToTop(options);
        } else if (direction === "BOTTOM") {
          _reactScroll.animateScroll.scrollToBottom(options);
        } else if (direction === "TO") {
          _reactScroll.animateScroll.scrollTo(positionInPixels, options);
        } else if (direction === "MORE") {
          _reactScroll.animateScroll.scrollMore(positionInPixels, options);
        } else if (direction === "WITHELEMENT") {
          _reactScroll.scroller.scrollTo(elementName, options);
        }
      }

      return setScroll;
    }()
  }, {
    key: "subscribeToScroll",
    value: function () {
      function subscribeToScroll(callback) {
        window.addEventListener("scroll", callback);
      }

      return subscribeToScroll;
    }()
  }, {
    key: "unsubscribeToScroll",
    value: function () {
      function unsubscribeToScroll(callback) {
        window.removeEventListener("scroll", callback);
      }

      return unsubscribeToScroll;
    }()
  }, {
    key: "render",
    value: function () {
      function render() {
        return null;
      }

      return render;
    }()
  }, {
    key: "lang",
    get: function () {
      function get() {
        return _nucleus.languageService.query();
      }

      return get;
    }()
  }]);
  return BappModule;
}(React.Component);

exports["default"] = BappModule;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("kiBT");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.signalRConnect = signalRConnect;
exports.webSocketConnect = webSocketConnect;

var _signalR = __webpack_require__(17);

//parameters
//config = {
//    url : Base SignalR connection URL
//    hubName : Hub name that serves action to listen
//    actionName : Action name that connection will listen
//}
//options = {
//  connectionOptions = {
//    useDefaultPath : 
//    qs: Query string object. { token : "" }     
//  },
//  connectionStartOptions = {
//    { transport: 'longPolling' }
//  }
//}

// returns connected hub. use off method with actionName to disconnect hub.
function signalRConnect() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { url: "", hubName: "", actionName: "" };
    var actionCallback = arguments[1];
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { connectionOptions: {}, connectionStartOptions: {} };
    var connectionSucceedCallback = arguments[3];
    var connectionFailedCallback = arguments[4];

    var connection = (0, _signalR.hubConnection)(config.url, options.connectionOptions);
    var hubProxy = connection.createHubProxy(config.hubName);
    hubProxy.on(config.actionName, function (data) {
        actionCallback(data);
    });
    connection.start(options.connectionStartOptions).done(connectionSucceedCallback).fail(connectionFailedCallback);
    return hubProxy;
}

function webSocketConnect() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { url: "" };
    var actionCallback = arguments[1];
    var connectionSucceedCallback = arguments[2];
    var connectionFailedCallback = arguments[3];

    var socket = new WebSocket(config.url);
    if (connectionSucceedCallback) socket.onopen = function (event) {
        connectionSucceedCallback(event);
    };
    if (connectionFailedCallback) socket.onerror = function (event) {
        connectionFailedCallback(event);
    };
    if (actionCallback) socket.onmessage = function (event) {
        actionCallback(event.data);
    };
}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _iterator = __webpack_require__(18);

var _iterator2 = _interopRequireDefault(_iterator);

var _typeof3 = __webpack_require__(3);

var _typeof4 = _interopRequireDefault(_typeof3);

var _symbol = __webpack_require__(19);

var _symbol2 = _interopRequireDefault(_symbol);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof _symbol2["default"] === "function" && (0, _typeof4["default"])(_iterator2["default"]) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : (0, _typeof4["default"])(obj);
} : function (obj) {
    return obj && typeof _symbol2["default"] === "function" && obj.constructor === _symbol2["default"] && obj !== _symbol2["default"].prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : (0, _typeof4["default"])(obj);
};

var jQueryShim = __webpack_require__(20);

/* jquery.signalR.core.js */
/*global window:false */
/*!
 * ASP.NET SignalR JavaScript Library v2.2.1
 * http://signalr.net/
 *
 * Copyright (c) .NET Foundation. All rights reserved.
 * Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
 *
 */

/// <reference path="Scripts/jquery-1.6.4.js" />
/// <reference path="jquery.signalR.version.js" />
if (typeof window !== "undefined") {
    (function ($, window, undefined) {

        var resources = {
            nojQuery: "jQuery was not found. Please ensure jQuery is referenced before the SignalR client JavaScript file.",
            noTransportOnInit: "No transport could be initialized successfully. Try specifying a different transport or none at all for auto initialization.",
            errorOnNegotiate: "Error during negotiation request.",
            stoppedWhileLoading: "The connection was stopped during page load.",
            stoppedWhileNegotiating: "The connection was stopped during the negotiate request.",
            errorParsingNegotiateResponse: "Error parsing negotiate response.",
            errorDuringStartRequest: "Error during start request. Stopping the connection.",
            stoppedDuringStartRequest: "The connection was stopped during the start request.",
            errorParsingStartResponse: "Error parsing start response: '{0}'. Stopping the connection.",
            invalidStartResponse: "Invalid start response: '{0}'. Stopping the connection.",
            protocolIncompatible: "You are using a version of the client that isn't compatible with the server. Client version {0}, server version {1}.",
            sendFailed: "Send failed.",
            parseFailed: "Failed at parsing response: {0}",
            longPollFailed: "Long polling request failed.",
            eventSourceFailedToConnect: "EventSource failed to connect.",
            eventSourceError: "Error raised by EventSource",
            webSocketClosed: "WebSocket closed.",
            pingServerFailedInvalidResponse: "Invalid ping response when pinging server: '{0}'.",
            pingServerFailed: "Failed to ping server.",
            pingServerFailedStatusCode: "Failed to ping server.  Server responded with status code {0}, stopping the connection.",
            pingServerFailedParse: "Failed to parse ping server response, stopping the connection.",
            noConnectionTransport: "Connection is in an invalid state, there is no transport active.",
            webSocketsInvalidState: "The Web Socket transport is in an invalid state, transitioning into reconnecting.",
            reconnectTimeout: "Couldn't reconnect within the configured timeout of {0} ms, disconnecting.",
            reconnectWindowTimeout: "The client has been inactive since {0} and it has exceeded the inactivity timeout of {1} ms. Stopping the connection."
        };

        if (typeof $ !== "function") {
            // no jQuery!
            throw new Error(resources.nojQuery);
        }

        var _signalR,
            _connection,
            _pageLoaded = window.document.readyState === "complete",
            _pageWindow = $(window),
            _negotiateAbortText = "__Negotiate Aborted__",
            events = {
            onStart: "onStart",
            onStarting: "onStarting",
            onReceived: "onReceived",
            onError: "onError",
            onConnectionSlow: "onConnectionSlow",
            onReconnecting: "onReconnecting",
            onReconnect: "onReconnect",
            onStateChanged: "onStateChanged",
            onDisconnect: "onDisconnect"
        },
            ajaxDefaults = {
            processData: true,
            timeout: null,
            async: true,
            global: false,
            cache: false
        },
            _log = function () {
            function _log(msg, logging) {
                if (logging === false) {
                    return;
                }
                var m;
                if (typeof window.console === "undefined") {
                    return;
                }
                m = "[" + new Date().toTimeString() + "] SignalR: " + msg;
                if (window.console.debug) {
                    window.console.debug(m);
                } else if (window.console.log) {
                    window.console.log(m);
                }
            }

            return _log;
        }(),
            changeState = function () {
            function changeState(connection, expectedState, newState) {
                if (expectedState === connection.state) {
                    connection.state = newState;

                    $(connection).triggerHandler(events.onStateChanged, [{ oldState: expectedState, newState: newState }]);
                    return true;
                }

                return false;
            }

            return changeState;
        }(),
            isDisconnecting = function () {
            function isDisconnecting(connection) {
                return connection.state === _signalR.connectionState.disconnected;
            }

            return isDisconnecting;
        }(),
            supportsKeepAlive = function () {
            function supportsKeepAlive(connection) {
                return connection._.keepAliveData.activated && connection.transport.supportsKeepAlive(connection);
            }

            return supportsKeepAlive;
        }(),
            configureStopReconnectingTimeout = function () {
            function configureStopReconnectingTimeout(connection) {
                var stopReconnectingTimeout, onReconnectTimeout;

                // Check if this connection has already been configured to stop reconnecting after a specified timeout.
                // Without this check if a connection is stopped then started events will be bound multiple times.
                if (!connection._.configuredStopReconnectingTimeout) {
                    onReconnectTimeout = function () {
                        function onReconnectTimeout(connection) {
                            var message = _signalR._.format(_signalR.resources.reconnectTimeout, connection.disconnectTimeout);
                            connection.log(message);
                            $(connection).triggerHandler(events.onError, [_signalR._.error(message, /* source */"TimeoutException")]);
                            connection.stop( /* async */false, /* notifyServer */false);
                        }

                        return onReconnectTimeout;
                    }();

                    connection.reconnecting(function () {
                        var connection = this;

                        // Guard against state changing in a previous user defined even handler
                        if (connection.state === _signalR.connectionState.reconnecting) {
                            stopReconnectingTimeout = window.setTimeout(function () {
                                onReconnectTimeout(connection);
                            }, connection.disconnectTimeout);
                        }
                    });

                    connection.stateChanged(function (data) {
                        if (data.oldState === _signalR.connectionState.reconnecting) {
                            // Clear the pending reconnect timeout check
                            window.clearTimeout(stopReconnectingTimeout);
                        }
                    });

                    connection._.configuredStopReconnectingTimeout = true;
                }
            }

            return configureStopReconnectingTimeout;
        }();

        _signalR = function () {
            function signalR(url, qs, logging) {
                /// <summary>Creates a new SignalR connection for the given url</summary>
                /// <param name="url" type="String">The URL of the long polling endpoint</param>
                /// <param name="qs" type="Object">
                ///     [Optional] Custom querystring parameters to add to the connection URL.
                ///     If an object, every non-function member will be added to the querystring.
                ///     If a string, it's added to the QS as specified.
                /// </param>
                /// <param name="logging" type="Boolean">
                ///     [Optional] A flag indicating whether connection logging is enabled to the browser
                ///     console/log. Defaults to false.
                /// </param>

                return new _signalR.fn.init(url, qs, logging);
            }

            return signalR;
        }();

        _signalR._ = {
            defaultContentType: "application/x-www-form-urlencoded; charset=UTF-8",

            ieVersion: function () {
                var version, matches;

                if (window.navigator.appName === 'Microsoft Internet Explorer') {
                    // Check if the user agent has the pattern "MSIE (one or more numbers).(one or more numbers)";
                    matches = /MSIE ([0-9]+\.[0-9]+)/.exec(window.navigator.userAgent);

                    if (matches) {
                        version = window.parseFloat(matches[1]);
                    }
                }

                // undefined value means not IE
                return version;
            }(),

            error: function () {
                function error(message, source, context) {
                    var e = new Error(message);
                    e.source = source;

                    if (typeof context !== "undefined") {
                        e.context = context;
                    }

                    return e;
                }

                return error;
            }(),

            transportError: function () {
                function transportError(message, transport, source, context) {
                    var e = this.error(message, source, context);
                    e.transport = transport ? transport.name : undefined;
                    return e;
                }

                return transportError;
            }(),

            format: function () {
                function format() {
                    /// <summary>Usage: format("Hi {0}, you are {1}!", "Foo", 100) </summary>
                    var s = arguments[0];
                    for (var i = 0; i < arguments.length - 1; i++) {
                        s = s.replace("{" + i + "}", arguments[i + 1]);
                    }
                    return s;
                }

                return format;
            }(),

            firefoxMajorVersion: function () {
                function firefoxMajorVersion(userAgent) {
                    // Firefox user agents: http://useragentstring.com/pages/Firefox/
                    var matches = userAgent.match(/Firefox\/(\d+)/);
                    if (!matches || !matches.length || matches.length < 2) {
                        return 0;
                    }
                    return parseInt(matches[1], 10 /* radix */);
                }

                return firefoxMajorVersion;
            }(),

            configurePingInterval: function () {
                function configurePingInterval(connection) {
                    var config = connection._.config,
                        onFail = function () {
                        function onFail(error) {
                            $(connection).triggerHandler(events.onError, [error]);
                        }

                        return onFail;
                    }();

                    if (config && !connection._.pingIntervalId && config.pingInterval) {
                        connection._.pingIntervalId = window.setInterval(function () {
                            _signalR.transports._logic.pingServer(connection).fail(onFail);
                        }, config.pingInterval);
                    }
                }

                return configurePingInterval;
            }()
        };

        _signalR.events = events;

        _signalR.resources = resources;

        _signalR.ajaxDefaults = ajaxDefaults;

        _signalR.changeState = changeState;

        _signalR.isDisconnecting = isDisconnecting;

        _signalR.connectionState = {
            connecting: 0,
            connected: 1,
            reconnecting: 2,
            disconnected: 4
        };

        _signalR.hub = {
            start: function () {
                function start() {
                    // This will get replaced with the real hub connection start method when hubs is referenced correctly
                    throw new Error("SignalR: Error loading hubs. Ensure your hubs reference is correct, e.g. <script src='/signalr/js'></script>.");
                }

                return start;
            }()
        };

        // .on() was added in version 1.7.0, .load() was removed in version 3.0.0 so we fallback to .load() if .on() does
        // not exist to not break existing applications
        if (typeof _pageWindow.on == "function") {
            _pageWindow.on("load", function () {
                _pageLoaded = true;
            });
        } else {
            _pageWindow.load(function () {
                _pageLoaded = true;
            });
        }

        function validateTransport(requestedTransport, connection) {
            /// <summary>Validates the requested transport by cross checking it with the pre-defined signalR.transports</summary>
            /// <param name="requestedTransport" type="Object">The designated transports that the user has specified.</param>
            /// <param name="connection" type="signalR">The connection that will be using the requested transports.  Used for logging purposes.</param>
            /// <returns type="Object" />

            if ($.isArray(requestedTransport)) {
                // Go through transport array and remove an "invalid" tranports
                for (var i = requestedTransport.length - 1; i >= 0; i--) {
                    var transport = requestedTransport[i];
                    if ($.type(transport) !== "string" || !_signalR.transports[transport]) {
                        connection.log("Invalid transport: " + transport + ", removing it from the transports list.");
                        requestedTransport.splice(i, 1);
                    }
                }

                // Verify we still have transports left, if we dont then we have invalid transports
                if (requestedTransport.length === 0) {
                    connection.log("No transports remain within the specified transport array.");
                    requestedTransport = null;
                }
            } else if (!_signalR.transports[requestedTransport] && requestedTransport !== "auto") {
                connection.log("Invalid transport: " + requestedTransport.toString() + ".");
                requestedTransport = null;
            } else if (requestedTransport === "auto" && _signalR._.ieVersion <= 8) {
                // If we're doing an auto transport and we're IE8 then force longPolling, #1764
                return ["longPolling"];
            }

            return requestedTransport;
        }

        function getDefaultPort(protocol) {
            if (protocol === "http:") {
                return 80;
            } else if (protocol === "https:") {
                return 443;
            }
        }

        function addDefaultPort(protocol, url) {
            // Remove ports  from url.  We have to check if there's a / or end of line
            // following the port in order to avoid removing ports such as 8080.
            if (url.match(/:\d+$/)) {
                return url;
            } else {
                return url + ":" + getDefaultPort(protocol);
            }
        }

        function ConnectingMessageBuffer(connection, drainCallback) {
            var that = this,
                buffer = [];

            that.tryBuffer = function (message) {
                if (connection.state === $.signalR.connectionState.connecting) {
                    buffer.push(message);

                    return true;
                }

                return false;
            };

            that.drain = function () {
                // Ensure that the connection is connected when we drain (do not want to drain while a connection is not active)
                if (connection.state === $.signalR.connectionState.connected) {
                    while (buffer.length > 0) {
                        drainCallback(buffer.shift());
                    }
                }
            };

            that.clear = function () {
                buffer = [];
            };
        }

        _signalR.fn = _signalR.prototype = {
            init: function () {
                function init(url, qs, logging) {
                    var $connection = $(this);

                    this.url = url;
                    this.qs = qs;
                    this.lastError = null;
                    this._ = {
                        keepAliveData: {},
                        connectingMessageBuffer: new ConnectingMessageBuffer(this, function (message) {
                            $connection.triggerHandler(events.onReceived, [message]);
                        }),
                        lastMessageAt: new Date().getTime(),
                        lastActiveAt: new Date().getTime(),
                        beatInterval: 5000, // Default value, will only be overridden if keep alive is enabled,
                        beatHandle: null,
                        totalTransportConnectTimeout: 0 // This will be the sum of the TransportConnectTimeout sent in response to negotiate and connection.transportConnectTimeout
                    };
                    if (typeof logging === "boolean") {
                        this.logging = logging;
                    }
                }

                return init;
            }(),

            _parseResponse: function () {
                function _parseResponse(response) {
                    var that = this;

                    if (!response) {
                        return response;
                    } else if (typeof response === "string") {
                        return that.json.parse(response);
                    } else {
                        return response;
                    }
                }

                return _parseResponse;
            }(),

            _originalJson: window.JSON,

            json: window.JSON,

            isCrossDomain: function () {
                function isCrossDomain(url, against) {
                    /// <summary>Checks if url is cross domain</summary>
                    /// <param name="url" type="String">The base URL</param>
                    /// <param name="against" type="Object">
                    ///     An optional argument to compare the URL against, if not specified it will be set to window.location.
                    ///     If specified it must contain a protocol and a host property.
                    /// </param>
                    var link;

                    url = $.trim(url);

                    against = against || window.location;

                    if (url.indexOf("http") !== 0) {
                        return false;
                    }

                    // Create an anchor tag.
                    link = window.document.createElement("a");
                    link.href = url;

                    // When checking for cross domain we have to special case port 80 because the window.location will remove the
                    return link.protocol + addDefaultPort(link.protocol, link.host) !== against.protocol + addDefaultPort(against.protocol, against.host);
                }

                return isCrossDomain;
            }(),

            ajaxDataType: "text",

            contentType: "application/json; charset=UTF-8",

            logging: false,

            state: _signalR.connectionState.disconnected,

            clientProtocol: "1.5",

            reconnectDelay: 2000,

            transportConnectTimeout: 0,

            disconnectTimeout: 30000, // This should be set by the server in response to the negotiate request (30s default)

            reconnectWindow: 30000, // This should be set by the server in response to the negotiate request

            keepAliveWarnAt: 2 / 3, // Warn user of slow connection if we breach the X% mark of the keep alive timeout

            start: function () {
                function start(options, callback) {
                    /// <summary>Starts the connection</summary>
                    /// <param name="options" type="Object">Options map</param>
                    /// <param name="callback" type="Function">A callback function to execute when the connection has started</param>
                    var connection = this,
                        config = {
                        pingInterval: 300000,
                        waitForPageLoad: true,
                        transport: "auto",
                        jsonp: false
                    },
                        _initialize,
                        deferred = connection._deferral || $.Deferred(),

                    // Check to see if there is a pre-existing deferral that's being built on, if so we want to keep using it
                    parser = window.document.createElement("a");

                    connection.lastError = null;

                    // Persist the deferral so that if start is called multiple times the same deferral is used.
                    connection._deferral = deferred;

                    if (!connection.json) {
                        // no JSON!
                        throw new Error("SignalR: No JSON parser found. Please ensure json2.js is referenced before the SignalR.js file if you need to support clients without native JSON parsing support, e.g. IE<8.");
                    }

                    if ($.type(options) === "function") {
                        // Support calling with single callback parameter
                        callback = options;
                    } else if ($.type(options) === "object") {
                        $.extend(config, options);
                        if ($.type(config.callback) === "function") {
                            callback = config.callback;
                        }
                    }

                    config.transport = validateTransport(config.transport, connection);

                    // If the transport is invalid throw an error and abort start
                    if (!config.transport) {
                        throw new Error("SignalR: Invalid transport(s) specified, aborting start.");
                    }

                    connection._.config = config;

                    // Check to see if start is being called prior to page load
                    // If waitForPageLoad is true we then want to re-direct function call to the window load event
                    if (!_pageLoaded && config.waitForPageLoad === true) {
                        connection._.deferredStartHandler = function () {
                            connection.start(options, callback);
                        };
                        _pageWindow.bind("load", connection._.deferredStartHandler);

                        return deferred.promise();
                    }

                    // If we're already connecting just return the same deferral as the original connection start
                    if (connection.state === _signalR.connectionState.connecting) {
                        return deferred.promise();
                    } else if (changeState(connection, _signalR.connectionState.disconnected, _signalR.connectionState.connecting) === false) {
                        // We're not connecting so try and transition into connecting.
                        // If we fail to transition then we're either in connected or reconnecting.

                        deferred.resolve(connection);
                        return deferred.promise();
                    }

                    configureStopReconnectingTimeout(connection);

                    // Resolve the full url
                    parser.href = connection.url;
                    if (!parser.protocol || parser.protocol === ":") {
                        connection.protocol = window.document.location.protocol;
                        connection.host = parser.host || window.document.location.host;
                    } else {
                        connection.protocol = parser.protocol;
                        connection.host = parser.host;
                    }

                    connection.baseUrl = connection.protocol + "//" + connection.host;

                    // Set the websocket protocol
                    connection.wsProtocol = connection.protocol === "https:" ? "wss://" : "ws://";

                    // If jsonp with no/auto transport is specified, then set the transport to long polling
                    // since that is the only transport for which jsonp really makes sense.
                    // Some developers might actually choose to specify jsonp for same origin requests
                    // as demonstrated by Issue #623.
                    if (config.transport === "auto" && config.jsonp === true) {
                        config.transport = "longPolling";
                    }

                    // If the url is protocol relative, prepend the current windows protocol to the url.
                    if (connection.url.indexOf("//") === 0) {
                        connection.url = window.location.protocol + connection.url;
                        connection.log("Protocol relative URL detected, normalizing it to '" + connection.url + "'.");
                    }

                    if (this.isCrossDomain(connection.url)) {
                        connection.log("Auto detected cross domain url.");

                        if (config.transport === "auto") {
                            // TODO: Support XDM with foreverFrame
                            config.transport = ["webSockets", "serverSentEvents", "longPolling"];
                        }

                        if (typeof config.withCredentials === "undefined") {
                            config.withCredentials = true;
                        }

                        // Determine if jsonp is the only choice for negotiation, ajaxSend and ajaxAbort.
                        // i.e. if the browser doesn't supports CORS
                        // If it is, ignore any preference to the contrary, and switch to jsonp.
                        if (!config.jsonp) {
                            config.jsonp = !$.support.cors;

                            if (config.jsonp) {
                                connection.log("Using jsonp because this browser doesn't support CORS.");
                            }
                        }

                        connection.contentType = _signalR._.defaultContentType;
                    }

                    connection.withCredentials = config.withCredentials;

                    connection.ajaxDataType = config.jsonp ? "jsonp" : "text";

                    $(connection).bind(events.onStart, function (e, data) {
                        if ($.type(callback) === "function") {
                            callback.call(connection);
                        }
                        deferred.resolve(connection);
                    });

                    connection._.initHandler = _signalR.transports._logic.initHandler(connection);

                    _initialize = function () {
                        function initialize(transports, index) {
                            var noTransportError = _signalR._.error(resources.noTransportOnInit);

                            index = index || 0;
                            if (index >= transports.length) {
                                if (index === 0) {
                                    connection.log("No transports supported by the server were selected.");
                                } else if (index === 1) {
                                    connection.log("No fallback transports were selected.");
                                } else {
                                    connection.log("Fallback transports exhausted.");
                                }

                                // No transport initialized successfully
                                $(connection).triggerHandler(events.onError, [noTransportError]);
                                deferred.reject(noTransportError);
                                // Stop the connection if it has connected and move it into the disconnected state
                                connection.stop();
                                return;
                            }

                            // The connection was aborted
                            if (connection.state === _signalR.connectionState.disconnected) {
                                return;
                            }

                            var transportName = transports[index],
                                transport = _signalR.transports[transportName],
                                onFallback = function () {
                                function onFallback() {
                                    _initialize(transports, index + 1);
                                }

                                return onFallback;
                            }();

                            connection.transport = transport;

                            try {
                                connection._.initHandler.start(transport, function () {
                                    // success
                                    // Firefox 11+ doesn't allow sync XHR withCredentials: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#withCredentials
                                    var isFirefox11OrGreater = _signalR._.firefoxMajorVersion(window.navigator.userAgent) >= 11,
                                        asyncAbort = !!connection.withCredentials && isFirefox11OrGreater;

                                    connection.log("The start request succeeded. Transitioning to the connected state.");

                                    if (supportsKeepAlive(connection)) {
                                        _signalR.transports._logic.monitorKeepAlive(connection);
                                    }

                                    _signalR.transports._logic.startHeartbeat(connection);

                                    // Used to ensure low activity clients maintain their authentication.
                                    // Must be configured once a transport has been decided to perform valid ping requests.
                                    _signalR._.configurePingInterval(connection);

                                    if (!changeState(connection, _signalR.connectionState.connecting, _signalR.connectionState.connected)) {
                                        connection.log("WARNING! The connection was not in the connecting state.");
                                    }

                                    // Drain any incoming buffered messages (messages that came in prior to connect)
                                    connection._.connectingMessageBuffer.drain();

                                    $(connection).triggerHandler(events.onStart);

                                    // wire the stop handler for when the user leaves the page
                                    _pageWindow.bind("unload", function () {
                                        connection.log("Window unloading, stopping the connection.");

                                        connection.stop(asyncAbort);
                                    });

                                    if (isFirefox11OrGreater) {
                                        // Firefox does not fire cross-domain XHRs in the normal unload handler on tab close.
                                        // #2400
                                        _pageWindow.bind("beforeunload", function () {
                                            // If connection.stop() runs runs in beforeunload and fails, it will also fail
                                            // in unload unless connection.stop() runs after a timeout.
                                            window.setTimeout(function () {
                                                connection.stop(asyncAbort);
                                            }, 0);
                                        });
                                    }
                                }, onFallback);
                            } catch (error) {
                                connection.log(transport.name + " transport threw '" + error.message + "' when attempting to start.");
                                onFallback();
                            }
                        }

                        return initialize;
                    }();

                    var url = connection.url + "/negotiate",
                        onFailed = function () {
                        function onFailed(error, connection) {
                            var err = _signalR._.error(resources.errorOnNegotiate, error, connection._.negotiateRequest);

                            $(connection).triggerHandler(events.onError, err);
                            deferred.reject(err);
                            // Stop the connection if negotiate failed
                            connection.stop();
                        }

                        return onFailed;
                    }();

                    $(connection).triggerHandler(events.onStarting);

                    url = _signalR.transports._logic.prepareQueryString(connection, url);

                    connection.log("Negotiating with '" + url + "'.");

                    // Save the ajax negotiate request object so we can abort it if stop is called while the request is in flight.
                    connection._.negotiateRequest = _signalR.transports._logic.ajax(connection, {
                        url: url,
                        error: function () {
                            function error(_error, statusText) {
                                // We don't want to cause any errors if we're aborting our own negotiate request.
                                if (statusText !== _negotiateAbortText) {
                                    onFailed(_error, connection);
                                } else {
                                    // This rejection will noop if the deferred has already been resolved or rejected.
                                    deferred.reject(_signalR._.error(resources.stoppedWhileNegotiating, null /* error */, connection._.negotiateRequest));
                                }
                            }

                            return error;
                        }(),
                        success: function () {
                            function success(result) {
                                var res,
                                    keepAliveData,
                                    protocolError,
                                    transports = [],
                                    supportedTransports = [];

                                try {
                                    res = connection._parseResponse(result);
                                } catch (error) {
                                    onFailed(_signalR._.error(resources.errorParsingNegotiateResponse, error), connection);
                                    return;
                                }

                                keepAliveData = connection._.keepAliveData;
                                connection.appRelativeUrl = res.Url;
                                connection.id = res.ConnectionId;
                                connection.token = res.ConnectionToken;
                                connection.webSocketServerUrl = res.WebSocketServerUrl;

                                // The long poll timeout is the ConnectionTimeout plus 10 seconds
                                connection._.pollTimeout = res.ConnectionTimeout * 1000 + 10000; // in ms

                                // Once the server has labeled the PersistentConnection as Disconnected, we should stop attempting to reconnect
                                // after res.DisconnectTimeout seconds.
                                connection.disconnectTimeout = res.DisconnectTimeout * 1000; // in ms

                                // Add the TransportConnectTimeout from the response to the transportConnectTimeout from the client to calculate the total timeout
                                connection._.totalTransportConnectTimeout = connection.transportConnectTimeout + res.TransportConnectTimeout * 1000;

                                // If we have a keep alive
                                if (res.KeepAliveTimeout) {
                                    // Register the keep alive data as activated
                                    keepAliveData.activated = true;

                                    // Timeout to designate when to force the connection into reconnecting converted to milliseconds
                                    keepAliveData.timeout = res.KeepAliveTimeout * 1000;

                                    // Timeout to designate when to warn the developer that the connection may be dead or is not responding.
                                    keepAliveData.timeoutWarning = keepAliveData.timeout * connection.keepAliveWarnAt;

                                    // Instantiate the frequency in which we check the keep alive.  It must be short in order to not miss/pick up any changes
                                    connection._.beatInterval = (keepAliveData.timeout - keepAliveData.timeoutWarning) / 3;
                                } else {
                                    keepAliveData.activated = false;
                                }

                                connection.reconnectWindow = connection.disconnectTimeout + (keepAliveData.timeout || 0);

                                if (!res.ProtocolVersion || res.ProtocolVersion !== connection.clientProtocol) {
                                    protocolError = _signalR._.error(_signalR._.format(resources.protocolIncompatible, connection.clientProtocol, res.ProtocolVersion));
                                    $(connection).triggerHandler(events.onError, [protocolError]);
                                    deferred.reject(protocolError);

                                    return;
                                }

                                $.each(_signalR.transports, function (key) {
                                    if (key.indexOf("_") === 0 || key === "webSockets" && !res.TryWebSockets) {
                                        return true;
                                    }
                                    supportedTransports.push(key);
                                });

                                if ($.isArray(config.transport)) {
                                    $.each(config.transport, function (_, transport) {
                                        if ($.inArray(transport, supportedTransports) >= 0) {
                                            transports.push(transport);
                                        }
                                    });
                                } else if (config.transport === "auto") {
                                    transports = supportedTransports;
                                } else if ($.inArray(config.transport, supportedTransports) >= 0) {
                                    transports.push(config.transport);
                                }

                                _initialize(transports);
                            }

                            return success;
                        }()
                    });

                    return deferred.promise();
                }

                return start;
            }(),

            starting: function () {
                function starting(callback) {
                    /// <summary>Adds a callback that will be invoked before anything is sent over the connection</summary>
                    /// <param name="callback" type="Function">A callback function to execute before the connection is fully instantiated.</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onStarting, function (e, data) {
                        callback.call(connection);
                    });
                    return connection;
                }

                return starting;
            }(),

            send: function () {
                function send(data) {
                    /// <summary>Sends data over the connection</summary>
                    /// <param name="data" type="String">The data to send over the connection</param>
                    /// <returns type="signalR" />
                    var connection = this;

                    if (connection.state === _signalR.connectionState.disconnected) {
                        // Connection hasn't been started yet
                        throw new Error("SignalR: Connection must be started before data can be sent. Call .start() before .send()");
                    }

                    if (connection.state === _signalR.connectionState.connecting) {
                        // Connection hasn't been started yet
                        throw new Error("SignalR: Connection has not been fully initialized. Use .start().done() or .start().fail() to run logic after the connection has started.");
                    }

                    connection.transport.send(connection, data);
                    // REVIEW: Should we return deferred here?
                    return connection;
                }

                return send;
            }(),

            received: function () {
                function received(callback) {
                    /// <summary>Adds a callback that will be invoked after anything is received over the connection</summary>
                    /// <param name="callback" type="Function">A callback function to execute when any data is received on the connection</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onReceived, function (e, data) {
                        callback.call(connection, data);
                    });
                    return connection;
                }

                return received;
            }(),

            stateChanged: function () {
                function stateChanged(callback) {
                    /// <summary>Adds a callback that will be invoked when the connection state changes</summary>
                    /// <param name="callback" type="Function">A callback function to execute when the connection state changes</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onStateChanged, function (e, data) {
                        callback.call(connection, data);
                    });
                    return connection;
                }

                return stateChanged;
            }(),

            error: function () {
                function error(callback) {
                    /// <summary>Adds a callback that will be invoked after an error occurs with the connection</summary>
                    /// <param name="callback" type="Function">A callback function to execute when an error occurs on the connection</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onError, function (e, errorData, sendData) {
                        connection.lastError = errorData;
                        // In practice 'errorData' is the SignalR built error object.
                        // In practice 'sendData' is undefined for all error events except those triggered by
                        // 'ajaxSend' and 'webSockets.send'.'sendData' is the original send payload.
                        callback.call(connection, errorData, sendData);
                    });
                    return connection;
                }

                return error;
            }(),

            disconnected: function () {
                function disconnected(callback) {
                    /// <summary>Adds a callback that will be invoked when the client disconnects</summary>
                    /// <param name="callback" type="Function">A callback function to execute when the connection is broken</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onDisconnect, function (e, data) {
                        callback.call(connection);
                    });
                    return connection;
                }

                return disconnected;
            }(),

            connectionSlow: function () {
                function connectionSlow(callback) {
                    /// <summary>Adds a callback that will be invoked when the client detects a slow connection</summary>
                    /// <param name="callback" type="Function">A callback function to execute when the connection is slow</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onConnectionSlow, function (e, data) {
                        callback.call(connection);
                    });

                    return connection;
                }

                return connectionSlow;
            }(),

            reconnecting: function () {
                function reconnecting(callback) {
                    /// <summary>Adds a callback that will be invoked when the underlying transport begins reconnecting</summary>
                    /// <param name="callback" type="Function">A callback function to execute when the connection enters a reconnecting state</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onReconnecting, function (e, data) {
                        callback.call(connection);
                    });
                    return connection;
                }

                return reconnecting;
            }(),

            reconnected: function () {
                function reconnected(callback) {
                    /// <summary>Adds a callback that will be invoked when the underlying transport reconnects</summary>
                    /// <param name="callback" type="Function">A callback function to execute when the connection is restored</param>
                    /// <returns type="signalR" />
                    var connection = this;
                    $(connection).bind(events.onReconnect, function (e, data) {
                        callback.call(connection);
                    });
                    return connection;
                }

                return reconnected;
            }(),

            stop: function () {
                function stop(async, notifyServer) {
                    /// <summary>Stops listening</summary>
                    /// <param name="async" type="Boolean">Whether or not to asynchronously abort the connection</param>
                    /// <param name="notifyServer" type="Boolean">Whether we want to notify the server that we are aborting the connection</param>
                    /// <returns type="signalR" />
                    var connection = this,


                    // Save deferral because this is always cleaned up
                    deferral = connection._deferral;

                    // Verify that we've bound a load event.
                    if (connection._.deferredStartHandler) {
                        // Unbind the event.
                        _pageWindow.unbind("load", connection._.deferredStartHandler);
                    }

                    // Always clean up private non-timeout based state.
                    delete connection._.config;
                    delete connection._.deferredStartHandler;

                    // This needs to be checked despite the connection state because a connection start can be deferred until page load.
                    // If we've deferred the start due to a page load we need to unbind the "onLoad" -> start event.
                    if (!_pageLoaded && (!connection._.config || connection._.config.waitForPageLoad === true)) {
                        connection.log("Stopping connection prior to negotiate.");

                        // If we have a deferral we should reject it
                        if (deferral) {
                            deferral.reject(_signalR._.error(resources.stoppedWhileLoading));
                        }

                        // Short-circuit because the start has not been fully started.
                        return;
                    }

                    if (connection.state === _signalR.connectionState.disconnected) {
                        return;
                    }

                    connection.log("Stopping connection.");

                    // Clear this no matter what
                    window.clearTimeout(connection._.beatHandle);
                    window.clearInterval(connection._.pingIntervalId);

                    if (connection.transport) {
                        connection.transport.stop(connection);

                        if (notifyServer !== false) {
                            connection.transport.abort(connection, async);
                        }

                        if (supportsKeepAlive(connection)) {
                            _signalR.transports._logic.stopMonitoringKeepAlive(connection);
                        }

                        connection.transport = null;
                    }

                    if (connection._.negotiateRequest) {
                        // If the negotiation request has already completed this will noop.
                        connection._.negotiateRequest.abort(_negotiateAbortText);
                        delete connection._.negotiateRequest;
                    }

                    // Ensure that initHandler.stop() is called before connection._deferral is deleted
                    if (connection._.initHandler) {
                        connection._.initHandler.stop();
                    }

                    delete connection._deferral;
                    delete connection.messageId;
                    delete connection.groupsToken;
                    delete connection.id;
                    delete connection._.pingIntervalId;
                    delete connection._.lastMessageAt;
                    delete connection._.lastActiveAt;

                    // Clear out our message buffer
                    connection._.connectingMessageBuffer.clear();

                    // Trigger the disconnect event
                    changeState(connection, connection.state, _signalR.connectionState.disconnected);
                    $(connection).triggerHandler(events.onDisconnect);

                    return connection;
                }

                return stop;
            }(),

            log: function () {
                function log(msg) {
                    _log(msg, this.logging);
                }

                return log;
            }()
        };

        _signalR.fn.init.prototype = _signalR.fn;

        _signalR.noConflict = function () {
            /// <summary>Reinstates the original value of $.connection and returns the signalR object for manual assignment</summary>
            /// <returns type="signalR" />
            if ($.connection === _signalR) {
                $.connection = _connection;
            }
            return _signalR;
        };

        if ($.connection) {
            _connection = $.connection;
        }

        $.connection = $.signalR = _signalR;
    })(jQueryShim, window);
    /* jquery.signalR.transports.common.js */
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

    /*global window:false */
    /// <reference path="jquery.signalR.core.js" />

    (function ($, window, undefined) {

        var signalR = $.signalR,
            events = $.signalR.events,
            changeState = $.signalR.changeState,
            startAbortText = "__Start Aborted__",
            transportLogic;

        signalR.transports = {};

        function beat(connection) {
            if (connection._.keepAliveData.monitoring) {
                checkIfAlive(connection);
            }

            // Ensure that we successfully marked active before continuing the heartbeat.
            if (transportLogic.markActive(connection)) {
                connection._.beatHandle = window.setTimeout(function () {
                    beat(connection);
                }, connection._.beatInterval);
            }
        }

        function checkIfAlive(connection) {
            var keepAliveData = connection._.keepAliveData,
                timeElapsed;

            // Only check if we're connected
            if (connection.state === signalR.connectionState.connected) {
                timeElapsed = new Date().getTime() - connection._.lastMessageAt;

                // Check if the keep alive has completely timed out
                if (timeElapsed >= keepAliveData.timeout) {
                    connection.log("Keep alive timed out.  Notifying transport that connection has been lost.");

                    // Notify transport that the connection has been lost
                    connection.transport.lostConnection(connection);
                } else if (timeElapsed >= keepAliveData.timeoutWarning) {
                    // This is to assure that the user only gets a single warning
                    if (!keepAliveData.userNotified) {
                        connection.log("Keep alive has been missed, connection may be dead/slow.");
                        $(connection).triggerHandler(events.onConnectionSlow);
                        keepAliveData.userNotified = true;
                    }
                } else {
                    keepAliveData.userNotified = false;
                }
            }
        }

        function getAjaxUrl(connection, path) {
            var url = connection.url + path;

            if (connection.transport) {
                url += "?transport=" + connection.transport.name;
            }

            return transportLogic.prepareQueryString(connection, url);
        }

        function InitHandler(connection) {
            this.connection = connection;

            this.startRequested = false;
            this.startCompleted = false;
            this.connectionStopped = false;
        }

        InitHandler.prototype = {
            start: function () {
                function start(transport, onSuccess, onFallback) {
                    var that = this,
                        connection = that.connection,
                        failCalled = false;

                    if (that.startRequested || that.connectionStopped) {
                        connection.log("WARNING! " + transport.name + " transport cannot be started. Initialization ongoing or completed.");
                        return;
                    }

                    connection.log(transport.name + " transport starting.");

                    transport.start(connection, function () {
                        if (!failCalled) {
                            that.initReceived(transport, onSuccess);
                        }
                    }, function (error) {
                        // Don't allow the same transport to cause onFallback to be called twice
                        if (!failCalled) {
                            failCalled = true;
                            that.transportFailed(transport, error, onFallback);
                        }

                        // Returns true if the transport should stop;
                        // false if it should attempt to reconnect
                        return !that.startCompleted || that.connectionStopped;
                    });

                    that.transportTimeoutHandle = window.setTimeout(function () {
                        if (!failCalled) {
                            failCalled = true;
                            connection.log(transport.name + " transport timed out when trying to connect.");
                            that.transportFailed(transport, undefined, onFallback);
                        }
                    }, connection._.totalTransportConnectTimeout);
                }

                return start;
            }(),

            stop: function () {
                function stop() {
                    this.connectionStopped = true;
                    window.clearTimeout(this.transportTimeoutHandle);
                    signalR.transports._logic.tryAbortStartRequest(this.connection);
                }

                return stop;
            }(),

            initReceived: function () {
                function initReceived(transport, onSuccess) {
                    var that = this,
                        connection = that.connection;

                    if (that.startRequested) {
                        connection.log("WARNING! The client received multiple init messages.");
                        return;
                    }

                    if (that.connectionStopped) {
                        return;
                    }

                    that.startRequested = true;
                    window.clearTimeout(that.transportTimeoutHandle);

                    connection.log(transport.name + " transport connected. Initiating start request.");
                    signalR.transports._logic.ajaxStart(connection, function () {
                        that.startCompleted = true;
                        onSuccess();
                    });
                }

                return initReceived;
            }(),

            transportFailed: function () {
                function transportFailed(transport, error, onFallback) {
                    var connection = this.connection,
                        deferred = connection._deferral,
                        wrappedError;

                    if (this.connectionStopped) {
                        return;
                    }

                    window.clearTimeout(this.transportTimeoutHandle);

                    if (!this.startRequested) {
                        transport.stop(connection);

                        connection.log(transport.name + " transport failed to connect. Attempting to fall back.");
                        onFallback();
                    } else if (!this.startCompleted) {
                        // Do not attempt to fall back if a start request is ongoing during a transport failure.
                        // Instead, trigger an error and stop the connection.
                        wrappedError = signalR._.error(signalR.resources.errorDuringStartRequest, error);

                        connection.log(transport.name + " transport failed during the start request. Stopping the connection.");
                        $(connection).triggerHandler(events.onError, [wrappedError]);
                        if (deferred) {
                            deferred.reject(wrappedError);
                        }

                        connection.stop();
                    } else {
                        // The start request has completed, but the connection has not stopped.
                        // No need to do anything here. The transport should attempt its normal reconnect logic.
                    }
                }

                return transportFailed;
            }()
        };

        transportLogic = signalR.transports._logic = {
            ajax: function () {
                function ajax(connection, options) {
                    return $.ajax($.extend( /*deep copy*/true, {}, $.signalR.ajaxDefaults, {
                        type: "GET",
                        data: {},
                        xhrFields: { withCredentials: connection.withCredentials },
                        contentType: connection.contentType,
                        dataType: connection.ajaxDataType
                    }, options));
                }

                return ajax;
            }(),

            pingServer: function () {
                function pingServer(connection) {
                    /// <summary>Pings the server</summary>
                    /// <param name="connection" type="signalr">Connection associated with the server ping</param>
                    /// <returns type="signalR" />
                    var url,
                        xhr,
                        deferral = $.Deferred();

                    if (connection.transport) {
                        url = connection.url + "/ping";

                        url = transportLogic.addQs(url, connection.qs);

                        xhr = transportLogic.ajax(connection, {
                            url: url,
                            success: function () {
                                function success(result) {
                                    var data;

                                    try {
                                        data = connection._parseResponse(result);
                                    } catch (error) {
                                        deferral.reject(signalR._.transportError(signalR.resources.pingServerFailedParse, connection.transport, error, xhr));
                                        connection.stop();
                                        return;
                                    }

                                    if (data.Response === "pong") {
                                        deferral.resolve();
                                    } else {
                                        deferral.reject(signalR._.transportError(signalR._.format(signalR.resources.pingServerFailedInvalidResponse, result), connection.transport, null /* error */
                                        , xhr));
                                    }
                                }

                                return success;
                            }(),
                            error: function () {
                                function error(_error2) {
                                    if (_error2.status === 401 || _error2.status === 403) {
                                        deferral.reject(signalR._.transportError(signalR._.format(signalR.resources.pingServerFailedStatusCode, _error2.status), connection.transport, _error2, xhr));
                                        connection.stop();
                                    } else {
                                        deferral.reject(signalR._.transportError(signalR.resources.pingServerFailed, connection.transport, _error2, xhr));
                                    }
                                }

                                return error;
                            }()
                        });
                    } else {
                        deferral.reject(signalR._.transportError(signalR.resources.noConnectionTransport, connection.transport));
                    }

                    return deferral.promise();
                }

                return pingServer;
            }(),

            prepareQueryString: function () {
                function prepareQueryString(connection, url) {
                    var preparedUrl;

                    // Use addQs to start since it handles the ?/& prefix for us
                    preparedUrl = transportLogic.addQs(url, "clientProtocol=" + connection.clientProtocol);

                    // Add the user-specified query string params if any
                    preparedUrl = transportLogic.addQs(preparedUrl, connection.qs);

                    if (connection.token) {
                        preparedUrl += "&connectionToken=" + window.encodeURIComponent(connection.token);
                    }

                    if (connection.data) {
                        preparedUrl += "&connectionData=" + window.encodeURIComponent(connection.data);
                    }

                    return preparedUrl;
                }

                return prepareQueryString;
            }(),

            addQs: function () {
                function addQs(url, qs) {
                    var appender = url.indexOf("?") !== -1 ? "&" : "?",
                        firstChar;

                    if (!qs) {
                        return url;
                    }

                    if ((typeof qs === 'undefined' ? 'undefined' : _typeof(qs)) === "object") {
                        return url + appender + $.param(qs);
                    }

                    if (typeof qs === "string") {
                        firstChar = qs.charAt(0);

                        if (firstChar === "?" || firstChar === "&") {
                            appender = "";
                        }

                        return url + appender + qs;
                    }

                    throw new Error("Query string property must be either a string or object.");
                }

                return addQs;
            }(),

            // BUG #2953: The url needs to be same otherwise it will cause a memory leak
            getUrl: function () {
                function getUrl(connection, transport, reconnecting, poll, ajaxPost) {
                    /// <summary>Gets the url for making a GET based connect request</summary>
                    var baseUrl = transport === "webSockets" ? "" : connection.baseUrl,
                        url = baseUrl + connection.appRelativeUrl,
                        qs = "transport=" + transport;

                    if (!ajaxPost && connection.groupsToken) {
                        qs += "&groupsToken=" + window.encodeURIComponent(connection.groupsToken);
                    }

                    if (!reconnecting) {
                        url += "/connect";
                    } else {
                        if (poll) {
                            // longPolling transport specific
                            url += "/poll";
                        } else {
                            url += "/reconnect";
                        }

                        if (!ajaxPost && connection.messageId) {
                            qs += "&messageId=" + window.encodeURIComponent(connection.messageId);
                        }
                    }
                    url += "?" + qs;
                    url = transportLogic.prepareQueryString(connection, url);

                    if (!ajaxPost) {
                        url += "&tid=" + Math.floor(Math.random() * 11);
                    }

                    return url;
                }

                return getUrl;
            }(),

            maximizePersistentResponse: function () {
                function maximizePersistentResponse(minPersistentResponse) {
                    return {
                        MessageId: minPersistentResponse.C,
                        Messages: minPersistentResponse.M,
                        Initialized: typeof minPersistentResponse.S !== "undefined" ? true : false,
                        ShouldReconnect: typeof minPersistentResponse.T !== "undefined" ? true : false,
                        LongPollDelay: minPersistentResponse.L,
                        GroupsToken: minPersistentResponse.G
                    };
                }

                return maximizePersistentResponse;
            }(),

            updateGroups: function () {
                function updateGroups(connection, groupsToken) {
                    if (groupsToken) {
                        connection.groupsToken = groupsToken;
                    }
                }

                return updateGroups;
            }(),

            stringifySend: function () {
                function stringifySend(connection, message) {
                    if (typeof message === "string" || typeof message === "undefined" || message === null) {
                        return message;
                    }
                    return connection.json.stringify(message);
                }

                return stringifySend;
            }(),

            ajaxSend: function () {
                function ajaxSend(connection, data) {
                    var payload = transportLogic.stringifySend(connection, data),
                        url = getAjaxUrl(connection, "/send"),
                        xhr,
                        onFail = function () {
                        function onFail(error, connection) {
                            $(connection).triggerHandler(events.onError, [signalR._.transportError(signalR.resources.sendFailed, connection.transport, error, xhr), data]);
                        }

                        return onFail;
                    }();

                    xhr = transportLogic.ajax(connection, {
                        url: url,
                        type: connection.ajaxDataType === "jsonp" ? "GET" : "POST",
                        contentType: signalR._.defaultContentType,
                        data: {
                            data: payload
                        },
                        success: function () {
                            function success(result) {
                                var res;

                                if (result) {
                                    try {
                                        res = connection._parseResponse(result);
                                    } catch (error) {
                                        onFail(error, connection);
                                        connection.stop();
                                        return;
                                    }

                                    transportLogic.triggerReceived(connection, res);
                                }
                            }

                            return success;
                        }(),
                        error: function () {
                            function error(_error3, textStatus) {
                                if (textStatus === "abort" || textStatus === "parsererror") {
                                    // The parsererror happens for sends that don't return any data, and hence
                                    // don't write the jsonp callback to the response. This is harder to fix on the server
                                    // so just hack around it on the client for now.
                                    return;
                                }

                                onFail(_error3, connection);
                            }

                            return error;
                        }()
                    });

                    return xhr;
                }

                return ajaxSend;
            }(),

            ajaxAbort: function () {
                function ajaxAbort(connection, async) {
                    if (typeof connection.transport === "undefined") {
                        return;
                    }

                    // Async by default unless explicitly overidden
                    async = typeof async === "undefined" ? true : async;

                    var url = getAjaxUrl(connection, "/abort");

                    transportLogic.ajax(connection, {
                        url: url,
                        async: async,
                        timeout: 1000,
                        type: "POST"
                    });

                    connection.log("Fired ajax abort async = " + async + ".");
                }

                return ajaxAbort;
            }(),

            ajaxStart: function () {
                function ajaxStart(connection, onSuccess) {
                    var rejectDeferred = function () {
                        function rejectDeferred(error) {
                            var deferred = connection._deferral;
                            if (deferred) {
                                deferred.reject(error);
                            }
                        }

                        return rejectDeferred;
                    }(),
                        triggerStartError = function () {
                        function triggerStartError(error) {
                            connection.log("The start request failed. Stopping the connection.");
                            $(connection).triggerHandler(events.onError, [error]);
                            rejectDeferred(error);
                            connection.stop();
                        }

                        return triggerStartError;
                    }();

                    connection._.startRequest = transportLogic.ajax(connection, {
                        url: getAjaxUrl(connection, "/start"),
                        success: function () {
                            function success(result, statusText, xhr) {
                                var data;

                                try {
                                    data = connection._parseResponse(result);
                                } catch (error) {
                                    triggerStartError(signalR._.error(signalR._.format(signalR.resources.errorParsingStartResponse, result), error, xhr));
                                    return;
                                }

                                if (data.Response === "started") {
                                    onSuccess();
                                } else {
                                    triggerStartError(signalR._.error(signalR._.format(signalR.resources.invalidStartResponse, result), null /* error */, xhr));
                                }
                            }

                            return success;
                        }(),
                        error: function () {
                            function error(xhr, statusText, _error4) {
                                if (statusText !== startAbortText) {
                                    triggerStartError(signalR._.error(signalR.resources.errorDuringStartRequest, _error4, xhr));
                                } else {
                                    // Stop has been called, no need to trigger the error handler
                                    // or stop the connection again with onStartError
                                    connection.log("The start request aborted because connection.stop() was called.");
                                    rejectDeferred(signalR._.error(signalR.resources.stoppedDuringStartRequest, null /* error */, xhr));
                                }
                            }

                            return error;
                        }()
                    });
                }

                return ajaxStart;
            }(),

            tryAbortStartRequest: function () {
                function tryAbortStartRequest(connection) {
                    if (connection._.startRequest) {
                        // If the start request has already completed this will noop.
                        connection._.startRequest.abort(startAbortText);
                        delete connection._.startRequest;
                    }
                }

                return tryAbortStartRequest;
            }(),

            tryInitialize: function () {
                function tryInitialize(connection, persistentResponse, onInitialized) {
                    if (persistentResponse.Initialized && onInitialized) {
                        onInitialized();
                    } else if (persistentResponse.Initialized) {
                        connection.log("WARNING! The client received an init message after reconnecting.");
                    }
                }

                return tryInitialize;
            }(),

            triggerReceived: function () {
                function triggerReceived(connection, data) {
                    if (!connection._.connectingMessageBuffer.tryBuffer(data)) {
                        $(connection).triggerHandler(events.onReceived, [data]);
                    }
                }

                return triggerReceived;
            }(),

            processMessages: function () {
                function processMessages(connection, minData, onInitialized) {
                    var data;

                    // Update the last message time stamp
                    transportLogic.markLastMessage(connection);

                    if (minData) {
                        data = transportLogic.maximizePersistentResponse(minData);

                        transportLogic.updateGroups(connection, data.GroupsToken);

                        if (data.MessageId) {
                            connection.messageId = data.MessageId;
                        }

                        if (data.Messages) {
                            $.each(data.Messages, function (index, message) {
                                transportLogic.triggerReceived(connection, message);
                            });

                            transportLogic.tryInitialize(connection, data, onInitialized);
                        }
                    }
                }

                return processMessages;
            }(),

            monitorKeepAlive: function () {
                function monitorKeepAlive(connection) {
                    var keepAliveData = connection._.keepAliveData;

                    // If we haven't initiated the keep alive timeouts then we need to
                    if (!keepAliveData.monitoring) {
                        keepAliveData.monitoring = true;

                        transportLogic.markLastMessage(connection);

                        // Save the function so we can unbind it on stop
                        connection._.keepAliveData.reconnectKeepAliveUpdate = function () {
                            // Mark a new message so that keep alive doesn't time out connections
                            transportLogic.markLastMessage(connection);
                        };

                        // Update Keep alive on reconnect
                        $(connection).bind(events.onReconnect, connection._.keepAliveData.reconnectKeepAliveUpdate);

                        connection.log("Now monitoring keep alive with a warning timeout of " + keepAliveData.timeoutWarning + ", keep alive timeout of " + keepAliveData.timeout + " and disconnecting timeout of " + connection.disconnectTimeout);
                    } else {
                        connection.log("Tried to monitor keep alive but it's already being monitored.");
                    }
                }

                return monitorKeepAlive;
            }(),

            stopMonitoringKeepAlive: function () {
                function stopMonitoringKeepAlive(connection) {
                    var keepAliveData = connection._.keepAliveData;

                    // Only attempt to stop the keep alive monitoring if its being monitored
                    if (keepAliveData.monitoring) {
                        // Stop monitoring
                        keepAliveData.monitoring = false;

                        // Remove the updateKeepAlive function from the reconnect event
                        $(connection).unbind(events.onReconnect, connection._.keepAliveData.reconnectKeepAliveUpdate);

                        // Clear all the keep alive data
                        connection._.keepAliveData = {};
                        connection.log("Stopping the monitoring of the keep alive.");
                    }
                }

                return stopMonitoringKeepAlive;
            }(),

            startHeartbeat: function () {
                function startHeartbeat(connection) {
                    connection._.lastActiveAt = new Date().getTime();
                    beat(connection);
                }

                return startHeartbeat;
            }(),

            markLastMessage: function () {
                function markLastMessage(connection) {
                    connection._.lastMessageAt = new Date().getTime();
                }

                return markLastMessage;
            }(),

            markActive: function () {
                function markActive(connection) {
                    if (transportLogic.verifyLastActive(connection)) {
                        connection._.lastActiveAt = new Date().getTime();
                        return true;
                    }

                    return false;
                }

                return markActive;
            }(),

            isConnectedOrReconnecting: function () {
                function isConnectedOrReconnecting(connection) {
                    return connection.state === signalR.connectionState.connected || connection.state === signalR.connectionState.reconnecting;
                }

                return isConnectedOrReconnecting;
            }(),

            ensureReconnectingState: function () {
                function ensureReconnectingState(connection) {
                    if (changeState(connection, signalR.connectionState.connected, signalR.connectionState.reconnecting) === true) {
                        $(connection).triggerHandler(events.onReconnecting);
                    }
                    return connection.state === signalR.connectionState.reconnecting;
                }

                return ensureReconnectingState;
            }(),

            clearReconnectTimeout: function () {
                function clearReconnectTimeout(connection) {
                    if (connection && connection._.reconnectTimeout) {
                        window.clearTimeout(connection._.reconnectTimeout);
                        delete connection._.reconnectTimeout;
                    }
                }

                return clearReconnectTimeout;
            }(),

            verifyLastActive: function () {
                function verifyLastActive(connection) {
                    if (new Date().getTime() - connection._.lastActiveAt >= connection.reconnectWindow) {
                        var message = signalR._.format(signalR.resources.reconnectWindowTimeout, new Date(connection._.lastActiveAt), connection.reconnectWindow);
                        connection.log(message);
                        $(connection).triggerHandler(events.onError, [signalR._.error(message, /* source */"TimeoutException")]);
                        connection.stop( /* async */false, /* notifyServer */false);
                        return false;
                    }

                    return true;
                }

                return verifyLastActive;
            }(),

            reconnect: function () {
                function reconnect(connection, transportName) {
                    var transport = signalR.transports[transportName];

                    // We should only set a reconnectTimeout if we are currently connected
                    // and a reconnectTimeout isn't already set.
                    if (transportLogic.isConnectedOrReconnecting(connection) && !connection._.reconnectTimeout) {
                        // Need to verify before the setTimeout occurs because an application sleep could occur during the setTimeout duration.
                        if (!transportLogic.verifyLastActive(connection)) {
                            return;
                        }

                        connection._.reconnectTimeout = window.setTimeout(function () {
                            if (!transportLogic.verifyLastActive(connection)) {
                                return;
                            }

                            transport.stop(connection);

                            if (transportLogic.ensureReconnectingState(connection)) {
                                connection.log(transportName + " reconnecting.");
                                transport.start(connection);
                            }
                        }, connection.reconnectDelay);
                    }
                }

                return reconnect;
            }(),

            handleParseFailure: function () {
                function handleParseFailure(connection, result, error, onFailed, context) {
                    var wrappedError = signalR._.transportError(signalR._.format(signalR.resources.parseFailed, result), connection.transport, error, context);

                    // If we're in the initialization phase trigger onFailed, otherwise stop the connection.
                    if (onFailed && onFailed(wrappedError)) {
                        connection.log("Failed to parse server response while attempting to connect.");
                    } else {
                        $(connection).triggerHandler(events.onError, [wrappedError]);
                        connection.stop();
                    }
                }

                return handleParseFailure;
            }(),

            initHandler: function () {
                function initHandler(connection) {
                    return new InitHandler(connection);
                }

                return initHandler;
            }(),

            foreverFrame: {
                count: 0,
                connections: {}
            }
        };
    })(jQueryShim, window);
    /* jquery.signalR.transports.webSockets.js */
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.


    /*global window:false */
    /// <reference path="jquery.signalR.transports.common.js" />

    (function ($, window, undefined) {

        var signalR = $.signalR,
            events = $.signalR.events,
            changeState = $.signalR.changeState,
            transportLogic = signalR.transports._logic;

        signalR.transports.webSockets = {
            name: "webSockets",

            supportsKeepAlive: function () {
                function supportsKeepAlive() {
                    return true;
                }

                return supportsKeepAlive;
            }(),

            send: function () {
                function send(connection, data) {
                    var payload = transportLogic.stringifySend(connection, data);

                    try {
                        connection.socket.send(payload);
                    } catch (ex) {
                        $(connection).triggerHandler(events.onError, [signalR._.transportError(signalR.resources.webSocketsInvalidState, connection.transport, ex, connection.socket), data]);
                    }
                }

                return send;
            }(),

            start: function () {
                function start(connection, onSuccess, onFailed) {
                    var url,
                        opened = false,
                        that = this,
                        reconnecting = !onSuccess,
                        $connection = $(connection);

                    if (!window.WebSocket) {
                        onFailed();
                        return;
                    }

                    if (!connection.socket) {
                        if (connection.webSocketServerUrl) {
                            url = connection.webSocketServerUrl;
                        } else {
                            url = connection.wsProtocol + connection.host;
                        }

                        url += transportLogic.getUrl(connection, this.name, reconnecting);

                        connection.log("Connecting to websocket endpoint '" + url + "'.");
                        connection.socket = new window.WebSocket(url);

                        connection.socket.onopen = function () {
                            opened = true;
                            connection.log("Websocket opened.");

                            transportLogic.clearReconnectTimeout(connection);

                            if (changeState(connection, signalR.connectionState.reconnecting, signalR.connectionState.connected) === true) {
                                $connection.triggerHandler(events.onReconnect);
                            }
                        };

                        connection.socket.onclose = function (event) {
                            var error;

                            // Only handle a socket close if the close is from the current socket.
                            // Sometimes on disconnect the server will push down an onclose event
                            // to an expired socket.

                            if (this === connection.socket) {
                                if (opened && typeof event.wasClean !== "undefined" && event.wasClean === false) {
                                    // Ideally this would use the websocket.onerror handler (rather than checking wasClean in onclose) but
                                    // I found in some circumstances Chrome won't call onerror. This implementation seems to work on all browsers.
                                    error = signalR._.transportError(signalR.resources.webSocketClosed, connection.transport, event);

                                    connection.log("Unclean disconnect from websocket: " + (event.reason || "[no reason given]."));
                                } else {
                                    connection.log("Websocket closed.");
                                }

                                if (!onFailed || !onFailed(error)) {
                                    if (error) {
                                        $(connection).triggerHandler(events.onError, [error]);
                                    }

                                    that.reconnect(connection);
                                }
                            }
                        };

                        connection.socket.onmessage = function (event) {
                            var data;

                            try {
                                data = connection._parseResponse(event.data);
                            } catch (error) {
                                transportLogic.handleParseFailure(connection, event.data, error, onFailed, event);
                                return;
                            }

                            if (data) {
                                // data.M is PersistentResponse.Messages
                                if ($.isEmptyObject(data) || data.M) {
                                    transportLogic.processMessages(connection, data, onSuccess);
                                } else {
                                    // For websockets we need to trigger onReceived
                                    // for callbacks to outgoing hub calls.
                                    transportLogic.triggerReceived(connection, data);
                                }
                            }
                        };
                    }
                }

                return start;
            }(),

            reconnect: function () {
                function reconnect(connection) {
                    transportLogic.reconnect(connection, this.name);
                }

                return reconnect;
            }(),

            lostConnection: function () {
                function lostConnection(connection) {
                    this.reconnect(connection);
                }

                return lostConnection;
            }(),

            stop: function () {
                function stop(connection) {
                    // Don't trigger a reconnect after stopping
                    transportLogic.clearReconnectTimeout(connection);

                    if (connection.socket) {
                        connection.log("Closing the Websocket.");
                        connection.socket.close();
                        connection.socket = null;
                    }
                }

                return stop;
            }(),

            abort: function () {
                function abort(connection, async) {
                    transportLogic.ajaxAbort(connection, async);
                }

                return abort;
            }()
        };
    })(jQueryShim, window);
    /* jquery.signalR.transports.serverSentEvents.js */
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.


    /*global window:false */
    /// <reference path="jquery.signalR.transports.common.js" />

    (function ($, window, undefined) {

        var signalR = $.signalR,
            events = $.signalR.events,
            changeState = $.signalR.changeState,
            transportLogic = signalR.transports._logic,
            clearReconnectAttemptTimeout = function () {
            function clearReconnectAttemptTimeout(connection) {
                window.clearTimeout(connection._.reconnectAttemptTimeoutHandle);
                delete connection._.reconnectAttemptTimeoutHandle;
            }

            return clearReconnectAttemptTimeout;
        }();

        signalR.transports.serverSentEvents = {
            name: "serverSentEvents",

            supportsKeepAlive: function () {
                function supportsKeepAlive() {
                    return true;
                }

                return supportsKeepAlive;
            }(),

            timeOut: 3000,

            start: function () {
                function start(connection, onSuccess, onFailed) {
                    var that = this,
                        opened = false,
                        $connection = $(connection),
                        reconnecting = !onSuccess,
                        url;

                    if (connection.eventSource) {
                        connection.log("The connection already has an event source. Stopping it.");
                        connection.stop();
                    }

                    if (!window.EventSource) {
                        if (onFailed) {
                            connection.log("This browser doesn't support SSE.");
                            onFailed();
                        }
                        return;
                    }

                    url = transportLogic.getUrl(connection, this.name, reconnecting);

                    try {
                        connection.log("Attempting to connect to SSE endpoint '" + url + "'.");
                        connection.eventSource = new window.EventSource(url, { withCredentials: connection.withCredentials });
                    } catch (e) {
                        connection.log("EventSource failed trying to connect with error " + e.Message + ".");
                        if (onFailed) {
                            // The connection failed, call the failed callback
                            onFailed();
                        } else {
                            $connection.triggerHandler(events.onError, [signalR._.transportError(signalR.resources.eventSourceFailedToConnect, connection.transport, e)]);
                            if (reconnecting) {
                                // If we were reconnecting, rather than doing initial connect, then try reconnect again
                                that.reconnect(connection);
                            }
                        }
                        return;
                    }

                    if (reconnecting) {
                        connection._.reconnectAttemptTimeoutHandle = window.setTimeout(function () {
                            if (opened === false) {
                                // If we're reconnecting and the event source is attempting to connect,
                                // don't keep retrying. This causes duplicate connections to spawn.
                                if (connection.eventSource.readyState !== window.EventSource.OPEN) {
                                    // If we were reconnecting, rather than doing initial connect, then try reconnect again
                                    that.reconnect(connection);
                                }
                            }
                        }, that.timeOut);
                    }

                    connection.eventSource.addEventListener("open", function (e) {
                        connection.log("EventSource connected.");

                        clearReconnectAttemptTimeout(connection);
                        transportLogic.clearReconnectTimeout(connection);

                        if (opened === false) {
                            opened = true;

                            if (changeState(connection, signalR.connectionState.reconnecting, signalR.connectionState.connected) === true) {
                                $connection.triggerHandler(events.onReconnect);
                            }
                        }
                    }, false);

                    connection.eventSource.addEventListener("message", function (e) {
                        var res;

                        // process messages
                        if (e.data === "initialized") {
                            return;
                        }

                        try {
                            res = connection._parseResponse(e.data);
                        } catch (error) {
                            transportLogic.handleParseFailure(connection, e.data, error, onFailed, e);
                            return;
                        }

                        transportLogic.processMessages(connection, res, onSuccess);
                    }, false);

                    connection.eventSource.addEventListener("error", function (e) {
                        var error = signalR._.transportError(signalR.resources.eventSourceError, connection.transport, e);

                        // Only handle an error if the error is from the current Event Source.
                        // Sometimes on disconnect the server will push down an error event
                        // to an expired Event Source.
                        if (this !== connection.eventSource) {
                            return;
                        }

                        if (onFailed && onFailed(error)) {
                            return;
                        }

                        connection.log("EventSource readyState: " + connection.eventSource.readyState + ".");

                        if (e.eventPhase === window.EventSource.CLOSED) {
                            // We don't use the EventSource's native reconnect function as it
                            // doesn't allow us to change the URL when reconnecting. We need
                            // to change the URL to not include the /connect suffix, and pass
                            // the last message id we received.
                            connection.log("EventSource reconnecting due to the server connection ending.");
                            that.reconnect(connection);
                        } else {
                            // connection error
                            connection.log("EventSource error.");
                            $connection.triggerHandler(events.onError, [error]);
                        }
                    }, false);
                }

                return start;
            }(),

            reconnect: function () {
                function reconnect(connection) {
                    transportLogic.reconnect(connection, this.name);
                }

                return reconnect;
            }(),

            lostConnection: function () {
                function lostConnection(connection) {
                    this.reconnect(connection);
                }

                return lostConnection;
            }(),

            send: function () {
                function send(connection, data) {
                    transportLogic.ajaxSend(connection, data);
                }

                return send;
            }(),

            stop: function () {
                function stop(connection) {
                    // Don't trigger a reconnect after stopping
                    clearReconnectAttemptTimeout(connection);
                    transportLogic.clearReconnectTimeout(connection);

                    if (connection && connection.eventSource) {
                        connection.log("EventSource calling close().");
                        connection.eventSource.close();
                        connection.eventSource = null;
                        delete connection.eventSource;
                    }
                }

                return stop;
            }(),

            abort: function () {
                function abort(connection, async) {
                    transportLogic.ajaxAbort(connection, async);
                }

                return abort;
            }()
        };
    })(jQueryShim, window);
    /* jquery.signalR.transports.foreverFrame.js */
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.


    /*global window:false */
    /// <reference path="jquery.signalR.transports.common.js" />

    (function ($, window, undefined) {

        var signalR = $.signalR,
            events = $.signalR.events,
            changeState = $.signalR.changeState,
            transportLogic = signalR.transports._logic,
            createFrame = function () {
            function createFrame() {
                var frame = window.document.createElement("iframe");
                frame.setAttribute("style", "position:absolute;top:0;left:0;width:0;height:0;visibility:hidden;");
                return frame;
            }

            return createFrame;
        }(),


        // Used to prevent infinite loading icon spins in older versions of ie
        // We build this object inside a closure so we don't pollute the rest of
        // the foreverFrame transport with unnecessary functions/utilities.
        loadPreventer = function () {
            var loadingFixIntervalId = null,
                loadingFixInterval = 1000,
                attachedTo = 0;

            return {
                prevent: function () {
                    function prevent() {
                        // Prevent additional iframe removal procedures from newer browsers
                        if (signalR._.ieVersion <= 8) {
                            // We only ever want to set the interval one time, so on the first attachedTo
                            if (attachedTo === 0) {
                                // Create and destroy iframe every 3 seconds to prevent loading icon, super hacky
                                loadingFixIntervalId = window.setInterval(function () {
                                    var tempFrame = createFrame();

                                    window.document.body.appendChild(tempFrame);
                                    window.document.body.removeChild(tempFrame);

                                    tempFrame = null;
                                }, loadingFixInterval);
                            }

                            attachedTo++;
                        }
                    }

                    return prevent;
                }(),
                cancel: function () {
                    function cancel() {
                        // Only clear the interval if there's only one more object that the loadPreventer is attachedTo
                        if (attachedTo === 1) {
                            window.clearInterval(loadingFixIntervalId);
                        }

                        if (attachedTo > 0) {
                            attachedTo--;
                        }
                    }

                    return cancel;
                }()
            };
        }();

        signalR.transports.foreverFrame = {
            name: "foreverFrame",

            supportsKeepAlive: function () {
                function supportsKeepAlive() {
                    return true;
                }

                return supportsKeepAlive;
            }(),

            // Added as a value here so we can create tests to verify functionality
            iframeClearThreshold: 50,

            start: function () {
                function start(connection, onSuccess, onFailed) {
                    var that = this,
                        frameId = transportLogic.foreverFrame.count += 1,
                        url,
                        frame = createFrame(),
                        frameLoadHandler = function () {
                        function frameLoadHandler() {
                            connection.log("Forever frame iframe finished loading and is no longer receiving messages.");
                            if (!onFailed || !onFailed()) {
                                that.reconnect(connection);
                            }
                        }

                        return frameLoadHandler;
                    }();

                    if (window.EventSource) {
                        // If the browser supports SSE, don't use Forever Frame
                        if (onFailed) {
                            connection.log("Forever Frame is not supported by SignalR on browsers with SSE support.");
                            onFailed();
                        }
                        return;
                    }

                    frame.setAttribute("data-signalr-connection-id", connection.id);

                    // Start preventing loading icon
                    // This will only perform work if the loadPreventer is not attached to another connection.
                    loadPreventer.prevent();

                    // Build the url
                    url = transportLogic.getUrl(connection, this.name);
                    url += "&frameId=" + frameId;

                    // add frame to the document prior to setting URL to avoid caching issues.
                    window.document.documentElement.appendChild(frame);

                    connection.log("Binding to iframe's load event.");

                    if (frame.addEventListener) {
                        frame.addEventListener("load", frameLoadHandler, false);
                    } else if (frame.attachEvent) {
                        frame.attachEvent("onload", frameLoadHandler);
                    }

                    frame.src = url;
                    transportLogic.foreverFrame.connections[frameId] = connection;

                    connection.frame = frame;
                    connection.frameId = frameId;

                    if (onSuccess) {
                        connection.onSuccess = function () {
                            connection.log("Iframe transport started.");
                            onSuccess();
                        };
                    }
                }

                return start;
            }(),

            reconnect: function () {
                function reconnect(connection) {
                    var that = this;

                    // Need to verify connection state and verify before the setTimeout occurs because an application sleep could occur during the setTimeout duration.
                    if (transportLogic.isConnectedOrReconnecting(connection) && transportLogic.verifyLastActive(connection)) {
                        window.setTimeout(function () {
                            // Verify that we're ok to reconnect.
                            if (!transportLogic.verifyLastActive(connection)) {
                                return;
                            }

                            if (connection.frame && transportLogic.ensureReconnectingState(connection)) {
                                var frame = connection.frame,
                                    src = transportLogic.getUrl(connection, that.name, true) + "&frameId=" + connection.frameId;
                                connection.log("Updating iframe src to '" + src + "'.");
                                frame.src = src;
                            }
                        }, connection.reconnectDelay);
                    }
                }

                return reconnect;
            }(),

            lostConnection: function () {
                function lostConnection(connection) {
                    this.reconnect(connection);
                }

                return lostConnection;
            }(),

            send: function () {
                function send(connection, data) {
                    transportLogic.ajaxSend(connection, data);
                }

                return send;
            }(),

            receive: function () {
                function receive(connection, data) {
                    var cw, body, response;

                    if (connection.json !== connection._originalJson) {
                        // If there's a custom JSON parser configured then serialize the object
                        // using the original (browser) JSON parser and then deserialize it using
                        // the custom parser (connection._parseResponse does that). This is so we
                        // can easily send the response from the server as "raw" JSON but still
                        // support custom JSON deserialization in the browser.
                        data = connection._originalJson.stringify(data);
                    }

                    response = connection._parseResponse(data);

                    transportLogic.processMessages(connection, response, connection.onSuccess);

                    // Protect against connection stopping from a callback trigger within the processMessages above.
                    if (connection.state === $.signalR.connectionState.connected) {
                        // Delete the script & div elements
                        connection.frameMessageCount = (connection.frameMessageCount || 0) + 1;
                        if (connection.frameMessageCount > signalR.transports.foreverFrame.iframeClearThreshold) {
                            connection.frameMessageCount = 0;
                            cw = connection.frame.contentWindow || connection.frame.contentDocument;
                            if (cw && cw.document && cw.document.body) {
                                body = cw.document.body;

                                // Remove all the child elements from the iframe's body to conserver memory
                                while (body.firstChild) {
                                    body.removeChild(body.firstChild);
                                }
                            }
                        }
                    }
                }

                return receive;
            }(),

            stop: function () {
                function stop(connection) {
                    var cw = null;

                    // Stop attempting to prevent loading icon
                    loadPreventer.cancel();

                    if (connection.frame) {
                        if (connection.frame.stop) {
                            connection.frame.stop();
                        } else {
                            try {
                                cw = connection.frame.contentWindow || connection.frame.contentDocument;
                                if (cw.document && cw.document.execCommand) {
                                    cw.document.execCommand("Stop");
                                }
                            } catch (e) {
                                connection.log("Error occurred when stopping foreverFrame transport. Message = " + e.message + ".");
                            }
                        }

                        // Ensure the iframe is where we left it
                        if (connection.frame.parentNode === window.document.body) {
                            window.document.body.removeChild(connection.frame);
                        }

                        delete transportLogic.foreverFrame.connections[connection.frameId];
                        connection.frame = null;
                        connection.frameId = null;
                        delete connection.frame;
                        delete connection.frameId;
                        delete connection.onSuccess;
                        delete connection.frameMessageCount;
                        connection.log("Stopping forever frame.");
                    }
                }

                return stop;
            }(),

            abort: function () {
                function abort(connection, async) {
                    transportLogic.ajaxAbort(connection, async);
                }

                return abort;
            }(),

            getConnection: function () {
                function getConnection(id) {
                    return transportLogic.foreverFrame.connections[id];
                }

                return getConnection;
            }(),

            started: function () {
                function started(connection) {
                    if (changeState(connection, signalR.connectionState.reconnecting, signalR.connectionState.connected) === true) {

                        $(connection).triggerHandler(events.onReconnect);
                    }
                }

                return started;
            }()
        };
    })(jQueryShim, window);
    /* jquery.signalR.transports.longPolling.js */
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.


    /*global window:false */
    /// <reference path="jquery.signalR.transports.common.js" />

    (function ($, window, undefined) {

        var signalR = $.signalR,
            events = $.signalR.events,
            changeState = $.signalR.changeState,
            isDisconnecting = $.signalR.isDisconnecting,
            transportLogic = signalR.transports._logic;

        signalR.transports.longPolling = {
            name: "longPolling",

            supportsKeepAlive: function () {
                function supportsKeepAlive() {
                    return false;
                }

                return supportsKeepAlive;
            }(),

            reconnectDelay: 3000,

            start: function () {
                function start(connection, onSuccess, onFailed) {
                    /// <summary>Starts the long polling connection</summary>
                    /// <param name="connection" type="signalR">The SignalR connection to start</param>
                    var that = this,
                        _fireConnect = function () {
                        function fireConnect() {
                            _fireConnect = $.noop;

                            connection.log("LongPolling connected.");

                            if (onSuccess) {
                                onSuccess();
                            } else {
                                connection.log("WARNING! The client received an init message after reconnecting.");
                            }
                        }

                        return fireConnect;
                    }(),
                        tryFailConnect = function () {
                        function tryFailConnect(error) {
                            if (onFailed(error)) {
                                connection.log("LongPolling failed to connect.");
                                return true;
                            }

                            return false;
                        }

                        return tryFailConnect;
                    }(),
                        privateData = connection._,
                        reconnectErrors = 0,
                        fireReconnected = function () {
                        function fireReconnected(instance) {
                            window.clearTimeout(privateData.reconnectTimeoutId);
                            privateData.reconnectTimeoutId = null;

                            if (changeState(instance, signalR.connectionState.reconnecting, signalR.connectionState.connected) === true) {
                                // Successfully reconnected!
                                instance.log("Raising the reconnect event");
                                $(instance).triggerHandler(events.onReconnect);
                            }
                        }

                        return fireReconnected;
                    }(),


                    // 1 hour
                    maxFireReconnectedTimeout = 3600000;

                    if (connection.pollXhr) {
                        connection.log("Polling xhr requests already exists, aborting.");
                        connection.stop();
                    }

                    connection.messageId = null;

                    privateData.reconnectTimeoutId = null;

                    privateData.pollTimeoutId = window.setTimeout(function () {
                        (function () {
                            function poll(instance, raiseReconnect) {
                                var messageId = instance.messageId,
                                    connect = messageId === null,
                                    reconnecting = !connect,
                                    polling = !raiseReconnect,
                                    url = transportLogic.getUrl(instance, that.name, reconnecting, polling, true /* use Post for longPolling */),
                                    postData = {};

                                if (instance.messageId) {
                                    postData.messageId = instance.messageId;
                                }

                                if (instance.groupsToken) {
                                    postData.groupsToken = instance.groupsToken;
                                }

                                // If we've disconnected during the time we've tried to re-instantiate the poll then stop.
                                if (isDisconnecting(instance) === true) {
                                    return;
                                }

                                connection.log("Opening long polling request to '" + url + "'.");
                                instance.pollXhr = transportLogic.ajax(connection, {
                                    xhrFields: {
                                        onprogress: function () {
                                            function onprogress() {
                                                transportLogic.markLastMessage(connection);
                                            }

                                            return onprogress;
                                        }()
                                    },
                                    url: url,
                                    type: "POST",
                                    contentType: signalR._.defaultContentType,
                                    data: postData,
                                    timeout: connection._.pollTimeout,
                                    success: function () {
                                        function success(result) {
                                            var minData,
                                                delay = 0,
                                                data,
                                                shouldReconnect;

                                            connection.log("Long poll complete.");

                                            // Reset our reconnect errors so if we transition into a reconnecting state again we trigger
                                            // reconnected quickly
                                            reconnectErrors = 0;

                                            try {
                                                // Remove any keep-alives from the beginning of the result
                                                minData = connection._parseResponse(result);
                                            } catch (error) {
                                                transportLogic.handleParseFailure(instance, result, error, tryFailConnect, instance.pollXhr);
                                                return;
                                            }

                                            // If there's currently a timeout to trigger reconnect, fire it now before processing messages
                                            if (privateData.reconnectTimeoutId !== null) {
                                                fireReconnected(instance);
                                            }

                                            if (minData) {
                                                data = transportLogic.maximizePersistentResponse(minData);
                                            }

                                            transportLogic.processMessages(instance, minData, _fireConnect);

                                            if (data && $.type(data.LongPollDelay) === "number") {
                                                delay = data.LongPollDelay;
                                            }

                                            if (isDisconnecting(instance) === true) {
                                                return;
                                            }

                                            shouldReconnect = data && data.ShouldReconnect;
                                            if (shouldReconnect) {
                                                // Transition into the reconnecting state
                                                // If this fails then that means that the user transitioned the connection into a invalid state in processMessages.
                                                if (!transportLogic.ensureReconnectingState(instance)) {
                                                    return;
                                                }
                                            }

                                            // We never want to pass a raiseReconnect flag after a successful poll.  This is handled via the error function
                                            if (delay > 0) {
                                                privateData.pollTimeoutId = window.setTimeout(function () {
                                                    poll(instance, shouldReconnect);
                                                }, delay);
                                            } else {
                                                poll(instance, shouldReconnect);
                                            }
                                        }

                                        return success;
                                    }(),

                                    error: function () {
                                        function error(data, textStatus) {
                                            var error = signalR._.transportError(signalR.resources.longPollFailed, connection.transport, data, instance.pollXhr);

                                            // Stop trying to trigger reconnect, connection is in an error state
                                            // If we're not in the reconnect state this will noop
                                            window.clearTimeout(privateData.reconnectTimeoutId);
                                            privateData.reconnectTimeoutId = null;

                                            if (textStatus === "abort") {
                                                connection.log("Aborted xhr request.");
                                                return;
                                            }

                                            if (!tryFailConnect(error)) {

                                                // Increment our reconnect errors, we assume all errors to be reconnect errors
                                                // In the case that it's our first error this will cause Reconnect to be fired
                                                // after 1 second due to reconnectErrors being = 1.
                                                reconnectErrors++;

                                                if (connection.state !== signalR.connectionState.reconnecting) {
                                                    connection.log("An error occurred using longPolling. Status = " + textStatus + ".  Response = " + data.responseText + ".");
                                                    $(instance).triggerHandler(events.onError, [error]);
                                                }

                                                // We check the state here to verify that we're not in an invalid state prior to verifying Reconnect.
                                                // If we're not in connected or reconnecting then the next ensureReconnectingState check will fail and will return.
                                                // Therefore we don't want to change that failure code path.
                                                if ((connection.state === signalR.connectionState.connected || connection.state === signalR.connectionState.reconnecting) && !transportLogic.verifyLastActive(connection)) {
                                                    return;
                                                }

                                                // Transition into the reconnecting state
                                                // If this fails then that means that the user transitioned the connection into the disconnected or connecting state within the above error handler trigger.
                                                if (!transportLogic.ensureReconnectingState(instance)) {
                                                    return;
                                                }

                                                // Call poll with the raiseReconnect flag as true after the reconnect delay
                                                privateData.pollTimeoutId = window.setTimeout(function () {
                                                    poll(instance, true);
                                                }, that.reconnectDelay);
                                            }
                                        }

                                        return error;
                                    }()
                                });

                                // This will only ever pass after an error has occurred via the poll ajax procedure.
                                if (reconnecting && raiseReconnect === true) {
                                    // We wait to reconnect depending on how many times we've failed to reconnect.
                                    // This is essentially a heuristic that will exponentially increase in wait time before
                                    // triggering reconnected.  This depends on the "error" handler of Poll to cancel this
                                    // timeout if it triggers before the Reconnected event fires.
                                    // The Math.min at the end is to ensure that the reconnect timeout does not overflow.
                                    privateData.reconnectTimeoutId = window.setTimeout(function () {
                                        fireReconnected(instance);
                                    }, Math.min(1000 * (Math.pow(2, reconnectErrors) - 1), maxFireReconnectedTimeout));
                                }
                            }

                            return poll;
                        })()(connection);
                    }, 250); // Have to delay initial poll so Chrome doesn't show loader spinner in tab
                }

                return start;
            }(),

            lostConnection: function () {
                function lostConnection(connection) {
                    if (connection.pollXhr) {
                        connection.pollXhr.abort("lostConnection");
                    }
                }

                return lostConnection;
            }(),

            send: function () {
                function send(connection, data) {
                    transportLogic.ajaxSend(connection, data);
                }

                return send;
            }(),

            stop: function () {
                function stop(connection) {
                    /// <summary>Stops the long polling connection</summary>
                    /// <param name="connection" type="signalR">The SignalR connection to stop</param>

                    window.clearTimeout(connection._.pollTimeoutId);
                    window.clearTimeout(connection._.reconnectTimeoutId);

                    delete connection._.pollTimeoutId;
                    delete connection._.reconnectTimeoutId;

                    if (connection.pollXhr) {
                        connection.pollXhr.abort();
                        connection.pollXhr = null;
                        delete connection.pollXhr;
                    }
                }

                return stop;
            }(),

            abort: function () {
                function abort(connection, async) {
                    transportLogic.ajaxAbort(connection, async);
                }

                return abort;
            }()
        };
    })(jQueryShim, window);
    /* jquery.signalR.hubs.js */
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

    /*global window:false */
    /// <reference path="jquery.signalR.core.js" />

    (function ($, window, undefined) {

        var eventNamespace = ".hubProxy",
            signalR = $.signalR;

        function makeEventName(event) {
            return event + eventNamespace;
        }

        // Equivalent to Array.prototype.map
        function map(arr, fun, thisp) {
            var i,
                length = arr.length,
                result = [];
            for (i = 0; i < length; i += 1) {
                if (arr.hasOwnProperty(i)) {
                    result[i] = fun.call(thisp, arr[i], i, arr);
                }
            }
            return result;
        }

        function getArgValue(a) {
            return $.isFunction(a) ? null : $.type(a) === "undefined" ? null : a;
        }

        function hasMembers(obj) {
            for (var key in obj) {
                // If we have any properties in our callback map then we have callbacks and can exit the loop via return
                if (obj.hasOwnProperty(key)) {
                    return true;
                }
            }

            return false;
        }

        function clearInvocationCallbacks(connection, error) {
            /// <param name="connection" type="hubConnection" />
            var callbacks = connection._.invocationCallbacks,
                callback;

            if (hasMembers(callbacks)) {
                connection.log("Clearing hub invocation callbacks with error: " + error + ".");
            }

            // Reset the callback cache now as we have a local var referencing it
            connection._.invocationCallbackId = 0;
            delete connection._.invocationCallbacks;
            connection._.invocationCallbacks = {};

            // Loop over the callbacks and invoke them.
            // We do this using a local var reference and *after* we've cleared the cache
            // so that if a fail callback itself tries to invoke another method we don't
            // end up with its callback in the list we're looping over.
            for (var callbackId in callbacks) {
                callback = callbacks[callbackId];
                callback.method.call(callback.scope, { E: error });
            }
        }

        // hubProxy
        function hubProxy(hubConnection, hubName) {
            /// <summary>
            ///     Creates a new proxy object for the given hub connection that can be used to invoke
            ///     methods on server hubs and handle client method invocation requests from the server.
            /// </summary>
            return new hubProxy.fn.init(hubConnection, hubName);
        }

        hubProxy.fn = hubProxy.prototype = {
            init: function () {
                function init(connection, hubName) {
                    this.state = {};
                    this.connection = connection;
                    this.hubName = hubName;
                    this._ = {
                        callbackMap: {}
                    };
                }

                return init;
            }(),

            constructor: hubProxy,

            hasSubscriptions: function () {
                function hasSubscriptions() {
                    return hasMembers(this._.callbackMap);
                }

                return hasSubscriptions;
            }(),

            on: function () {
                function on(eventName, callback) {
                    /// <summary>Wires up a callback to be invoked when a invocation request is received from the server hub.</summary>
                    /// <param name="eventName" type="String">The name of the hub event to register the callback for.</param>
                    /// <param name="callback" type="Function">The callback to be invoked.</param>
                    var that = this,
                        callbackMap = that._.callbackMap;

                    // Normalize the event name to lowercase
                    eventName = eventName.toLowerCase();

                    // If there is not an event registered for this callback yet we want to create its event space in the callback map.
                    if (!callbackMap[eventName]) {
                        callbackMap[eventName] = {};
                    }

                    // Map the callback to our encompassed function
                    callbackMap[eventName][callback] = function (e, data) {
                        callback.apply(that, data);
                    };

                    $(that).bind(makeEventName(eventName), callbackMap[eventName][callback]);

                    return that;
                }

                return on;
            }(),

            off: function () {
                function off(eventName, callback) {
                    /// <summary>Removes the callback invocation request from the server hub for the given event name.</summary>
                    /// <param name="eventName" type="String">The name of the hub event to unregister the callback for.</param>
                    /// <param name="callback" type="Function">The callback to be invoked.</param>
                    var that = this,
                        callbackMap = that._.callbackMap,
                        callbackSpace;

                    // Normalize the event name to lowercase
                    eventName = eventName.toLowerCase();

                    callbackSpace = callbackMap[eventName];

                    // Verify that there is an event space to unbind
                    if (callbackSpace) {
                        // Only unbind if there's an event bound with eventName and a callback with the specified callback
                        if (callbackSpace[callback]) {
                            $(that).unbind(makeEventName(eventName), callbackSpace[callback]);

                            // Remove the callback from the callback map
                            delete callbackSpace[callback];

                            // Check if there are any members left on the event, if not we need to destroy it.
                            if (!hasMembers(callbackSpace)) {
                                delete callbackMap[eventName];
                            }
                        } else if (!callback) {
                            // Check if we're removing the whole event and we didn't error because of an invalid callback
                            $(that).unbind(makeEventName(eventName));

                            delete callbackMap[eventName];
                        }
                    }

                    return that;
                }

                return off;
            }(),

            invoke: function () {
                function invoke(methodName) {
                    /// <summary>Invokes a server hub method with the given arguments.</summary>
                    /// <param name="methodName" type="String">The name of the server hub method.</param>

                    var that = this,
                        connection = that.connection,
                        args = $.makeArray(arguments).slice(1),
                        argValues = map(args, getArgValue),
                        data = { H: that.hubName, M: methodName, A: argValues, I: connection._.invocationCallbackId },
                        d = $.Deferred(),
                        callback = function () {
                        function callback(minResult) {
                            var result = that._maximizeHubResponse(minResult),
                                source,
                                error;

                            // Update the hub state
                            $.extend(that.state, result.State);

                            if (result.Progress) {
                                if (d.notifyWith) {
                                    // Progress is only supported in jQuery 1.7+
                                    d.notifyWith(that, [result.Progress.Data]);
                                } else if (!connection._.progressjQueryVersionLogged) {
                                    connection.log("A hub method invocation progress update was received but the version of jQuery in use (" + $.prototype.jquery + ") does not support progress updates. Upgrade to jQuery 1.7+ to receive progress notifications.");
                                    connection._.progressjQueryVersionLogged = true;
                                }
                            } else if (result.Error) {
                                // Server hub method threw an exception, log it & reject the deferred
                                if (result.StackTrace) {
                                    connection.log(result.Error + "\n" + result.StackTrace + ".");
                                }

                                // result.ErrorData is only set if a HubException was thrown
                                source = result.IsHubException ? "HubException" : "Exception";
                                error = signalR._.error(result.Error, source);
                                error.data = result.ErrorData;

                                connection.log(that.hubName + "." + methodName + " failed to execute. Error: " + error.message);
                                d.rejectWith(that, [error]);
                            } else {
                                // Server invocation succeeded, resolve the deferred
                                connection.log("Invoked " + that.hubName + "." + methodName);
                                d.resolveWith(that, [result.Result]);
                            }
                        }

                        return callback;
                    }();

                    connection._.invocationCallbacks[connection._.invocationCallbackId.toString()] = { scope: that, method: callback };
                    connection._.invocationCallbackId += 1;

                    if (!$.isEmptyObject(that.state)) {
                        data.S = that.state;
                    }

                    connection.log("Invoking " + that.hubName + "." + methodName);
                    connection.send(data);

                    return d.promise();
                }

                return invoke;
            }(),

            _maximizeHubResponse: function () {
                function _maximizeHubResponse(minHubResponse) {
                    return {
                        State: minHubResponse.S,
                        Result: minHubResponse.R,
                        Progress: minHubResponse.P ? {
                            Id: minHubResponse.P.I,
                            Data: minHubResponse.P.D
                        } : null,
                        Id: minHubResponse.I,
                        IsHubException: minHubResponse.H,
                        Error: minHubResponse.E,
                        StackTrace: minHubResponse.T,
                        ErrorData: minHubResponse.D
                    };
                }

                return _maximizeHubResponse;
            }()
        };

        hubProxy.fn.init.prototype = hubProxy.fn;

        // hubConnection
        function hubConnection(url, options) {
            /// <summary>Creates a new hub connection.</summary>
            /// <param name="url" type="String">[Optional] The hub route url, defaults to "/signalr".</param>
            /// <param name="options" type="Object">[Optional] Settings to use when creating the hubConnection.</param>
            var settings = {
                qs: null,
                logging: false,
                useDefaultPath: true
            };

            $.extend(settings, options);

            if (!url || settings.useDefaultPath) {
                url = (url || "") + "/signalr";
            }
            return new hubConnection.fn.init(url, settings);
        }

        hubConnection.fn = hubConnection.prototype = $.connection();

        hubConnection.fn.init = function (url, options) {
            var settings = {
                qs: null,
                logging: false,
                useDefaultPath: true
            },
                connection = this;

            $.extend(settings, options);

            // Call the base constructor
            $.signalR.fn.init.call(connection, url, settings.qs, settings.logging);

            // Object to store hub proxies for this connection
            connection.proxies = {};

            connection._.invocationCallbackId = 0;
            connection._.invocationCallbacks = {};

            // Wire up the received handler
            connection.received(function (minData) {
                var data, proxy, dataCallbackId, callback, hubName, eventName;
                if (!minData) {
                    return;
                }

                // We have to handle progress updates first in order to ensure old clients that receive
                // progress updates enter the return value branch and then no-op when they can't find
                // the callback in the map (because the minData.I value will not be a valid callback ID)
                if (typeof minData.P !== "undefined") {
                    // Process progress notification
                    dataCallbackId = minData.P.I.toString();
                    callback = connection._.invocationCallbacks[dataCallbackId];
                    if (callback) {
                        callback.method.call(callback.scope, minData);
                    }
                } else if (typeof minData.I !== "undefined") {
                    // We received the return value from a server method invocation, look up callback by id and call it
                    dataCallbackId = minData.I.toString();
                    callback = connection._.invocationCallbacks[dataCallbackId];
                    if (callback) {
                        // Delete the callback from the proxy
                        connection._.invocationCallbacks[dataCallbackId] = null;
                        delete connection._.invocationCallbacks[dataCallbackId];

                        // Invoke the callback
                        callback.method.call(callback.scope, minData);
                    }
                } else {
                    data = this._maximizeClientHubInvocation(minData);

                    // We received a client invocation request, i.e. broadcast from server hub
                    connection.log("Triggering client hub event '" + data.Method + "' on hub '" + data.Hub + "'.");

                    // Normalize the names to lowercase
                    hubName = data.Hub.toLowerCase();
                    eventName = data.Method.toLowerCase();

                    // Trigger the local invocation event
                    proxy = this.proxies[hubName];

                    // Update the hub state
                    $.extend(proxy.state, data.State);
                    $(proxy).triggerHandler(makeEventName(eventName), [data.Args]);
                }
            });

            connection.error(function (errData, origData) {
                var callbackId, callback;

                if (!origData) {
                    // No original data passed so this is not a send error
                    return;
                }

                callbackId = origData.I;
                callback = connection._.invocationCallbacks[callbackId];

                // Verify that there is a callback bound (could have been cleared)
                if (callback) {
                    // Delete the callback
                    connection._.invocationCallbacks[callbackId] = null;
                    delete connection._.invocationCallbacks[callbackId];

                    // Invoke the callback with an error to reject the promise
                    callback.method.call(callback.scope, { E: errData });
                }
            });

            connection.reconnecting(function () {
                if (connection.transport && connection.transport.name === "webSockets") {
                    clearInvocationCallbacks(connection, "Connection started reconnecting before invocation result was received.");
                }
            });

            connection.disconnected(function () {
                clearInvocationCallbacks(connection, "Connection was disconnected before invocation result was received.");
            });
        };

        hubConnection.fn._maximizeClientHubInvocation = function (minClientHubInvocation) {
            return {
                Hub: minClientHubInvocation.H,
                Method: minClientHubInvocation.M,
                Args: minClientHubInvocation.A,
                State: minClientHubInvocation.S
            };
        };

        hubConnection.fn._registerSubscribedHubs = function () {
            /// <summary>
            ///     Sets the starting event to loop through the known hubs and register any new hubs
            ///     that have been added to the proxy.
            /// </summary>
            var connection = this;

            if (!connection._subscribedToHubs) {
                connection._subscribedToHubs = true;
                connection.starting(function () {
                    // Set the connection's data object with all the hub proxies with active subscriptions.
                    // These proxies will receive notifications from the server.
                    var subscribedHubs = [];

                    $.each(connection.proxies, function (key) {
                        if (this.hasSubscriptions()) {
                            subscribedHubs.push({ name: key });
                            connection.log("Client subscribed to hub '" + key + "'.");
                        }
                    });

                    if (subscribedHubs.length === 0) {
                        connection.log("No hubs have been subscribed to.  The client will not receive data from hubs.  To fix, declare at least one client side function prior to connection start for each hub you wish to subscribe to.");
                    }

                    connection.data = connection.json.stringify(subscribedHubs);
                });
            }
        };

        hubConnection.fn.createHubProxy = function (hubName) {
            /// <summary>
            ///     Creates a new proxy object for the given hub connection that can be used to invoke
            ///     methods on server hubs and handle client method invocation requests from the server.
            /// </summary>
            /// <param name="hubName" type="String">
            ///     The name of the hub on the server to create the proxy for.
            /// </param>

            // Normalize the name to lowercase
            hubName = hubName.toLowerCase();

            var proxy = this.proxies[hubName];
            if (!proxy) {
                proxy = hubProxy(this, hubName);
                this.proxies[hubName] = proxy;
            }

            this._registerSubscribedHubs();

            return proxy;
        };

        hubConnection.fn.init.prototype = hubConnection.fn;

        $.hubConnection = hubConnection;
    })(jQueryShim, window);
    /* jquery.signalR.version.js */
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.


    /*global window:false */
    /// <reference path="jquery.signalR.core.js" />
    (function ($, undefined) {
        $.signalR.version = "2.2.1";
    })(jQueryShim);
}
var hubConnection = exports.hubConnection = jQueryShim.hubConnection;
var signalR = exports.signalR = jQueryShim.signalR;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Zzip");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("5QVw");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _keys = __webpack_require__(2);

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var jQueryDeferred = __webpack_require__(21);
var jQueryParam = __webpack_require__(22);

var jqueryFunction = function () {
  function jqueryFunction(subject) {
    var events = subject.events || {};

    if (subject && subject === subject.window) return {
      0: subject,
      load: function () {
        function load(handler) {
          return subject.addEventListener('load', handler, false);
        }

        return load;
      }(),
      bind: function () {
        function bind(event, handler) {
          return subject.addEventListener(event, handler, false);
        }

        return bind;
      }(),
      unbind: function () {
        function unbind(event, handler) {
          return subject.removeEventListener(event, handler, false);
        }

        return unbind;
      }()
    };

    return {
      0: subject,

      unbind: function () {
        function unbind(event, handler) {
          var handlers = events[event] || [];

          if (handler) {
            var idx = handlers.indexOf(handler);
            if (idx !== -1) handlers.splice(idx, 1);
          } else handlers = [];

          events[event] = handlers;
          subject.events = events;
        }

        return unbind;
      }(),
      bind: function () {
        function bind(event, handler) {
          var current = events[event] || [];
          events[event] = current.concat(handler);
          subject.events = events;
        }

        return bind;
      }(),
      triggerHandler: function () {
        function triggerHandler(event, args) {
          var _this = this;

          var handlers = events[event] || [];
          handlers.forEach(function (fn) {
            if (args && args[0] && args[0].type === undefined) {
              args = [{
                type: event
              }].concat(args || []);
            } else {
              args = args || [];
            }

            fn.apply(_this, args);
          });
        }

        return triggerHandler;
      }()
    };
  }

  return jqueryFunction;
}();

var xhr = function () {
  function xhr() {
    try {
      return typeof window !== "undefined" ? new window.XMLHttpRequest() : null;
    } catch (e) {}
  }

  return xhr;
}();

var ajax = function () {
  function ajax(options) {
    var request = xhr();
    request.onreadystatechange = function () {
      if (request.readyState !== 4) {
        return;
      }

      if (request.status === 200 && !request._hasError) {
        options.success && options.success(JSON.parse(request.responseText));
      } else {
        options.error && options.error(request);
      }
    };

    request.open(options.type, options.url);
    request.setRequestHeader('content-type', options.contentType);

    request.send(options.data.data && 'data=' + options.data.data);

    return {
      abort: function () {
        function abort(reason) {
          return request.abort(reason);
        }

        return abort;
      }()
    };
  }

  return ajax;
}();

module.exports = jQueryDeferred.extend(jqueryFunction, jQueryDeferred, {
  defaultAjaxHeaders: null,
  ajax: ajax,
  inArray: function () {
    function inArray(arr, item) {
      return arr.indexOf(item) !== -1;
    }

    return inArray;
  }(),
  trim: function () {
    function trim(str) {
      return str && str.trim();
    }

    return trim;
  }(),
  isEmptyObject: function () {
    function isEmptyObject(obj) {
      return !obj || (0, _keys2['default'])(obj).length === 0;
    }

    return isEmptyObject;
  }(),
  makeArray: function () {
    function makeArray(arr) {
      return [].slice.call(arr, 0);
    }

    return makeArray;
  }(),
  param: function () {
    function param(obj) {
      return jQueryParam(obj);
    }

    return param;
  }(),
  support: {
    cors: function () {
      var xhrObj = xhr();
      return !!xhrObj && "withCredentials" in xhrObj;
    }()
  }
});

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("j90D");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("zp2a");

/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("aVpJ");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.routeActions = exports.pushState = exports.setBackAction = exports.pushstep = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.ConnectedRouter = exports.LOCATION_ROUTING = exports.CALL_HISTORY_METHOD = exports.LOCATION_CHANGE = undefined;

var _keys = __webpack_require__(2);

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = __webpack_require__(25);

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__(26);

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = __webpack_require__(4);

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = __webpack_require__(5);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(6);

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(7);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(8);

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

exports.setupRouteAspectActions = setupRouteAspectActions;
exports.routeReducer = routeReducer;
exports.routerMiddleware = routerMiddleware;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _index = __webpack_require__(10);

var _nucleus = __webpack_require__(1);

var _propTypes = __webpack_require__(11);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterDom = __webpack_require__(27);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var currentRoute = "#";
var currentStep = 0;
var stepAction = null;
var pushBackAction = null;
var isOneTimeBackAction = false;
var routeNavigationActions = {
  beforeNavigationAction: null,
  afterNavigationAction: null
};

var LOCATION_CHANGE = exports.LOCATION_CHANGE = "@@router/LOCATION_CHANGE";
var CALL_HISTORY_METHOD = exports.CALL_HISTORY_METHOD = "@@router/CALL_HISTORY_METHOD";
var LOCATION_ROUTING = exports.LOCATION_ROUTING = "@@router/LOCATION_ROUTING";
var _routerHistory = null;
var originalHref = "";

var ConnectedRouter = exports.ConnectedRouter = (_temp2 = _class = function (_Component) {
  (0, _inherits3["default"])(ConnectedRouter, _Component);

  function ConnectedRouter() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3["default"])(this, ConnectedRouter);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3["default"])(this, (_ref = ConnectedRouter.__proto__ || (0, _getPrototypeOf2["default"])(ConnectedRouter)).call.apply(_ref, [this].concat(args))), _this), _this.handleLocationChange = function (location) {
      currentRoute = location.pathname;
      currentStep = 0;
      stepAction = null;
      if (isOneTimeBackAction) {
        pushBackAction = null;
      }
      if (typeof window !== "undefined" && window) {
        location.search = window.location.search;
        location.windowPathname = window.location.pathname;
        location.href = originalHref;
      }

      _this.store.dispatch({
        type: LOCATION_CHANGE,
        payload: {
          location: location,
          isRouting: _this.props.msRouting > 0
        }
      });

      if (_this.props.msRouting > 0) {
        _this.timerRouting = setTimeout(function () {
          _this.store.dispatch({
            type: LOCATION_ROUTING,
            payload: false
          });
        }, _this.props.msRouting);
      }
    }, _temp), (0, _possibleConstructorReturn3["default"])(_this, _ret);
  }

  (0, _createClass3["default"])(ConnectedRouter, [{
    key: "componentWillMount",
    value: function () {
      function componentWillMount() {
        var _props = this.props,
            propsStore = _props.store,
            isSSR = _props.isSSR;

        this.store = propsStore || this.context.store;
        if (!isSSR) {
          this.unsubscribeFromHistory = this.constructor.history.listen(this.handleLocationChange);
          this.handleLocationChange(this.constructor.history.location);
        }
      }

      return componentWillMount;
    }()
  }, {
    key: "componentWillUnmount",
    value: function () {
      function componentWillUnmount() {
        if (this.unsubscribeFromHistory) this.unsubscribeFromHistory();

        if (this.timerRouting) {
          clearTimeout(this.timerRouting);
        }
      }

      return componentWillUnmount;
    }()
  }, {
    key: "render",
    value: function () {
      function render() {
        var _props2 = this.props,
            isSSR = _props2.isSSR,
            msRouting = _props2.msRouting,
            otherProps = (0, _objectWithoutProperties3["default"])(_props2, ["isSSR", "msRouting"]);


        return isSSR ? _react2["default"].createElement(_reactRouterDom.StaticRouter, (0, _extends3["default"])({}, otherProps, { context: {} })) : _react2["default"].createElement(_reactRouterDom.Router, (0, _extends3["default"])({}, otherProps, { history: this.constructor.history }));
      }

      return render;
    }()
  }], [{
    key: "history",
    get: function () {
      function get() {
        return _routerHistory;
      }

      return get;
    }(),
    set: function () {
      function set(value) {
        _routerHistory = value;
      }

      return set;
    }()
  }]);
  return ConnectedRouter;
}(_react.Component), _class.propTypes = {
  store: _propTypes2["default"].object,
  children: _propTypes2["default"].node,
  isSSR: _propTypes2["default"].bool,
  context: _propTypes2["default"].object,
  location: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].object]),
  basename: _propTypes2["default"].string,
  msRouting: _propTypes2["default"].number
}, _class.contextTypes = {
  store: _propTypes2["default"].object
}, _class.defaultProps = {
  msRouting: 0
}, _temp2);

var RouteManager = function () {
  function RouteManager() {
    (0, _classCallCheck3["default"])(this, RouteManager);

    var self = this;
    if (typeof window !== "undefined") {
      originalHref = window.location.href;
      window.history.pushState({}, "", "#");
      window.onpopstate = function (ev) {
        var backRoute = null;
        window.history.pushState({}, "", "#");
        var routeSplit = currentRoute.split("/");
        if (routeSplit[0] == "") routeSplit.splice(0, 1);
        var startRouteModel = self.routes.route.childRoutes;
        while (routeSplit.length > 0) {
          var found = false;
          if (!startRouteModel) {
            break;
          }
          for (var i = 0; i < startRouteModel.length; i++) {
            if (startRouteModel[i].path == routeSplit[0]) {
              if (routeSplit.length == 1) {
                found = true;
                backRoute = startRouteModel[i].backroute;
                routeSplit.splice(0, 1);
                break;
              } else {
                found = true;
                routeSplit.splice(0, 1);
                startRouteModel = startRouteModel[i].childRoutes;
                break;
              }
            }
          }
          if (!found) {
            routeSplit.splice(0, 1);
          }
        }
        if (currentStep > 0 && stepAction) {
          if (pushBackAction) {
            pushBackAction();
            if (isOneTimeBackAction) pushBackAction = null;
          } else {
            currentStep--;
            _index.store.dispatch({
              type: stepAction,
              payload: currentStep
            });
          }
        } else {
          if (pushBackAction) {
            pushBackAction();
          } else {
            if (backRoute && backRoute != currentRoute && currentRoute != "#") {
              _index.store.dispatch({
                type: CALL_HISTORY_METHOD,
                payload: { method: "replace", arg: backRoute }
              });
            }
          }
        }
      };
    }
  }

  (0, _createClass3["default"])(RouteManager, [{
    key: "generateRoutes",
    value: function () {
      function generateRoutes(initialLang, model, langGroup, transactionUrl, initialSet) {
        this.routes = model;
        this.langGroup = langGroup;
        this.transactionUrl = transactionUrl;
        _nucleus.languageService.assignInitialSet(initialLang, initialSet);
      }

      return generateRoutes;
    }()
  }, {
    key: "updateLanguge",
    value: function () {
      function updateLanguge(newLang, path) {
        _nucleus.languageService.changeLanguage(newLang);
        push(path);
      }

      return updateLanguge;
    }()
  }, {
    key: "getTransactionUrl",
    value: function () {
      function getTransactionUrl() {
        return this.transactionUrl;
      }

      return getTransactionUrl;
    }()
  }, {
    key: "queryGroups",
    value: function () {
      function queryGroups(path) {
        if (path && path.length > 0) {
          if (path.substr(0, 1) != "/") {
            path = "/" + path;
          }
          if (path.substr(path.length - 1, 1) == "/") {
            path = path.substr(0, path.length - 1);
          }
          var newPath = (0, _keys2["default"])(this.langGroup).filter(function (route) {
            return _nucleus.languageService.routeMatchRule(path, route) === true;
          });
          if (newPath && newPath.length > 0) {
            return this.langGroup[newPath[0]];
          } else {
            return null;
          }
        }
        return null;
      }

      return queryGroups;
    }()
  }]);
  return RouteManager;
}();

var routeManager = new RouteManager();
exports["default"] = routeManager;


var SELECT_LOCATION = function () {
  function SELECT_LOCATION(state) {
    return state.routing.location;
  }

  return SELECT_LOCATION;
}();

function updateLocation(method) {
  return function (arg, config) {
    if (arg !== currentRoute) {
      var groups = routeManager.queryGroups(arg);
      if (_nucleus.languageService.url && _nucleus.languageService.url != "" && groups && groups.length > 0) {
        _nucleus.languageService.acquireGroupSets(groups, routeManager.getTransactionUrl(), function () {
          routePush(method, arg, config);
        }, function (error) {
          throw error;
        });
      } else {
        routePush(method, arg, config);
      }
    }
  };
}

function routePush(method, arg, config) {
  var args = {
    parentProps: (0, _extends3["default"])({
      method: method,
      arg: arg
    }, config),
    childProps: (0, _extends3["default"])({
      method: method,
      arg: arg
    }, config),
    route: arg
  };
  if (routeNavigationActions.beforeNavigationAction) routeNavigationActions.beforeNavigationAction(args);
  _index.store.dispatch({
    type: CALL_HISTORY_METHOD,
    payload: { method: method, arg: arg }
  });
  if (routeNavigationActions.afterNavigationAction) routeNavigationActions.afterNavigationAction(args);
}

function setupRouteAspectActions(config) {
  routeNavigationActions = (0, _extends3["default"])({}, routeNavigationActions, config);
}

var push = exports.push = updateLocation("push");
var replace = exports.replace = updateLocation("replace");
var go = exports.go = updateLocation("go");
var goBack = exports.goBack = updateLocation("goBack");
var goForward = exports.goForward = updateLocation("goForward");
var pushstep = exports.pushstep = function () {
  function pushstep(step, action) {
    currentStep = step;
    stepAction = action;
    _index.store.dispatch({
      type: action,
      payload: step
    });
  }

  return pushstep;
}();
var setBackAction = exports.setBackAction = function () {
  function setBackAction(action) {
    var isOneTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    pushBackAction = action;
    isOneTimeBackAction = isOneTime;
  }

  return setBackAction;
}();
var pushState = exports.pushState = function () {
  function pushState() {
    var historyObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var href = [];
    var protocol = "http://";
    if (window.location.href.includes("https://")) {
      protocol = "https://";
      href = window.location.href.replace(protocol, "").split("/");
    } else {
      href = window.location.href.replace(protocol, "").split("/");
    }
    var histObj = {
      data: historyObj.data || {},
      pageTitle: historyObj.pageTitle || "",
      url: historyObj.url || protocol + href[0] + "/#"
    };
    window.history.pushState(histObj.data, histObj.pageTitle, histObj.url);
  }

  return pushState;
}();
var routeActions = exports.routeActions = {
  push: push,
  replace: replace,
  go: go,
  goBack: goBack,
  goForward: goForward,
  pushstep: pushstep,
  setBackAction: setBackAction,
  pushState: pushState
};

var initialState = {
  location: null,
  locationPrevious: {
    pathname: null
  },
  isRouting: false
};

function routeReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;

  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      type = _ref2.type,
      payload = _ref2.payload;

  if (type === LOCATION_CHANGE) {
    return (0, _extends3["default"])({}, state, {
      location: (0, _extends3["default"])({}, payload.location),
      locationPrevious: (0, _extends3["default"])({}, state.location || initialState.locationPrevious),
      isRouting: payload.isRouting
    });
  } else if (type === LOCATION_ROUTING) {
    return (0, _extends3["default"])({}, state, {
      isRouting: payload
    });
  }

  return state;
}

function routerMiddleware(history) {
  return function () {
    return function (next) {
      return function (action) {
        if (action.type !== CALL_HISTORY_METHOD) {
          return next(action);
        }

        var _action$payload = action.payload,
            method = _action$payload.method,
            arg = _action$payload.arg;

        var newArg = arg;
        if (newArg && newArg.length > 0) {
          var firstChar = newArg[0];
          if (firstChar !== "/") {
            newArg = "/" + newArg;
          }
        }
        history[method](newArg);
      };
    };
  };
}

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Dd8w");

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("+6Bu");

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("F8kA");

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("M4fF");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _setPrototypeOf = __webpack_require__(15);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

exports['default'] = Page;

var _base = __webpack_require__(12);

var _base2 = _interopRequireDefault(_base);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function Page(target) {
  (0, _setPrototypeOf2['default'])(target.prototype, _base2['default'].prototype);
  (0, _setPrototypeOf2['default'])(target, _base2['default']);
}

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _setPrototypeOf = __webpack_require__(15);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

exports['default'] = Module;

var _module = __webpack_require__(14);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function Module(target) {
  (0, _setPrototypeOf2['default'])(target.prototype, _module2['default'].prototype);
  (0, _setPrototypeOf2['default'])(target, _module2['default']);
}

/***/ })
/******/ ]);
});

/***/ }),

/***/ "9Zln":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _passiveEventListeners = __webpack_require__("yBKa");

var events = ['mousedown', 'mousewheel', 'touchmove', 'keydown'];

exports.default = {
  subscribe: function subscribe(cancelEvent) {
    return typeof document !== 'undefined' && events.forEach(function (event) {
      return (0, _passiveEventListeners.addPassiveEventListener)(document, event, cancelEvent);
    });
  }
};

/***/ }),

/***/ "A46Q":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "AEpP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _reactRouterDom = __webpack_require__("F8kA");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _grid = __webpack_require__("MI+p");

var _grid2 = _interopRequireDefault(_grid);

var _row = __webpack_require__("J+e6");

var _row2 = _interopRequireDefault(_row);

var _col = __webpack_require__("CUvw");

var _col2 = _interopRequireDefault(_col);

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

var _ = __webpack_require__("xWJd");

var _2 = _interopRequireDefault(_);

var _success = __webpack_require__("3rWo");

var _success2 = _interopRequireDefault(_success);

var _error = __webpack_require__("NkDL");

var _error2 = _interopRequireDefault(_error);

var _inviteToBranch = __webpack_require__("qqsW");

var _inviteToBranch2 = _interopRequireDefault(_inviteToBranch);

__webpack_require__("sleA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Result = function (_BappBase) {
  _inherits(Result, _BappBase);

  function Result(props) {
    _classCallCheck(this, Result);

    return _possibleConstructorReturn(this, (Result.__proto__ || Object.getPrototypeOf(Result)).call(this, props));
  }

  _createClass(Result, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        { className: "result-page" },
        _react2.default.createElement(
          _grid2.default,
          { type: "section" },
          _react2.default.createElement(
            _row2.default,
            null,
            _react2.default.createElement(
              _col2.default,
              { xs: 12, sm: 12, md: 10, lg: 10, xl: 10, mdOffset: 1, lgOffset: 1, xlOffset: 1 },
              _react2.default.createElement(
                _reactRouterDom.Switch,
                null,
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/result/success", component: _success2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/result/error", component: _error2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/result/inviteToBranch", component: _inviteToBranch2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { component: _2.default })
              )
            )
          )
        )
      );
    }
  }]);

  return Result;
}(_webcore.BappBase);

Result.propTypes = {};

Result.defaultProps = {};
exports.default = Result;

/***/ }),

/***/ "B0QY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _message = __webpack_require__("+g8O");

var _message2 = _interopRequireDefault(_message);

__webpack_require__("4buR");

var _form = __webpack_require__("3kzJ");

var _form2 = _interopRequireDefault(_form);

__webpack_require__("2xzD");

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _label = __webpack_require__("79hd");

var _label2 = _interopRequireDefault(_label);

__webpack_require__("fLa5");

var _utils = __webpack_require__("FOo0");

var _button = __webpack_require__("66uW");

var _button2 = _interopRequireDefault(_button);

__webpack_require__("jU+E");

var _select = __webpack_require__("qjcq");

var _select2 = _interopRequireDefault(_select);

__webpack_require__("WCkl");

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

var _utils2 = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils2);

var _constants = __webpack_require__("iRmV");

var Constants = _interopRequireWildcard(_constants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var SubeBilgileri = (_class = function (_BappBase) {
  _inherits(SubeBilgileri, _BappBase);

  function SubeBilgileri(props) {
    _classCallCheck(this, SubeBilgileri);

    var _this = _possibleConstructorReturn(this, (SubeBilgileri.__proto__ || Object.getPrototypeOf(SubeBilgileri)).call(this, props));

    _this.state = {
      city: '',
      branch: '',
      cities: [],
      branches: []
    };

    return _this;
  }

  _createClass(SubeBilgileri, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.getStaticCities();

      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/3.7/sube-secimi",
        pageTitle: "HÄ±zlÄ± Ä°htiyaÃ§ Kredisi"
      });
    }
  }, {
    key: "getStaticCities",
    value: function getStaticCities() {
      var _this2 = this;

      _ihtiyackredisistate2.default.getStaticCities({
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {
        if (response) {
          _this2.setState({ cities: response.cities });
        }
      });
    }
  }, {
    key: "getBranches",
    value: function getBranches(city) {
      var _this3 = this;

      _ihtiyackredisistate2.default.getBranches({
        tokenSessionId: this.props.tokenSessionId,
        city: city
      }).then(function (response) {
        if (response) {
          _this3.setState({ branches: response.branches });
        }
      });
    }
  }, {
    key: "handleInputChange",
    value: function handleInputChange(meta) {
      var _this4 = this;

      if (meta.city) {
        var newCity = meta.city ? meta.city.value : null;
        this.setState({
          city: newCity,
          branch: ''
        }, function () {
          if (Utils.isNullOrEmpty(newCity) === false) {
            _this4.getBranches(newCity);
          }
        });
      }

      if (meta.branch) {
        var newBranch = meta.branch ? meta.branch.value : null;
        this.setState({
          branch: newBranch
        });
      }
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit(e, formValues) {
      var _this5 = this;

      var isValid = true;
      if (this.props.branchFlg) {
        if (!formValues.branch) {
          isValid = false;
        }
      }

      if (isValid) {
        _ihtiyackredisistate2.default.completeApplication({
          tckn: this.props.tckn,
          subeKodu: this.state.branch,
          tokenSessionId: this.props.tokenSessionId
        }).then(function (response) {
          if (response && !response.error) {
            _webcore.routeActions.push({
              pathname: _this5.props.nextPage
            });
          }
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        null,
        this.props.error && _react2.default.createElement(
          _message2.default,
          { id: "errorMsg", msgType: "error" },
          this.props.error
        ),
        _react2.default.createElement(
          _form2.default,
          {
            className: "sube-bilgileri-form",
            onSubmit: this.handleSubmit,
            onChange: this.handleInputChange
          },
          _react2.default.createElement(
            _panel2.default,
            { hasFooter: false },
            _react2.default.createElement(
              _panel2.default.Body,
              null,
              this.props.branchFlg && _react2.default.createElement(
                _react2.default.Fragment,
                null,
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "city" },
                  _react2.default.createElement(_label2.default, { text: "\u0130l", forId: "city" }),
                  _react2.default.createElement(_select2.default, {
                    id: "city",
                    name: "city",
                    placeholder: "Se\xE7iniz",
                    options: this.state.cities,
                    value: this.state.city,
                    valueField: "ilKodu",
                    displayField: "ilAdi",
                    onChange: this.handleCityChange,
                    validations: [(0, _utils.required)("LÃ¼tfen il seÃ§iniz")]
                  })
                ),
                _react2.default.createElement(
                  _form2.default.Group,
                  { name: "BranchGroup" },
                  _react2.default.createElement(_label2.default, { text: "\u015Eube", forId: "branch" }),
                  _react2.default.createElement(_select2.default, {
                    id: "branch",
                    name: "branch",
                    placeholder: "Se\xE7iniz",
                    options: this.state.branches,
                    value: this.state.branch,
                    valueField: "subeKodu",
                    displayField: "subeAdi",
                    onChange: this.handleBranchChange,
                    validations: [(0, _utils.required)("LÃ¼tfen Åube seÃ§iniz")]
                  })
                )
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { className: "form-action-row" },
                _react2.default.createElement(_button2.default, {
                  id: "btn01",
                  text: "Devam Et",
                  fetching: this.props.fetching,
                  disabled: this.props.fetching
                })
              )
            )
          )
        )
      );
    }
  }]);

  return SubeBilgileri;
}(_webcore.BappBase), (_applyDecoratedDescriptor(_class.prototype, "handleInputChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleInputChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleSubmit", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleSubmit"), _class.prototype)), _class);


function mapStateToProps(state, ownProps) {
  return {
    tckn: state.ihtiyacKredisiState.tckn,
    tokenSessionId: state.ihtiyacKredisiState.tokenSessionId,
    nextPage: state.ihtiyacKredisiState.nextPage,
    branchFlg: state.ihtiyacKredisiState.branchFlg,
    eligible: state.ihtiyacKredisiState.eligible,
    fetching: state.ihtiyacKredisiState.fetching,
    error: state.ihtiyacKredisiState.error
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(SubeBilgileri);

/***/ }),

/***/ "B0bq":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("fWfb");
module.exports = __webpack_require__("FeBl").Object.getOwnPropertySymbols;


/***/ }),

/***/ "BO1k":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("fxRn"), __esModule: true };

/***/ }),

/***/ "BUAs":
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__("i4ON"),
    copyObject = __webpack_require__("tv3T"),
    createAssigner = __webpack_require__("0DSl"),
    isArrayLike = __webpack_require__("bGc4"),
    isPrototype = __webpack_require__("HT7L"),
    keys = __webpack_require__("ktak");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;


/***/ }),

/***/ "CXw9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("O4g8");
var global = __webpack_require__("7KvD");
var ctx = __webpack_require__("+ZMJ");
var classof = __webpack_require__("RY/4");
var $export = __webpack_require__("kM2E");
var isObject = __webpack_require__("EqjI");
var aFunction = __webpack_require__("lOnJ");
var anInstance = __webpack_require__("2KxR");
var forOf = __webpack_require__("NWt+");
var speciesConstructor = __webpack_require__("t8x9");
var task = __webpack_require__("L42u").set;
var microtask = __webpack_require__("82Mu")();
var newPromiseCapabilityModule = __webpack_require__("qARP");
var perform = __webpack_require__("dNDb");
var userAgent = __webpack_require__("iUbK");
var promiseResolve = __webpack_require__("fJUb");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__("dSzd")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__("xH/j")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__("e6n0")($Promise, PROMISE);
__webpack_require__("bRrM")(PROMISE);
Wrapper = __webpack_require__("FeBl")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__("dY0y")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "Cdx3":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__("sB3e");
var $keys = __webpack_require__("lktj");

__webpack_require__("uqUo")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "CjFb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("j1ja");

var _reactDom = __webpack_require__("O27J");

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _redux = __webpack_require__("inI0");

var _redux2 = _interopRequireDefault(_redux);

var _webcore = __webpack_require__("9EQB");

var _app = __webpack_require__("wy+F");

var _app2 = _interopRequireDefault(_app);

var _reactHotLoader = __webpack_require__("rGbO");

var _axios = __webpack_require__("fere");

var _axios2 = _interopRequireDefault(_axios);

var _enricher = __webpack_require__("SMe3");

var _enricher2 = _interopRequireDefault(_enricher);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var render = function render(Component) {
  _reactDom2.default.render(_react2.default.createElement(
    _reactHotLoader.AppContainer,
    null,
    _react2.default.createElement(Component, null)
  ), document.getElementById("content") // eslint-disable-line
  );
};

(0, _axios2.default)();
(0, _webcore.addAjaxEnricher)(_enricher2.default);
var store = (0, _webcore.configure)(_redux2.default, []);

render(_app2.default);

/***/ }),

/***/ "D2rl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _queryString = __webpack_require__("OAwv");

var _queryString2 = _interopRequireDefault(_queryString);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

var _calculateinterest = __webpack_require__("lfkx");

var _utils = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils);

var _constants = __webpack_require__("iRmV");

var Constants = _interopRequireWildcard(_constants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var KREDI_TURU_INFO = "KullanÄ±lan kredinin hayat sigortalÄ± olarak tercih edilmesi durumunda daha dÃ¼ÅÃ¼k faiz oranÄ±ndan yararlanÄ±lÄ±r " + "ve aynÄ± zamanda bu kredinin geri Ã¶demesi, Ã¶lÃ¼m veya kalÄ±cÄ± sakatlÄ±k durumunda gÃ¼vence altÄ±na alÄ±nmÄ±Å olur. " + "Hayat sigortalÄ± baÅvurulabilecek en yÃ¼ksek kredi tutarÄ± 250.000 TL'dir";

var FormV2 = (_class = function (_BappBase) {
  _inherits(FormV2, _BappBase);

  function FormV2(props, context) {
    _classCallCheck(this, FormV2);

    var _this = _possibleConstructorReturn(this, (FormV2.__proto__ || Object.getPrototypeOf(FormV2)).call(this, props, context));

    _this.state = {
      amount: 100000,
      vade: 24, // default vade 24 ay, bu deÄerin deÄiÅmesi iÃ§in hem burasÄ± hem de (public/resources/js/utility.js) RangeInputs'taki initalVal deÄiÅtirilmeli
      sigortali: "E",
      selectedProductInfo: null,
      tckn: "",
      showCaptcha: false,
      kvkk: false,
      captcha: "",
      showInsuranceOptions: true,
      calculated: false,
      amountRangeError: ''
    };

    _this.MIN_VADE = 1;
    _this.DEFAULT_MAX_VADE = 36;
    _this.queryStringAmount = '';
    _this.queryStringVade = '';

    _this.insuredProductInfo = null;
    _this.uninsuredProductInfo = null;
    return _this;
  }

  _createClass(FormV2, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var params = _queryString2.default.parse(window.location.search); // eslint-disable-line
      var tutar = (0, _utils.getQuerystringValue)(params, "tutar");
      var vade = (0, _utils.getQuerystringValue)(params, "vade");
      if (tutar && parseInt(tutar)) {
        this.queryStringAmount = tutar;
        // TODO: Querystringten gelen deÄer seÃ§ilen Ã¼rÃ¼nÃ¼n tutar aralÄ±ÄÄ±nda mÄ±?
        this.setState({ amount: tutar });
      }
      if (vade && parseInt(vade)) {
        this.queryStringVade = vade;
      }

      var firmName = this.props.firm ? this.props.firm.toLowerCase() : null;
      if (firmName) {
        this.setState({ showInsuranceOptions: false });
        this.getProductInfo(Constants.UNINSURED_PRODUCT_TYPE, firmName);
      } else {
        this.getProductInfo(Constants.INSURED_PRODUCT_TYPE, firmName);
        this.getProductInfo(Constants.UNINSURED_PRODUCT_TYPE, firmName);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      $(function () {
        MODULES.Utility.Validation();
      });

      // Slider deÄiÅtiÄinde ilgili input alanÄ±nÄ±n deÄiÅmesi iÃ§in:
      var self = this; // eslint-disable-line
      $("#textAmount").on('change', function (e) {
        self.handleAmountChange(e);
        return true;
      });

      $("#txtVade").on('change', function (e) {
        self.handleVadeChange(e);
        return true;
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevState.selectedProductInfo != this.state.selectedProductInfo) {
        MODULES.Utility.RangeInputs();
      }
      if (prevState.maxLoanTermValue != this.state.maxLoanTermValue) {
        MODULES.Utility.RangeInputs();
      }

      if (prevState.amount !== this.state.amount || prevState.vade !== this.state.vade) {
        if (this.insuredProductInfo) {
          this.setInsuredProductInterestRate(this.state.amount, this.state.vade);
        }
        if (this.uninsuredProductInfo) {
          this.setUninsuredProductInterestRate(this.state.amount, this.state.vade);
        }
      }

      if (prevProps.tokenSessionId != this.props.tokenSessionId && this.props.tokenSessionId) {
        this.tokenCreated = true;
        _ihtiyackredisistate2.default.createCaptcha({
          tckn: this.state.tckn,
          tokenSessionId: this.props.tokenSessionId
        });
      }
      if (prevProps.captchaData != this.props.captchaData) {
        this.setState({ showCaptcha: true, kvkk: false, captcha: '' }); // eslint-disable-line
      }
    }
  }, {
    key: "handleTcknChange",
    value: function handleTcknChange(e) {
      if (e.target) {
        this.setState({ tckn: e.target.value });
        if (e.target.value && e.target.value.length === 11) {
          _ihtiyackredisistate2.default.createToken({ tckn: e.target.value });
        }
      }
    }
  }, {
    key: "handleCaptchaChange",
    value: function handleCaptchaChange(e) {
      if (e.target) {
        var captcha = e.target.value ? e.target.value.toUpperCase() : '';
        this.setState({ captcha: captcha });
      }
    }
  }, {
    key: "handleCaptchaRefresh",
    value: function handleCaptchaRefresh() {
      _ihtiyackredisistate2.default.refreshCaptcha({
        tckn: this.state.tckn,
        tokenSessionId: this.props.tokenSessionId
      });
    }
  }, {
    key: "setInsuredProductInterestRate",
    value: function setInsuredProductInterestRate(amount, vade) {
      var result = (0, _calculateinterest.calculateMonthlyPayment)(amount, vade, this.insuredProductInfo);
      this.setState({ insuredProductFaizOrani: result.faizOrani });
    }
  }, {
    key: "setUninsuredProductInterestRate",
    value: function setUninsuredProductInterestRate(amount, vade) {
      var result = (0, _calculateinterest.calculateMonthlyPayment)(amount, vade, this.uninsuredProductInfo);
      this.setState({ uninsuredProductFaizOrani: result.faizOrani });
    }
  }, {
    key: "getProductInfo",
    value: function getProductInfo(productType, firmName) {
      var _this2 = this;

      _ihtiyackredisistate2.default.getProductInfo({
        productType: productType,
        firm: firmName
      }).then(function (response) {
        if (response && !response.error) {
          if (productType === Constants.INSURED_PRODUCT_TYPE) {
            _this2.insuredProductInfo = response.productInfo;
            if (_this2.state.selectedProductInfo === null) {
              // selectedProductInfo'ya henÃ¼z deÄer set edilmediyse set et. (ilk aÃ§Ä±ldÄ±ÄÄ±nda)
              _this2.setState({
                selectedProductInfo: response.productInfo
              }, function () {
                _this2.getCreditLoanTerms();
                _this2.setInsuredProductInterestRate(_this2.state.amount, _this2.state.vade);
              });
            }
          }
          if (productType === Constants.UNINSURED_PRODUCT_TYPE) {
            _this2.uninsuredProductInfo = response.productInfo;

            if (_this2.props.firm && _this2.state.selectedProductInfo === null) {
              // firma sayfasÄ±na geldi ise selectedProductInfo'ya henÃ¼z deÄer set edilmediyse set et. (ilk aÃ§Ä±ldÄ±ÄÄ±nda). (firma sayfalarÄ±nda sigortasÄ±z Ã¼rÃ¼n kullanÄ±lÄ±yor)
              _this2.setState({
                selectedProductInfo: response.productInfo
              }, function () {
                _this2.getCreditLoanTerms();
                _this2.setUninsuredProductInterestRate(_this2.state.amount, _this2.state.vade);
              });
            } else {
              // aslÄ±nda Ã¶nce geÃ§erli vade aralÄ±ÄÄ±nÄ± bulmak iÃ§in getCreditLoanTerms() Ã§aÄÄ±rmak gerekiyor
              // fakat bu iÅleri karÄ±ÅtÄ±racak.
              _this2.setUninsuredProductInterestRate(_this2.state.amount, _this2.state.vade);
            }
          }
        }
      });
    }
  }, {
    key: "calculatePayment",
    value: function calculatePayment() {
      var _this3 = this;

      var result = null;
      if (this.state.selectedProductInfo) {
        result = (0, _calculateinterest.calculateMonthlyPayment)(this.state.amount, this.state.vade, this.state.selectedProductInfo);
      }

      if (result && result.aylikOdeme) {
        this.setState({
          aylikOdeme: result.aylikOdeme,
          faizOrani: result.faizOrani,
          yearlyInterestRate: isNaN(result.aylikOdeme) ? '0' : '% ' + result.yearlyInterestRate.toFixed(4),
          totalPaymentAmt: isNaN(result.aylikOdeme) ? '0' : result.totalPaymentAmt.toFixed(2),
          calculated: true
        }, function () {
          _ihtiyackredisistate2.default.setCalcDetailsV2(_this3.state.selectedProductInfo, result);
        });
      }
    }
  }, {
    key: "handleAmountChange",
    value: function handleAmountChange(e) {
      var _this4 = this;

      if (e.target) {
        var newVal = e.target.value.replace(/.(?=\d{3})/g, '');
        if (newVal === this.state.amount) {
          return;
        }
        this.checkAmountWithRange(newVal);
        this.setState({
          amount: newVal,
          calculated: false
        }, function () {
          _this4.getCreditLoanTerms();
        });
      }
    }
  }, {
    key: "handleVadeChange",
    value: function handleVadeChange(e) {
      var _this5 = this;

      if (e.target) {
        var newVal = e.target.value;
        if (newVal === this.state.vade) {
          return;
        }
        this.checkVadeWithRange(newVal);
        this.setState({
          vade: newVal,
          calculated: false
        }, function () {
          _this5.calculatePayment();
        });
      }
    }
  }, {
    key: "handleKrediTuruChange",
    value: function handleKrediTuruChange(e) {
      var _this6 = this;

      if (e.target && e.target.value) {
        var sigortali = e.target.value;
        this.setState({
          sigortali: sigortali,
          selectedProductInfo: sigortali === "E" ? this.insuredProductInfo : this.uninsuredProductInfo,
          calculated: false
        }, function () {
          _this6.getCreditLoanTerms();
        });
      }
    }
  }, {
    key: "handleCalcDetailsClick",
    value: function handleCalcDetailsClick(e) {
      _ihtiyackredisistate2.default.toggleCalcDetailsV2(this.props.showCalcDetails);
    }
  }, {
    key: "getCreditLoanTerms",
    value: function getCreditLoanTerms() {
      var _this7 = this;

      var result = null;
      if (this.state.selectedProductInfo) {
        result = (0, _calculateinterest.getLoanTerms)(this.state.amount, this.state.selectedProductInfo);
      }

      if (result) {
        var tempVade = this.state.vade >= result.minLoanTermValue && this.state.vade <= result.maxLoanTermValue ? this.state.vade : result.maxLoanTermValue;
        if (!this.queryStringVade) {
          this.setState({
            maxLoanTermValue: result.maxLoanTermValue,
            vade: tempVade, //vade: result.maxLoanTermValue, vade default olarak 24 ay istendiÄi iÃ§in servisten beslenmiyor.
            minLoanTermValue: result.minLoanTermValue
          }, function () {
            _this7.calculatePayment();
          });
        } else {
          if (!isNaN(this.queryStringVade) && parseInt(this.queryStringVade) >= parseInt(result.minLoanTermValue) && parseInt(this.queryStringVade) <= parseInt(result.maxLoanTermValue)) {
            this.setState({
              maxLoanTermValue: result.maxLoanTermValue,
              vade: this.queryStringVade,
              minLoanTermValue: result.minLoanTermValue
            }, function () {
              _this7.calculatePayment();
            });
          } else {
            this.setState({
              maxLoanTermValue: result.maxLoanTermValue,
              vade: tempVade, //vade: result.maxLoanTermValue, vade default olarak 24 ay istendiÄi iÃ§in servisten beslenmiyor.
              minLoanTermValue: result.minLoanTermValue
            }, function () {
              _this7.calculatePayment();
            });
          }
        }
      }
    }
  }, {
    key: "checkAmountWithRange",
    value: function checkAmountWithRange(newAmount) {
      if (this.state.selectedProductInfo) {
        if (parseInt(newAmount) >= parseInt(this.state.selectedProductInfo.minTutar) && parseInt(newAmount) <= parseInt(this.state.selectedProductInfo.maxTutar)) {
          this.setState({ amountRangeError: '' });
          this.props.amountOrVadeError(false);
          return;
        } else {
          var maxTutar = Utils.addThousandSeparator(this.state.selectedProductInfo.maxTutar, false, '.') + ' TL';
          var minTutar = Utils.addThousandSeparator(this.state.selectedProductInfo.minTutar, false, '.') + " TL";
          var errorMessage = 'Girilen tutar aralÄ±ÄÄ± ' + minTutar + ' - ' + maxTutar + ' olmalÄ±dÄ±r.';

          this.setState({ amountRangeError: errorMessage });
          this.props.amountOrVadeError(true);
        }
      }
    }
  }, {
    key: "checkVadeWithRange",
    value: function checkVadeWithRange(newVade) {
      if (this.state.selectedProductInfo) {
        var result = (0, _calculateinterest.getLoanTerms)(this.state.amount, this.state.selectedProductInfo);
        if (result) {
          if (parseInt(newVade) >= parseInt(result.minLoanTermValue) && parseInt(newVade) <= parseInt(result.maxLoanTermValue)) {
            this.setState({ amountRangeError: '' });
            this.props.amountOrVadeError(false);
            return;
          } else {
            var amt = Utils.addThousandSeparator(this.state.amount, false, '.') + ' TL';
            var errorMessage = amt + ' iÃ§in vade aralÄ±ÄÄ± ' + result.minLoanTermValue + ' - ' + result.maxLoanTermValue + ' ay olmalÄ±dÄ±r.';

            this.setState({ amountRangeError: errorMessage });
            this.props.amountOrVadeError(true);
          }
        }
      }
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit(e) {
      var _this8 = this;

      e.preventDefault();

      var phone = $('#txtPhoneNumber').val().split(' ').join('');
      var urunTip = this.state.sigortali == "E" ? Constants.INSURED_PRODUCT_TYPE : Constants.UNINSURED_PRODUCT_TYPE;

      var formValues = {
        tckn: this.state.tckn,
        captcha: this.state.captcha,
        phone: phone,
        birthDate: $("#txtBirthDate").val(),
        kvkk: $("#chkKvkkBilgilendirme").is(':checked')
      };

      if (formValues.tckn && formValues.tckn.length === 11 && formValues.kvkk) {
        formValues.captcha = formValues.captcha ? formValues.captcha.toUpperCase() : "";
        var birthDate = Utils.getDayMonthYearFromStr(formValues.birthDate);

        _ihtiyackredisistate2.default.applicationInit({
          tckn: formValues.tckn,
          birthDay: birthDate.day,
          birthMonth: birthDate.month,
          birthYear: birthDate.year,
          phone: formValues.phone,
          captcha: formValues.captcha,
          kvkk: formValues.kvkk,
          callCenter: true,
          p: this.props.p,
          tutar: this.state.amount,
          vade: this.state.vade,
          urunTip: urunTip,
          isCovid19: this.props.isCovid19,
          cid: this.props.cid,
          firm: this.props.firm ? this.props.firm.toLowerCase() : '',
          tokenSessionId: this.props.tokenSessionId
        }).then(function (response) {
          if (response && !response.error) {
            _webcore.routeActions.push({
              pathname: _this8.props.nextPage
            });
          } else if (response) {
            _this8.setState({ captcha: '' });
          }
        });
      }
    }
  }, {
    key: "removeTrailingZeros",
    value: function removeTrailingZeros(orgStrValue) {
      var minDecimalLength = 2;
      var parts = orgStrValue.split(',');
      var intPart = parts[0];
      var decimalPart = parts[1];
      var lastChar = decimalPart.charAt(decimalPart.length - 1);
      var count = 0;
      var maxCount = decimalPart.length;
      while (decimalPart.length > minDecimalLength && count++ <= maxCount) {
        if (lastChar === "0") {
          decimalPart = decimalPart.slice(0, -1);
        }
        lastChar = decimalPart.charAt(decimalPart.length - 1);
      }

      return intPart + "," + decimalPart;
    }
  }, {
    key: "formatFaizOrani",
    value: function formatFaizOrani(faizOrani) {
      var strFaizOrani = "";
      if (faizOrani) {
        strFaizOrani = Utils.addThousandSeparator(faizOrani, true, '.');

        //VirgÃ¼lden sonraki ilk 2 hariÃ§ anlamsÄ±z sÄ±fÄ±rlarÄ± siliyoruz:
        // Ãrn1: 2,45300 -> 2,453
        // Ãrn2: 2,40000 -> 2,40
        strFaizOrani = this.removeTrailingZeros(strFaizOrani);
      }
      return strFaizOrani;
    }
  }, {
    key: "render",
    value: function render() {

      var minVade = this.state.minLoanTermValue ? this.state.minLoanTermValue : this.MIN_VADE;
      var maxVade = this.state.maxLoanTermValue; // ? this.state.maxLoanTermValue : minVade;

      var minTutar = 0;
      var maxTutar = 0;
      if (this.state.selectedProductInfo) {
        minTutar = parseInt(this.state.selectedProductInfo.minTutar);
        maxTutar = parseInt(this.state.selectedProductInfo.maxTutar);
      }

      var monthlyPaymentAmtSpan = _react2.default.createElement("span", { className: "big-text" });
      var faizOraniSpan = _react2.default.createElement("span", { className: "big-text" });
      var totalPaymentAmtSpan = _react2.default.createElement("span", { className: "small-text" });

      if (this.state.calculated) {
        var strMonthlyPaymentAmt = Utils.addThousandSeparator(this.state.aylikOdeme.toFixed(2), true, '.') + " TL";
        var monthlyPaymentAmt = strMonthlyPaymentAmt.split(',');
        monthlyPaymentAmtSpan = _react2.default.createElement(
          "span",
          { className: "big-text" },
          monthlyPaymentAmt[0],
          _react2.default.createElement(
            "span",
            { className: "penny" },
            "," + monthlyPaymentAmt[1]
          )
        );

        var strFaizOrani = this.formatFaizOrani(this.state.faizOrani);
        faizOraniSpan = _react2.default.createElement(
          "span",
          { className: "big-text" },
          _react2.default.createElement(
            "span",
            { className: "percent" },
            "%"
          ),
          strFaizOrani
        );

        var strTotalPaymentAmt = Utils.addThousandSeparator(this.state.totalPaymentAmt, true, '.') + " TL";
        var totalPaymentAmt = strTotalPaymentAmt.split(',');
        totalPaymentAmtSpan = _react2.default.createElement(
          "span",
          { className: "small-text" },
          totalPaymentAmt[0],
          _react2.default.createElement(
            "span",
            { className: "penny" },
            "," + totalPaymentAmt[1]
          )
        );
      }

      var strInsuredProductFaizOrani = this.formatFaizOrani(this.state.insuredProductFaizOrani);
      var strUninsuredProductFaizOrani = this.formatFaizOrani(this.state.uninsuredProductFaizOrani);

      var strCreditAmt = Utils.addThousandSeparator(this.state.amount, false, '.') + " TL";

      var errorMsg = '';
      var isServerError = this.props.error !== undefined && this.props.error !== null && this.props.error !== '';
      if (isServerError) {
        errorMsg = this.props.error;
      }
      var isAmountError = this.state.amountRangeError !== undefined && this.state.amountRangeError !== null && this.state.amountRangeError !== '';
      if (isAmountError) {
        errorMsg = this.state.amountRangeError;
      }
      var showErrorMsg = isServerError || isAmountError;

      return _react2.default.createElement(
        "section",
        { className: "section form" },
        _react2.default.createElement(
          "div",
          { className: "container-v2 container-mobile position-relative" },
          _react2.default.createElement(
            "div",
            { className: "box p-0" },
            _react2.default.createElement(
              "form",
              { id: "form1", onSubmit: this.handleSubmit },
              _react2.default.createElement(
                "div",
                { className: "row g-0 row-fix" },
                _react2.default.createElement(
                  "div",
                  { className: "col-lg-4 left" },
                  _react2.default.createElement(
                    "div",
                    { className: "py-20 px-30" },
                    _react2.default.createElement(
                      "h2",
                      null,
                      "\u0130htiya\xE7 Kredinizi Hesaplay\u0131n"
                    ),
                    _react2.default.createElement("input", { type: "hidden", id: "hdnAmount", name: "hdnAmount" }),
                    _react2.default.createElement(
                      "div",
                      { className: "credit-amount" },
                      _react2.default.createElement(
                        "div",
                        { className: "input-block" },
                        _react2.default.createElement(
                          "label",
                          { htmlFor: "textAmount" },
                          "Kredi Tutar\u0131"
                        ),
                        _react2.default.createElement(
                          "div",
                          { className: "input-wrapper" },
                          _react2.default.createElement("input", {
                            className: "amount only-number moneyformat form-control slider-text",
                            type: "tel",
                            name: "textAmount",
                            id: "textAmount",
                            autoComplete: "off",
                            placeholder: "Kredi tutar\u0131n\u0131 giriniz",
                            maxLength: "9",
                            inputMode: "decimal",
                            "data-formattype": "money",
                            "aria-invalid": "false",
                            onChange: this.handleAmountChange,
                            value: this.state.amount
                          }),
                          _react2.default.createElement(
                            "div",
                            { className: "suffix" },
                            "TL"
                          )
                        )
                      )
                    ),
                    _react2.default.createElement("input", { type: "hidden", id: "hdnVade", name: "hdnVade" }),
                    _react2.default.createElement(
                      "div",
                      { className: "slider-range credit-vade" },
                      _react2.default.createElement(
                        "div",
                        { className: "input-block" },
                        _react2.default.createElement(
                          "label",
                          { htmlFor: "txtVade" },
                          "Vade"
                        ),
                        _react2.default.createElement(
                          "div",
                          { className: "input-wrapper" },
                          _react2.default.createElement("input", {
                            className: "amount only-number moneyformat form-control slider-text",
                            type: "tel",
                            name: "txtVade",
                            id: "txtVade",
                            autoComplete: "off",
                            placeholder: "Kredi vadesini giriniz",
                            maxLength: "4",
                            inputMode: "decimal",
                            "data-formattype": "money",
                            "aria-invalid": "false",
                            onChange: this.handleVadeChange,
                            value: this.state.vade
                          }),
                          _react2.default.createElement(
                            "div",
                            { className: "suffix" },
                            "AY"
                          )
                        )
                      ),
                      _react2.default.createElement(
                        "div",
                        { className: "range" },
                        _react2.default.createElement("div", { className: "slider stepMaturity", "data-suffix": "AY", "data-mintext": "", "data-maxtext": "", "data-type": "money", "data-step": "1", "data-max": maxVade, "data-min": minVade, "data-value": this.state.vade })
                      )
                    ),
                    this.state.showInsuranceOptions && _react2.default.createElement(
                      "div",
                      { className: "input-block d-xl-block" },
                      _react2.default.createElement(
                        "label",
                        { htmlFor: "", className: "d-flex align-items-center" },
                        "Kredi T\xFCr\xFC",
                        _react2.default.createElement(
                          "div",
                          { className: "tooltipEl", "data-bs-toggle": "tooltip", "data-bs-placement": "top", title: KREDI_TURU_INFO },
                          _react2.default.createElement("span", { className: "d-flex icon icon-info fs-18 ms-2 mt-n1" })
                        )
                      ),
                      _react2.default.createElement(
                        "div",
                        { className: "radios column" },
                        _react2.default.createElement(
                          "label",
                          { htmlFor: "rdSigortali", className: "radio" },
                          _react2.default.createElement("input", { type: "radio", name: "rdKrediTuru", id: "rdSigortali", checked: this.state.sigortali === "E" ? true : false, onChange: this.handleKrediTuruChange, value: "E" }),
                          _react2.default.createElement("span", { className: "checkmark" }),
                          _react2.default.createElement(
                            "div",
                            { className: "radio-text" },
                            "Hayat SigortalÄ± (Faiz OranÄ± %" + strInsuredProductFaizOrani + ")"
                          )
                        ),
                        _react2.default.createElement(
                          "label",
                          { htmlFor: "rdSigortasiz", className: "radio" },
                          _react2.default.createElement("input", { type: "radio", name: "rdKrediTuru", id: "rdSigortasiz", checked: this.state.sigortali === "H" ? true : false, onChange: this.handleKrediTuruChange, value: "H" }),
                          _react2.default.createElement("span", { className: "checkmark" }),
                          _react2.default.createElement(
                            "div",
                            { className: "radio-text" },
                            "Hayat SigortasÄ±z (Faiz OranÄ± %" + strUninsuredProductFaizOrani + ")"
                          )
                        )
                      )
                    )
                  )
                ),
                /* Sadece mobilde ve sadece tutar/vade hatasÄ± olduÄunda gÃ¶steriliyor. */
                showErrorMsg && isAmountError && _react2.default.createElement(
                  "div",
                  { className: "col-lg-4 d-lg-none" },
                  _react2.default.createElement(
                    "div",
                    { className: "row g-0" },
                    _react2.default.createElement(
                      "div",
                      { className: "alert-box d-flex align-items-center" },
                      _react2.default.createElement("img", { src: "public/images/ihtiyackredisi/info-symbol.svg", alt: "info" }),
                      _react2.default.createElement(
                        "span",
                        { className: "d-inline-block" },
                        errorMsg
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  "div",
                  { className: "col-lg-4 middle" },
                  _react2.default.createElement(
                    "div",
                    { className: "calculate-box" },
                    _react2.default.createElement("img", { src: "public/images/ihtiyackredisi/arrow-bg-left.jpg", alt: "", className: "bg-left" }),
                    _react2.default.createElement("img", { src: "public/images/ihtiyackredisi/arrow-bg-right.jpg", alt: "", className: "bg-right" }),
                    _react2.default.createElement(
                      "div",
                      { className: "calculate-box-content" },
                      _react2.default.createElement(
                        "div",
                        { className: "item item1" },
                        monthlyPaymentAmtSpan,
                        _react2.default.createElement(
                          "span",
                          { className: "label-text" },
                          "Ayl\u0131k Taksit Tutar\u0131"
                        )
                      ),
                      _react2.default.createElement(
                        "div",
                        { className: "item item2" },
                        faizOraniSpan,
                        _react2.default.createElement(
                          "span",
                          { className: "label-text" },
                          "Faiz Oran\u0131"
                        )
                      ),
                      _react2.default.createElement(
                        "div",
                        { className: "item item3" },
                        totalPaymentAmtSpan,
                        _react2.default.createElement(
                          "span",
                          { className: "label-text" },
                          "Toplam Geri \xD6deme Tutar\u0131"
                        )
                      ),
                      _react2.default.createElement(
                        "a",
                        { href: "", className: "link item4", onClick: this.handleCalcDetailsClick },
                        "Hesaplama Detaylar\u0131"
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  "div",
                  { className: "col-lg-4 right", id: "inputArea" },
                  _react2.default.createElement(
                    "div",
                    { className: "py-30 px-30 scrollTo" },
                    _react2.default.createElement(
                      "h2",
                      null,
                      strCreditAmt,
                      " i\xE7in ba\u015Fvuruya ba\u015Flay\u0131n"
                    ),
                    _react2.default.createElement(
                      "div",
                      { className: "input-block" },
                      _react2.default.createElement(
                        "label",
                        { htmlFor: "txtTckn" },
                        "TC Kimlik No"
                      ),
                      _react2.default.createElement("input", {
                        className: "tckn only-number focussedInput",
                        type: "text",
                        name: "txtTckn",
                        id: "txtTckn",
                        autoComplete: "off",
                        placeholder: "T.C. Kimlik Numaran\u0131z\u0131 Giriniz",
                        maxLength: "11",
                        onChange: this.handleTcknChange,
                        value: this.state.tckn
                      })
                    ),
                    _react2.default.createElement(
                      "div",
                      { className: "input-block" },
                      _react2.default.createElement(
                        "label",
                        { htmlFor: "txtBirthDate" },
                        "Do\u011Fum Tarihi"
                      ),
                      _react2.default.createElement(
                        "span",
                        { className: "text-input-wrapper after-error" },
                        _react2.default.createElement("input", {
                          type: "text",
                          className: "dateformat",
                          name: "txtBirthDate",
                          id: "txtBirthDate",
                          autoComplete: "off",
                          placeholder: "gg.aa.yyyy"
                        })
                      )
                    ),
                    _react2.default.createElement(
                      "div",
                      { className: "input-block" },
                      _react2.default.createElement(
                        "label",
                        { htmlFor: "txtPhoneNumber" },
                        "Cep Telefonu"
                      ),
                      _react2.default.createElement("input", {
                        className: "phone",
                        type: "text",
                        name: "txtPhoneNumber",
                        id: "txtPhoneNumber",
                        inputMode: "numeric",
                        "data-phone": "true",
                        autoComplete: "off",
                        placeholder: "___ ___ ____"
                      })
                    ),
                    this.state.showCaptcha && _react2.default.createElement(
                      "div",
                      { className: "input-block" },
                      _react2.default.createElement(
                        "label",
                        { htmlFor: "txtCaptcha1" },
                        "G\xFCvenlik Kodu"
                      ),
                      _react2.default.createElement(
                        "div",
                        { className: "row captcha-group g-0" },
                        _react2.default.createElement(
                          "div",
                          { className: "col-6" },
                          _react2.default.createElement(
                            "div",
                            { className: "d-flex align-items-center" },
                            _react2.default.createElement("input", {
                              className: "captcha",
                              type: "text",
                              name: "txtCaptcha1",
                              id: "txtCaptcha1",
                              autoComplete: "off",
                              maxLength: "4",
                              style: { textTransform: "uppercase" },
                              onChange: this.handleCaptchaChange,
                              value: this.state.captcha
                            })
                          )
                        ),
                        _react2.default.createElement(
                          "div",
                          { className: "col-6 captcha-img-parent" },
                          _react2.default.createElement("img", { id: "captcha1", className: "captcha-img", src: "data:image/png;base64," + this.props.captchaData }),
                          _react2.default.createElement(
                            "button",
                            { type: "button", className: "captcha-btn", onClick: this.handleCaptchaRefresh },
                            _react2.default.createElement("span", { className: "icon icon-refresh" })
                          )
                        )
                      )
                    ),
                    _react2.default.createElement(
                      "div",
                      { className: "input-block kvkk" },
                      _react2.default.createElement(
                        "label",
                        { className: "checkbox d-flex align-center" },
                        _react2.default.createElement("input", { type: "checkbox", className: "kvkk", name: "chkKvkkBilgilendirme", id: "chkKvkkBilgilendirme" }),
                        _react2.default.createElement("span", { className: "checkmark" }),
                        _react2.default.createElement(
                          "span",
                          { className: "checkbox-text" },
                          _react2.default.createElement(
                            "a",
                            { className: "kvkk-bilgilendirme-link", href: "https://www.akbank.com/Documents/Akbank_KVKK_Aydinlatma_Metni_(Bireysel_Kredi).pdf", target: "_blank", rel: "noopener noreferrer" },
                            "Ki\u015Fisel Verilerin Korunmas\u0131 Kanunu Hakk\u0131nda Bilgilendirme"
                          ),
                          "\u2019yi okudum."
                        )
                      )
                    ),
                    _react2.default.createElement(
                      "div",
                      { className: "input-block" },
                      _react2.default.createElement(
                        "button",
                        { type: "submit", id: "btnSubmit", className: "btn btn-primary w-100 btn-submit", disabled: !this.state.calculated || this.props.fetching },
                        "Ba\u015Fvuruyu Ba\u015Flat"
                      )
                    )
                  )
                )
              ),
              /* Backend hatasÄ± olduÄunda her durumda, tutar/vade hatasÄ± olduÄunda desktopta gÃ¶steriliyor. */
              showErrorMsg && _react2.default.createElement(
                "div",
                { className: (0, _classnames2.default)("row g-0 desktop d-lg-block row-fix2", { "d-none": isAmountError }) },
                _react2.default.createElement(
                  "div",
                  { className: "alert-box d-flex align-items-center" },
                  _react2.default.createElement("img", { src: "public/images/ihtiyackredisi/info-symbol.svg", alt: "info" }),
                  _react2.default.createElement(
                    "span",
                    { className: "d-inline-block" },
                    errorMsg
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return FormV2;
}(_webcore.BappBase), (_applyDecoratedDescriptor(_class.prototype, "handleTcknChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleTcknChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCaptchaChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleCaptchaChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCaptchaRefresh", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleCaptchaRefresh"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleAmountChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleAmountChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleVadeChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleVadeChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleKrediTuruChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleKrediTuruChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCalcDetailsClick", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleCalcDetailsClick"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleSubmit", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleSubmit"), _class.prototype)), _class);


function mapStateToProps(state, ownProps) {
  return {
    tokenSessionId: state.ihtiyacKredisiState.tokenSessionId,
    captchaData: state.ihtiyacKredisiState.captchaData,
    productInfo: state.ihtiyacKredisiState.productInfo,
    cid: state.ihtiyacKredisiState.cid,
    firm: state.ihtiyacKredisiState.firm,
    configValue: state.ihtiyacKredisiState.configValue,
    showCalcDetails: state.ihtiyacKredisiState.showCalcDetails,
    nextPage: state.ihtiyacKredisiState.nextPage,
    fetching: state.ihtiyacKredisiState.fetching,
    error: state.ihtiyacKredisiState.error
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(FormV2);

/***/ }),

/***/ "DC2E":
/***/ (function(module, exports, __webpack_require__) {

var jQuery = module.exports = __webpack_require__("uNSy"),
	core_rspace = /\s+/;
/**
* jQuery Callbacks
*
* Code from: https://github.com/jquery/jquery/blob/master/src/callbacks.js
*
*/


// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.split( core_rspace ), function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				return jQuery.inArray( fn, list ) > -1;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				args = args || [];
				args = [ context, args.slice ? args.slice() : args ];
				if ( list && ( !fired || stack ) ) {
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};



/***/ }),

/***/ "E8bV":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _scrollElement = __webpack_require__("WQ+4");

var _scrollElement2 = _interopRequireDefault(_scrollElement);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ElementWrapper = function (_React$Component) {
  _inherits(ElementWrapper, _React$Component);

  function ElementWrapper() {
    _classCallCheck(this, ElementWrapper);

    return _possibleConstructorReturn(this, (ElementWrapper.__proto__ || Object.getPrototypeOf(ElementWrapper)).apply(this, arguments));
  }

  _createClass(ElementWrapper, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      // Remove `parentBindings` and `name` from props
      var newProps = _extends({}, this.props);
      delete newProps.name;
      if (newProps.parentBindings) {
        delete newProps.parentBindings;
      }

      return _react2.default.createElement(
        'div',
        _extends({}, newProps, { ref: function ref(el) {
            _this2.props.parentBindings.domNode = el;
          } }),
        this.props.children
      );
    }
  }]);

  return ElementWrapper;
}(_react2.default.Component);

;

ElementWrapper.propTypes = {
  name: _propTypes2.default.string,
  id: _propTypes2.default.string
};

exports.default = (0, _scrollElement2.default)(ElementWrapper);

/***/ }),

/***/ "ECVE":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var updateHash = function updateHash(hash, historyUpdate) {
  var hashVal = hash.indexOf("#") === 0 ? hash.substring(1) : hash;
  var hashToUpdate = hashVal ? "#" + hashVal : "";
  var curLoc = window && window.location;
  var urlToPush = hashToUpdate ? curLoc.pathname + curLoc.search + hashToUpdate : curLoc.pathname + curLoc.search;
  historyUpdate ? history.pushState(history.state, "", urlToPush) : history.replaceState(history.state, "", urlToPush);
};

var getHash = function getHash() {
  return window.location.hash.replace(/^#/, "");
};

var filterElementInContainer = function filterElementInContainer(container) {
  return function (element) {
    return container.contains ? container != element && container.contains(element) : !!(container.compareDocumentPosition(element) & 16);
  };
};

var isPositioned = function isPositioned(element) {
  return getComputedStyle(element).position !== "static";
};

var getElementOffsetInfoUntil = function getElementOffsetInfoUntil(element, predicate) {
  var offsetTop = element.offsetTop;
  var currentOffsetParent = element.offsetParent;

  while (currentOffsetParent && !predicate(currentOffsetParent)) {
    offsetTop += currentOffsetParent.offsetTop;
    currentOffsetParent = currentOffsetParent.offsetParent;
  }

  return { offsetTop: offsetTop, offsetParent: currentOffsetParent };
};

var scrollOffset = function scrollOffset(c, t, horizontal) {
  if (horizontal) {
    return c === document ? t.getBoundingClientRect().left + (window.scrollX || window.pageXOffset) : getComputedStyle(c).position !== "static" ? t.offsetLeft : t.offsetLeft - c.offsetLeft;
  } else {
    if (c === document) {
      return t.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);
    }

    // The offsetParent of an element, according to MDN, is its nearest positioned
    // (an element whose position is anything other than static) ancestor. The offsetTop
    // of an element is taken with respect to its offsetParent which may not neccessarily
    // be its parentElement except the parent itself is positioned.

    // So if containerElement is positioned, then it must be an offsetParent somewhere
    // If it happens that targetElement is a descendant of the containerElement, and there
    // is not intermediate positioned element between the two of them, i.e.
    // targetElement"s offsetParent is the same as the containerElement, then the
    // distance between the two will be the offsetTop of the targetElement.
    // If, on the other hand, there are intermediate positioned elements between the
    // two entities, the distance between the targetElement and the containerElement
    // will be the accumulation of the offsetTop of the element and that of its
    // subsequent offsetParent until the containerElement is reached, since it
    // will also be an offsetParent at some point due to the fact that it is positioned.

    // If the containerElement is not positioned, then it can"t be an offsetParent,
    // which means that the offsetTop of the targetElement would not be with respect to it.
    // However, if the two of them happen to have the same offsetParent, then
    // the distance between them will be the difference between their offsetTop
    // since they are both taken with respect to the same entity.
    // The last resort would be to accumulate their offsetTop until a common
    // offsetParent is reached (usually the document) and taking the difference
    // between the accumulated offsetTops

    if (isPositioned(c)) {
      if (t.offsetParent !== c) {
        var isContainerElementOrDocument = function isContainerElementOrDocument(e) {
          return e === c || e === document;
        };

        var _getElementOffsetInfo = getElementOffsetInfoUntil(t, isContainerElementOrDocument),
            offsetTop = _getElementOffsetInfo.offsetTop,
            offsetParent = _getElementOffsetInfo.offsetParent;

        if (offsetParent !== c) {
          throw new Error("Seems containerElement is not an ancestor of the Element");
        }

        return offsetTop;
      }

      return t.offsetTop;
    }

    if (t.offsetParent === c.offsetParent) {
      return t.offsetTop - c.offsetTop;
    }

    var isDocument = function isDocument(e) {
      return e === document;
    };
    return getElementOffsetInfoUntil(t, isDocument).offsetTop - getElementOffsetInfoUntil(c, isDocument).offsetTop;
  }
};

exports.default = {
  updateHash: updateHash,
  getHash: getHash,
  filterElementInContainer: filterElementInContainer,
  scrollOffset: scrollOffset
};

/***/ }),

/***/ "EKQK":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "EqBC":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__("kM2E");
var core = __webpack_require__("FeBl");
var global = __webpack_require__("7KvD");
var speciesConstructor = __webpack_require__("t8x9");
var promiseResolve = __webpack_require__("fJUb");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "FDS3":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "FN8c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var Constants = {
  AppType: {
    PERSONAL_LOAN: "?type=personal",
    VEHICLE_LOAN: "?type=vehicle",
    HOME_LOAN: "?type=home"
  }
};

var API_URL = exports.API_URL = __API_URL__;
var RETAIL_CREDIT_URL = exports.RETAIL_CREDIT_URL = __RETAIL_CREDIT_URL__;

var CDI_SCRIPT_URL = exports.CDI_SCRIPT_URL = typeof __CDI_SCRIPT_URL__ !== 'undefined' ? __CDI_SCRIPT_URL__ : null;

var IOVATION_SCRIPT_URL = exports.IOVATION_SCRIPT_URL = typeof __IOVATION_SCRIPT_URL__ !== 'undefined' ? __IOVATION_SCRIPT_URL__ : null;

exports.default = Constants;

/***/ }),

/***/ "FaSI":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "G5/o":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__("uqUo")('getOwnPropertyNames', function () {
  return __webpack_require__("Rrel").f;
});


/***/ }),

/***/ "Gu7T":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _from = __webpack_require__("c/Tr");

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ }),

/***/ "HIVZ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable global-require */

if (true) {
  module.exports = __webpack_require__("M/nl");
} else {
  module.exports = require('./index.dev');
}

/***/ }),

/***/ "HN2V":
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__("HbnZ"),
    createAssigner = __webpack_require__("0DSl");

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),

/***/ "K6ED":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("cnlX"), __esModule: true };

/***/ }),

/***/ "Kh5d":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__("sB3e");
var $getPrototypeOf = __webpack_require__("PzxK");

__webpack_require__("uqUo")('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),

/***/ "L42u":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("+ZMJ");
var invoke = __webpack_require__("knuC");
var html = __webpack_require__("RPLV");
var cel = __webpack_require__("ON07");
var global = __webpack_require__("7KvD");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__("R9M2")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "LTVp":
/***/ (function(module, exports, __webpack_require__) {

// 26.1.11 Reflect.ownKeys(target)
var $export = __webpack_require__("kM2E");

$export($export.S, 'Reflect', { ownKeys: __webpack_require__("hg2J") });


/***/ }),

/***/ "M/nl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports.AppContainer = __webpack_require__("lx7a");

/***/ }),

/***/ "M4fF":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('dÃ©jÃ  vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
      return _;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else if (freeModule) {
    // Export for Node.js.
    (freeModule.exports = _)._ = _;
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__("DuR2"), __webpack_require__("3IRH")(module)))

/***/ }),

/***/ "Mhyx":
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__("/bQp");
var ITERATOR = __webpack_require__("dSzd")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "Mrtf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _textfield = __webpack_require__("8WwK");

var _textfield2 = _interopRequireDefault(_textfield);

__webpack_require__("ipFE");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _utils = __webpack_require__("FOo0");

__webpack_require__("Q+dN");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Otp = function (_React$Component) {
  _inherits(Otp, _React$Component);

  function Otp(props) {
    _classCallCheck(this, Otp);

    var _this = _possibleConstructorReturn(this, (Otp.__proto__ || Object.getPrototypeOf(Otp)).call(this, props));

    _this.handleChange = _this.handleChange.bind(_this);
    _this.startOtpTimer = _this.startOtpTimer.bind(_this);
    _this.updateLeftSeconds = _this.updateLeftSeconds.bind(_this);
    _this.getLeftSecondsText = _this.getLeftSecondsText.bind(_this);
    _this.mounted = false;
    _this.startDate = null;
    _this.state = {
      secondsLeft: props.seconds,
      readOnly: false,
      otpValue: props.value
    };

    _this.otpText = _this.getLeftSecondsText(props.seconds);
    return _this;
  }

  _createClass(Otp, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
      this.startDate = new Date();
      this.intervalHandler = this.startOtpTimer();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.resetTimer !== this.props.resetTimer) {
        this.otpText = this.getLeftSecondsText(nextProps.seconds);
        this.startDate = new Date();
        this.setState({ secondsLeft: nextProps.seconds, otpValue: "" });
        this.intervalHandler = this.startOtpTimer();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearInterval(this.intervalHandler);
    }
  }, {
    key: "startOtpTimer",
    value: function startOtpTimer() {
      var _this2 = this;

      return setInterval(function () {
        _this2.updateLeftSeconds();
      }, 1000);
    }
  }, {
    key: "updateLeftSeconds",
    value: function updateLeftSeconds() {
      var endDate = new Date();
      var passedSeconds = Math.round(Math.abs(endDate - this.startDate) / 1000);

      if (this.state.secondsLeft > 0 && passedSeconds <= this.props.seconds) {
        var secondsLeft = this.props.seconds - passedSeconds;
        this.otpText = this.getLeftSecondsText(secondsLeft);
        this.setState({
          secondsLeft: secondsLeft
        });
      } else {
        this.otpText = this.getLeftSecondsText(0);
        this.setState({
          secondsLeft: 0
        });

        clearInterval(this.intervalHandler);

        if (this.props.onTimeUp) {
          this.props.onTimeUp();
        }
      }
    }
  }, {
    key: "getLeftSecondsText",
    value: function getLeftSecondsText(secondsLeft) {
      var minutes = Math.floor(secondsLeft / 60);
      minutes = minutes >= 10 ? minutes : "0" + minutes.toString();
      var seconds = secondsLeft - minutes * 60;
      seconds = seconds >= 10 ? seconds : "0" + seconds.toString();

      if (this.mounted) {
        if (+minutes === 0 && +seconds === 0) {
          this.setState({
            readOnly: true
          });
        } else if (this.state.readOnly) {
          this.setState({
            readOnly: false
          });
        }
      }
      return minutes + ":" + seconds + " ";
    }
  }, {
    key: "handleChange",
    value: function handleChange(e) {
      this.setState({
        otpValue: e.target.value
      });
      if (this.props.onChange) {
        this.props.onChange(e.target.value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        {
          className: (0, _classnames2.default)(this.props.className, "bapp-input-stopclock", {
            "bapp-input-stopclock-outlined": !!this.props.label
          })
        },
        _react2.default.createElement(_textfield2.default, {
          id: this.props.id,
          name: this.props.name,
          label: this.props.label,
          type: "tel",
          maxLength: this.props.maxLength,
          value: this.state.otpValue,
          autoFocus: this.props.autoFocus,
          readOnly: this.state.readOnly,
          validations: this.props.validations,
          validator: _utils.RegexpTypes.Numeric,
          onChange: this.handleChange
        }),
        _react2.default.createElement(
          _block2.default,
          { className: "bapp-stopclock" },
          _react2.default.createElement(
            _element2.default,
            { type: "strong", className: "bapp-stopclock-timer" },
            this.otpText
          ),
          _react2.default.createElement(
            _element2.default,
            { className: "bapp-stopclock-text" },
            this.props.otpSecondsText
          )
        )
      );
    }
  }]);

  return Otp;
}(_react2.default.Component);

Otp.propTypes = {
  id: _propTypes2.default.string,
  name: _propTypes2.default.string,
  className: _propTypes2.default.string,
  value: _propTypes2.default.string,
  maxLength: _propTypes2.default.number,
  seconds: _propTypes2.default.number.isRequired,
  otpSecondsText: _propTypes2.default.string.isRequired,
  resetTimer: _propTypes2.default.bool,
  validations: _propTypes2.default.array,
  autoFocus: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  onTimeUp: _propTypes2.default.func,
  label: _propTypes2.default.string
};

Otp.defaultProps = {
  maxLength: 6
};

exports.default = Otp;

/***/ }),

/***/ "NMP2":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "NWt+":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("+ZMJ");
var call = __webpack_require__("msXi");
var isArrayIter = __webpack_require__("Mhyx");
var anObject = __webpack_require__("77Pl");
var toLength = __webpack_require__("QRG4");
var getIterFn = __webpack_require__("3fs2");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "NkDL":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _utils = __webpack_require__("FOo0");

__webpack_require__("sleA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Error = function (_BappBase) {
  _inherits(Error, _BappBase);

  function Error(props) {
    _classCallCheck(this, Error);

    return _possibleConstructorReturn(this, (Error.__proto__ || Object.getPrototypeOf(Error)).call(this, props));
  }

  _createClass(Error, [{
    key: "componendDidMount",
    value: function componendDidMount() {
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/hata",
        pageTitle: "HÄ±zlÄ± Ä°htiyaÃ§ Kredisi"
      });
    }
  }, {
    key: "render",
    value: function render() {
      var result = this.props.location.state ? this.props.location.state.result : "";
      var msg = "";
      if (result === "RED") {
        msg = "ÃzgÃ¼nÃ¼z, kredi talebiniz onaylanmamÄ±ÅtÄ±r.";
      } else {
        msg = "Bir hata ile karÅÄ±laÅÄ±ldÄ±, daha sonra tekrar deneyiniz...";
      }

      return _react2.default.createElement(
        _block2.default,
        null,
        _react2.default.createElement(
          _panel2.default,
          { hasFooter: false },
          _react2.default.createElement(
            _panel2.default.Body,
            null,
            _react2.default.createElement(_image2.default, { path: "public/images/common/illustrations/illustrations-error.svg", className: "result-img" }),
            _react2.default.createElement(
              _element2.default,
              { type: "h1" },
              msg
            )
          )
        )
      );
    }
  }]);

  return Error;
}(_webcore.BappBase);

Error.propTypes = {};

Error.defaultProps = {};
exports.default = Error;

/***/ }),

/***/ "NmPj":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _webcore = __webpack_require__("9EQB");

var _provider = __webpack_require__("fGOM");

__webpack_require__("FaSI");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _form = __webpack_require__("3kzJ");

var _form2 = _interopRequireDefault(_form);

__webpack_require__("2xzD");

var _textfield = __webpack_require__("8WwK");

var _textfield2 = _interopRequireDefault(_textfield);

__webpack_require__("ipFE");

var _message = __webpack_require__("+g8O");

var _message2 = _interopRequireDefault(_message);

__webpack_require__("4buR");

var _label = __webpack_require__("79hd");

var _label2 = _interopRequireDefault(_label);

__webpack_require__("fLa5");

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _utils = __webpack_require__("FOo0");

var _button = __webpack_require__("66uW");

var _button2 = _interopRequireDefault(_button);

__webpack_require__("jU+E");

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

var _constants = __webpack_require__("iRmV");

var Constants = _interopRequireWildcard(_constants);

var _utils2 = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils2);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var KimlikBilgileri = (_class = function (_BappBase) {
  _inherits(KimlikBilgileri, _BappBase);

  function KimlikBilgileri(props, context) {
    _classCallCheck(this, KimlikBilgileri);

    var _this = _possibleConstructorReturn(this, (KimlikBilgileri.__proto__ || Object.getPrototypeOf(KimlikBilgileri)).call(this, props));

    _this.state = {
      size: context.device ? context.device.getState() : null
    };
    return _this;
  }

  _createClass(KimlikBilgileri, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/3.5/seri-sirano",
        pageTitle: "HÄ±zlÄ± Ä°htiyaÃ§ Kredisi"
      });
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit(e, formValues) {
      var _this2 = this;

      if (formValues.seriSiraNo) {
        _ihtiyackredisistate2.default.checkIdentity({
          tckn: this.props.tckn,
          seriSiraNo: formValues.seriSiraNo.toUpperCase().replace(/[^a-zA-Z0-9]/g, ""),
          tokenSessionId: this.props.tokenSessionId
        }).then(function (response) {
          if (response && !response.error) {
            _webcore.routeActions.push({
              pathname: _this2.props.nextPage
            });
          }
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var mask = this.state.size >= _provider.Sizes.md ? "A11-*11111" : "";
      return _react2.default.createElement(
        _block2.default,
        null,
        this.props.error && _react2.default.createElement(
          _message2.default,
          { id: "errorMsg", msgType: "error" },
          this.props.error
        ),
        _react2.default.createElement(
          _form2.default,
          { className: "kimlik-bilgileri-form", onSubmit: this.handleSubmit },
          _react2.default.createElement(
            _panel2.default,
            { hasFooter: false },
            _react2.default.createElement(
              _panel2.default.Body,
              null,
              _react2.default.createElement(
                _form2.default.Group,
                { name: "KimlikSeriSiraNo" },
                _react2.default.createElement(_label2.default, {
                  text: "TC Kimlik Seri - S\u0131ra No",
                  forId: "seriSiraNo",
                  messageText: "L\xFCtfen n\xFCfus c\xFCzdan\u0131n\u0131z\u0131n \xF6n y\xFCz\xFCnde bulunan 9 haneli Seri ve S\u0131ra numaras\u0131n\u0131 giriniz."
                }),
                _react2.default.createElement(_textfield2.default, {
                  id: "seriSiraNo",
                  type: "text",
                  name: "seriSiraNo",
                  className: "uppercase",
                  mask: mask,
                  maxLength: 10,
                  placeholder: "A12-123456",
                  autoFocus: true,
                  validations: [(0, _utils.required)("LÃ¼tfen TC Kimlik Seri - SÄ±ra NumaranÄ±zÄ± giriniz."), (0, _utils.minLength)(9, "LÃ¼tfen nÃ¼fus cÃ¼zdanÄ±nÄ±zÄ±n Ã¶n yÃ¼zÃ¼nde bulunan 9 haneli Seri ve SÄ±ra numarasÄ±nÄ± giriniz."), (0, _utils.maxLength)(10, "Bu alana en fazla 10 karakter girebilirsiniz.")]
                })
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { className: "form-action-row" },
                _react2.default.createElement(_button2.default, {
                  id: "btn01",
                  text: "Devam Et",
                  fetching: this.props.fetching,
                  disabled: this.props.fetching
                })
              )
            )
          )
        )
      );
    }
  }]);

  return KimlikBilgileri;
}(_webcore.BappBase), (_applyDecoratedDescriptor(_class.prototype, "handleSubmit", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleSubmit"), _class.prototype)), _class);


KimlikBilgileri.contextTypes = {
  device: _propTypes2.default.object,
  platform: _propTypes2.default.number,
  theme: _propTypes2.default.string
};

function mapStateToProps(state, ownProps) {
  return {
    tokenSessionId: state.ihtiyacKredisiState.tokenSessionId,
    tckn: state.ihtiyacKredisiState.tckn,
    additionalInfoFlg: state.ihtiyacKredisiState.additionalInfoFlg,
    additionalInfo2Flg: state.ihtiyacKredisiState.additionalInfo2Flg,
    branchFlg: state.ihtiyacKredisiState.branchFlg,
    nextPage: state.ihtiyacKredisiState.nextPage,
    fetching: state.ihtiyacKredisiState.fetching,
    error: state.ihtiyacKredisiState.error
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(KimlikBilgileri);

/***/ }),

/***/ "OAwv":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strictUriEncode = __webpack_require__("rprB");
var objectAssign = __webpack_require__("BEQ0");

function encoderForArrayFormat(opts) {
	switch (opts.arrayFormat) {
		case 'index':
			return function (key, value, index) {
				return value === null ? [
					encode(key, opts),
					'[',
					index,
					']'
				].join('') : [
					encode(key, opts),
					'[',
					encode(index, opts),
					']=',
					encode(value, opts)
				].join('');
			};

		case 'bracket':
			return function (key, value) {
				return value === null ? encode(key, opts) : [
					encode(key, opts),
					'[]=',
					encode(value, opts)
				].join('');
			};

		default:
			return function (key, value) {
				return value === null ? encode(key, opts) : [
					encode(key, opts),
					'=',
					encode(value, opts)
				].join('');
			};
	}
}

function parserForArrayFormat(opts) {
	var result;

	switch (opts.arrayFormat) {
		case 'index':
			return function (key, value, accumulator) {
				result = /\[(\d*)\]$/.exec(key);

				key = key.replace(/\[\d*\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = {};
				}

				accumulator[key][result[1]] = value;
			};

		case 'bracket':
			return function (key, value, accumulator) {
				result = /(\[\])$/.exec(key);
				key = key.replace(/\[\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				} else if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		default:
			return function (key, value, accumulator) {
				if (accumulator[key] === undefined) {
					accumulator[key] = value;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};
	}
}

function encode(value, opts) {
	if (opts.encode) {
		return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
	}

	return value;
}

function keysSorter(input) {
	if (Array.isArray(input)) {
		return input.sort();
	} else if (typeof input === 'object') {
		return keysSorter(Object.keys(input)).sort(function (a, b) {
			return Number(a) - Number(b);
		}).map(function (key) {
			return input[key];
		});
	}

	return input;
}

exports.extract = function (str) {
	return str.split('?')[1] || '';
};

exports.parse = function (str, opts) {
	opts = objectAssign({arrayFormat: 'none'}, opts);

	var formatter = parserForArrayFormat(opts);

	// Create an object with no prototype
	// https://github.com/sindresorhus/query-string/issues/47
	var ret = Object.create(null);

	if (typeof str !== 'string') {
		return ret;
	}

	str = str.trim().replace(/^(\?|#|&)/, '');

	if (!str) {
		return ret;
	}

	str.split('&').forEach(function (param) {
		var parts = param.replace(/\+/g, ' ').split('=');
		// Firefox (pre 40) decodes `%3D` to `=`
		// https://github.com/sindresorhus/query-string/pull/37
		var key = parts.shift();
		var val = parts.length > 0 ? parts.join('=') : undefined;

		// missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		val = val === undefined ? null : decodeURIComponent(val);

		formatter(decodeURIComponent(key), val, ret);
	});

	return Object.keys(ret).sort().reduce(function (result, key) {
		var val = ret[key];
		if (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {
			// Sort object keys, not values
			result[key] = keysSorter(val);
		} else {
			result[key] = val;
		}

		return result;
	}, Object.create(null));
};

exports.stringify = function (obj, opts) {
	var defaults = {
		encode: true,
		strict: true,
		arrayFormat: 'none'
	};

	opts = objectAssign(defaults, opts);

	var formatter = encoderForArrayFormat(opts);

	return obj ? Object.keys(obj).sort().map(function (key) {
		var val = obj[key];

		if (val === undefined) {
			return '';
		}

		if (val === null) {
			return encode(key, opts);
		}

		if (Array.isArray(val)) {
			var result = [];

			val.slice().forEach(function (val2) {
				if (val2 === undefined) {
					return;
				}

				result.push(formatter(key, val2, result.length));
			});

			return result.join('&');
		}

		return encode(key, opts) + '=' + encode(val, opts);
	}).filter(function (x) {
		return x.length > 0;
	}).join('&') : '';
};


/***/ }),

/***/ "Oj4Q":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _scrollLink = __webpack_require__("YuRK");

var _scrollLink2 = _interopRequireDefault(_scrollLink);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LinkElement = function (_React$Component) {
  _inherits(LinkElement, _React$Component);

  function LinkElement() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, LinkElement);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LinkElement.__proto__ || Object.getPrototypeOf(LinkElement)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {
      return _react2.default.createElement(
        'a',
        _this.props,
        _this.props.children
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  return LinkElement;
}(_react2.default.Component);

;

exports.default = (0, _scrollLink2.default)(LinkElement);

/***/ }),

/***/ "PIm+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _otpmodule = __webpack_require__("q3Gs");

var _otpmodule2 = _interopRequireDefault(_otpmodule);

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

var _utils = __webpack_require__("FOo0");

var _constants = __webpack_require__("iRmV");

var Constants = _interopRequireWildcard(_constants);

var _utils2 = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils2);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var SmsOtp = (_class = function (_BappBase) {
  _inherits(SmsOtp, _BappBase);

  function SmsOtp(props) {
    _classCallCheck(this, SmsOtp);

    var _this = _possibleConstructorReturn(this, (SmsOtp.__proto__ || Object.getPrototypeOf(SmsOtp)).call(this, props));

    _this.state = {};
    return _this;
  }

  _createClass(SmsOtp, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/3/otp",
        pageTitle: "HÄ±zlÄ± Ä°htiyaÃ§ Kredisi"
      });
    }
  }, {
    key: "onSubmit",
    value: function onSubmit(otpValue) {
      var _this2 = this;

      _ihtiyackredisistate2.default.verifyOtp({
        tckn: this.props.tckn,
        tokenSessionId: this.props.tokenSessionId,
        sifreEnc: otpValue,
        otpMesajNo: this.props.otpMesajNo
      }).then(function (response) {
        if (response && !response.error) {
          _webcore.routeActions.push({
            pathname: _this2.props.nextPage
          });
        }
      });
    }
  }, {
    key: "onResend",
    value: function onResend() {
      _ihtiyackredisistate2.default.resendOtp({
        tckn: this.props.tckn,
        tokenSessionId: this.props.tokenSessionId
      }).then(function (response) {});
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        null,
        _react2.default.createElement(_otpmodule2.default, {
          id: "otp",
          name: "otp",
          phoneNumber: this.props.formatliCepTelefonu,
          otpId: this.props.otpMesajNo,
          otpSecondsText: "sn Kalan SÃ¼re",
          remainingTime: 180,
          maxLength: 6,
          autoFocus: true,
          encrypt: true,
          pblModulus: this.props.pblModulus,
          pblExponent: this.props.pblExponent,
          onSubmit: this.onSubmit,
          onResendClick: this.onResend,
          errorMessage: this.props.error,
          fetching: this.props.fetching,
          designVersion: "2"
        })
      );
    }
  }]);

  return SmsOtp;
}(_webcore.BappBase), (_applyDecoratedDescriptor(_class.prototype, "onSubmit", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "onSubmit"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "onResend", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "onResend"), _class.prototype)), _class);


function mapStateToProps(state, ownProps) {
  return {
    tokenSessionId: state.ihtiyacKredisiState.tokenSessionId,
    tckn: state.ihtiyacKredisiState.tckn,
    formatliCepTelefonu: state.ihtiyacKredisiState.formatliCepTelefonu,
    otpMesajNo: state.ihtiyacKredisiState.otpMesajNo,
    pblModulus: state.ihtiyacKredisiState.pblModulus,
    pblExponent: state.ihtiyacKredisiState.pblExponent,
    verifyIdentityFlg: state.ihtiyacKredisiState.verifyIdentityFlg,
    additionalInfoFlg: state.ihtiyacKredisiState.additionalInfoFlg,
    additionalInfo2Flg: state.ihtiyacKredisiState.additionalInfo2Flg,
    branchFlg: state.ihtiyacKredisiState.branchFlg,
    nextPage: state.ihtiyacKredisiState.nextPage,
    fetching: state.ihtiyacKredisiState.fetching,
    error: state.ihtiyacKredisiState.error
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(SmsOtp);

/***/ }),

/***/ "Q+dN":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "R3sX":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = throttle;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__("DuR2")))

/***/ }),

/***/ "RY/4":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("R9M2");
var TAG = __webpack_require__("dSzd")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "RZcY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

__webpack_require__("Srx6");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Currency = function Currency(props) {
  return _react2.default.createElement(
    _block2.default,
    {
      id: props.id,
      className: (0, _classnames2.default)("bapp-currency", props.className, props.size ? "bapp-currency-" + props.size : "")
    },
    getThousands(props.value),
    ",",
    _react2.default.createElement(
      _element2.default,
      { type: "sub" },
      getPrecision(props.value)
    ),
    _react2.default.createElement(
      _element2.default,
      {
        type: "span",
        className: props.sizeCurrency ? "bapp-currency-text-" + props.sizeCurrency : null
      },
      props.currency
    )
  );
};

var getThousands = function getThousands(value) {
  var val = isNaN(value) ? 0 : value * 1;
  return val.toFixed(2).split(".")[0].toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
};

var getPrecision = function getPrecision(value) {
  var val = isNaN(value) ? 0 : value * 1;
  return val.toFixed(2).split(".")[1];
};

Currency.propTypes = {
  id: _propTypes2.default.string,
  className: _propTypes2.default.string,
  value: _propTypes2.default.number.isRequired,
  currency: _propTypes2.default.oneOf(["TL", "USD", "EUR"]),
  size: _propTypes2.default.oneOf(["xxs", "xs", "sm", "md", "lg", "xl"]),
  sizeCurrency: _propTypes2.default.oneOf(["sm", "lg"])
};

exports.default = Currency;

/***/ }),

/***/ "Rjmx":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "SMe3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var errorMessage = "";

var hasErrorResponse = function hasErrorResponse(response) {
  var errorFlag = false;

  if (response && response.data && response.data.ErrorCode && response.data.MessageList) {
    for (var i = 0; i < response.data.MessageList.length; i++) {
      if (response.data.MessageList[i].Layout === "Error") {
        errorFlag = true;
        errorMessage = response.data.MessageList[i].Message;
      }
    }
  }
  return errorFlag;
};

var defaultSuccessMessageFnd = function defaultSuccessMessageFnd(data) {
  return "Ä°Åleminiz BaÅarÄ±lÄ± Åekilde tamamlanmÄ±ÅtÄ±r.";
};

var defaultErrorMessageFnd = function defaultErrorMessageFnd(error) {
  return "Hata!! " + err;
};

var ajaxEnricher = {
  //Http 20x response
  proccesSuccessMessage: function proccesSuccessMessage(response, data, action) {
    if (hasErrorResponse(response)) {
      //this scope reserved for error message handling
      return {
        error: errorMessage
      };
    } else {
      //this scope reserved for success message handling
      return { data: response.data };
    }
  },
  //Http 50x response
  proccesErrorMessage: function proccesErrorMessage(error, action) {
    return error;
  }
};

exports.default = ajaxEnricher;

/***/ }),

/***/ "Sfkl":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _calcdetailsv = __webpack_require__("+XFQ");

var _calcdetailsv2 = _interopRequireDefault(_calcdetailsv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InfoBoxes = function (_BappBase) {
  _inherits(InfoBoxes, _BappBase);

  function InfoBoxes(props) {
    _classCallCheck(this, InfoBoxes);

    return _possibleConstructorReturn(this, (InfoBoxes.__proto__ || Object.getPrototypeOf(InfoBoxes)).call(this, props));
  }

  _createClass(InfoBoxes, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "section",
        { className: "section boxes" },
        _react2.default.createElement(
          "div",
          { className: "container-v2 container-mobile position-relative" },
          _react2.default.createElement(_calcdetailsv2.default, { calcDetailsText: this.props.calcDetailsText }),
          _react2.default.createElement("div", { className: "infoboxes-container", dangerouslySetInnerHTML: { __html: this.props.infoboxText } })
        )
      );
    }
  }]);

  return InfoBoxes;
}(_webcore.BappBase);

InfoBoxes.propTypes = {
  infoboxText: _propTypes2.default.string,
  calcDetailsText: _propTypes2.default.string
};

exports.default = InfoBoxes;

/***/ }),

/***/ "Srx6":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "T7MV":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "TdZ8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _textfield = __webpack_require__("8WwK");

var _textfield2 = _interopRequireDefault(_textfield);

__webpack_require__("ipFE");

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _button = __webpack_require__("66uW");

var _button2 = _interopRequireDefault(_button);

__webpack_require__("jU+E");

var _utils = __webpack_require__("FOo0");

__webpack_require__("WCHC");

var _captchaError = __webpack_require__("WoYp");

var _captchaError2 = _interopRequireDefault(_captchaError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Captcha = function (_React$Component) {
  _inherits(Captcha, _React$Component);

  function Captcha(props) {
    _classCallCheck(this, Captcha);

    var _this = _possibleConstructorReturn(this, (Captcha.__proto__ || Object.getPrototypeOf(Captcha)).call(this, props));

    _this.state = {
      typedText: _this.props.value,
      captcha: _this.props.captcha || null,
      refreshCount: 0
    };
    _this.handleRefreshClick = _this.handleRefreshClick.bind(_this);
    return _this;
  }

  _createClass(Captcha, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      /*
      //-- Ornek params objesi
      let params = {
        'NextTransactionUrl': 'INDAuthWebSecurity',
        'Language': 'tr-TR',
        'MBB': this.props.mbb || '',
        'TokenSessionId': '',
        'TCKN': this.props.tckn || '',
        'ChannelKey': 'IND-RTL-WDS-MBB',
        'DeviceOsType': 'WEB',
        'AppVersion': '',
        'IsCaptchaRefresh': 'false',
        'UserAgent': '',
        'Resolution': ''
      }*/

      if (this.props.url) {
        (0, _utils.PostCall)(this.props.url, this.props.params, {
          "Content-Type": "application/json"
        }).then(function (response) {
          // https://github.com/facebook/react/issues/2642
          if (response.data.Captcha) {
            this.setState({
              captcha: response.data.Captcha
            });
          } else {
            this.setState({
              captcha: null
            });
          }
        }.bind(this)).catch(function (error) {
          // eslint-disable-next-line
          console.error("Failed to fecth captcha !");
        });
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.captcha != this.state.captcha) {
        var refreshCount = 0;
        if (this.state.captcha) {
          refreshCount = this.state.refreshCount + 1;
        }
        this.setState({ captcha: nextProps.captcha, refreshCount: refreshCount });
      }

      if (nextProps.value != this.state.typedText) {
        this.setState({ typedText: nextProps.value });
      }
    }
  }, {
    key: "handleRefreshClick",
    value: function handleRefreshClick(event) {
      event.preventDefault();
      if (this.props.url) {
        (0, _utils.PostCall)(this.props.url, this.props.params, {
          "Content-Type": "application/json"
        }).then(function (response) {
          // https://github.com/facebook/react/issues/2642
          if (response.data.Captcha) {
            this.setState(function (prevState, props) {
              return {
                captcha: response.data.Captcha,
                refreshCount: prevState.refreshCount + 1
              };
            });
          } else {
            this.setState(function (prevState, props) {
              return {
                captcha: null,
                refreshCount: prevState.refreshCount + 1
              };
            });
          }
        }.bind(this) /* eslint-disable-line */
        ).catch(function (error) {
          // eslint-disable-next-line
          console.error("Failed to fecth captcha !");
        });
      } else if (this.props.captcha !== this.state.captcha) {
        this.setState({
          captcha: this.props.captcha
        });
      }

      if (this.props.refreshClick) {
        this.props.refreshClick();
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        {
          className: (0, _classnames2.default)(this.props.className, "bapp-captcha-container", {
            "bapp-captcha-error": !this.state.captcha
          })
        },
        _react2.default.createElement(_textfield2.default, {
          id: this.props.id,
          placeholder: this.props.placeholder,
          type: "text",
          name: this.props.name,
          value: this.state.typedText,
          partofform: this.props.partofform,
          readOnly: !this.state.captcha,
          validations: this.props.validations,
          maxLength: this.props.maxLength,
          bordered: this.props.bordered
        }),
        _react2.default.createElement(
          _block2.default,
          { className: "bapp-captcha-wrapper" },
          _react2.default.createElement(
            _block2.default,
            { className: "bapp-captcha" },
            this.state.captcha && _react2.default.createElement(_image2.default, {
              className: "",
              name: "captchaImg",
              path: "data:image/png;base64," + this.state.captcha,
              fallbackText: "Captcha"
            }),
            !this.state.captcha && _react2.default.createElement(_image2.default, { name: "refreshImg", className: "", path: _captchaError2.default, fallbackText: "Captcha error" })
          ),
          _react2.default.createElement(
            _block2.default,
            { className: "bapp-captcha-refresh" },
            _react2.default.createElement(_button2.default, {
              custom: true,
              disabled: this.state.refreshCount >= this.props.maxRefreshCount,
              className: "bapp-icon-update",
              onClick: this.handleRefreshClick,
              "aria-label": "Refresh captcha"
            })
          )
        )
      );
    }
  }]);

  return Captcha;
}(_react2.default.Component);

Captcha.propTypes = {
  id: _propTypes2.default.string,
  name: _propTypes2.default.string.isRequired,
  value: _propTypes2.default.string,
  className: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  captcha: _propTypes2.default.string,
  params: _propTypes2.default.object,
  url: _propTypes2.default.string,
  refreshClick: _propTypes2.default.func,
  maxRefreshCount: _propTypes2.default.number,
  partofform: _propTypes2.default.bool,
  validations: _propTypes2.default.array,
  maxLength: _propTypes2.default.number,
  bordered: _propTypes2.default.bool
};

Captcha.defaultProps = {
  maxRefreshCount: 3,
  partofform: false
};

exports.default = Captcha;

/***/ }),

/***/ "Tt3D":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webcore = __webpack_require__("9EQB");

var appState = (0, _webcore.State)({
  name: "appState",
  initial: {
    applicationType: "",
    pageTitle: "",
    pageTitleDescription: "",
    backText: "",
    logoutOpen: false
  },
  setAppType: function setAppType(appType) {
    return {
      applicationType: appType
    };
  },
  setAppVariables: function setAppVariables(appVariables) {
    return {
      pageTitle: appVariables.pageTitle,
      pageTitleDescription: appVariables.pageTitleDescription,
      backText: appVariables.backText,
      onBackClick: appVariables.onBackClick
    };
  },
  showLogout: function showLogout(show) {
    var withTimer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    return {
      logoutOpen: show,
      showLogoutTimer: withTimer
    };
  }
});

exports.default = appState;

/***/ }),

/***/ "U5ju":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("M6a0");
__webpack_require__("zQR9");
__webpack_require__("+tPU");
__webpack_require__("CXw9");
__webpack_require__("EqBC");
__webpack_require__("jKW+");
module.exports = __webpack_require__("FeBl").Promise;


/***/ }),

/***/ "USSv":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "Uz2g":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webcore = __webpack_require__("9EQB");

var _utils = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var ihtiyacKredisiState = (0, _webcore.State)({
  name: "ihtiyacKredisiState",
  initial: {
    tokenSessionId: "",
    appCode: "BKR0001",
    errorCounter: "3",
    lockHours: "24",
    fetching: false,
    error: "",
    showCalcDetails: false,
    cid: '',
    p: '',
    firm: ''
  },

  showCalcDetails: function showCalcDetails(costInfo) {
    return {
      showCalcDetails: true,
      costInfo: costInfo
    };
  },

  toggleCalcDetailsV2: function toggleCalcDetailsV2(currentVal) {
    return {
      showCalcDetails: !currentVal
    };
  },

  setCalcDetailsV2: function setCalcDetailsV2(productInfo, calcResult) {
    return {
      productInfo: productInfo,
      calcResult: calcResult
    };
  },

  hideCalcDetails: function hideCalcDetails() {
    return {
      showCalcDetails: false
    };
  },

  setCid: function setCid(cid) {
    return {
      cid: cid
    };
  },

  setp: function setp(p) {
    return {
      p: p
    };
  },

  setFirm: function setFirm(firm) {
    return {
      firm: firm
    };
  },

  getProductInfo: function getProductInfo(requestModel) {
    var data = {
      urunTip: requestModel.productType,
      firm: requestModel.firm,
      NextTransactionUrl: "Facebook/WebCredit/ProductDetail1",
      TokenSessionId: "ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF"
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        var productInfo = null;
        if (!jsonObj.ErrorMessage) {
          productInfo = {
            basTrh: jsonObj.basTrh,
            bitTrh: jsonObj.bitTrh,
            minVadeTl: jsonObj.minVadeTl,
            maxVadeTl: jsonObj.maxVadeTl,
            minTutar: jsonObj.minTutar, // "12500"
            fmtMinTutar: jsonObj.fmtMinTutar, // "12.500,00"
            maxTutar: jsonObj.maxTutar,
            fmtMaxTutar: jsonObj.fmtMaxTutar,
            vergiOran: jsonObj.vergiOran,
            fonOran: jsonObj.fonOran,
            webAciklama: jsonObj.webAciklama,
            masraf: jsonObj.masraf,
            fmtMasraf: jsonObj.fmtMasraf,
            faizSure: jsonObj.faizSure,
            kullandirimMaxTutar: jsonObj.kullandirimMaxTutar,
            fmtKullandirimMaxTutar: jsonObj.fmtKullandirimMaxTutar,
            faizAdet: jsonObj.faizAdet,
            kullandirimTipiAdet: jsonObj.kullandirimTipiAdet,
            kullandirimTipiArrayListesi: jsonObj.kullandirimTipiArrayListesi,
            faizArrayListesi: jsonObj.faizArrayListesi
          };
        }

        return {
          productInfo: productInfo,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  startApplication: function startApplication(requestModel) {
    return {
      amount: requestModel.amount,
      vade: requestModel.vade,
      productType: requestModel.productType,
      isCovid19: requestModel.isCovid19
    };
  },

  createToken: function createToken(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      functionCode: this.state.appCode,
      NextTransactionUrl: "Facebook/SocialMediaPortalCreateSession/GetTokenByTckn1",
      TokenSessionId: "ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF"
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          tckn: requestModel.tckn,
          tokenSessionId: jsonObj.tokenSessionId,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      }
    });
  },

  createCaptcha: function createCaptcha(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      NextTransactionUrl: "Facebook/WebCredit/GetCaptcha1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          captchaData: jsonObj.captchaData,
          error: requestModel.prevErrorMsg ? requestModel.prevErrorMsg : jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      }
    });
  },

  refreshCaptcha: function refreshCaptcha(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      NextTransactionUrl: "Facebook/WebCredit/RefreshCaptcha1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          captchaData: jsonObj.captchaData,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      }
    });
  },

  applicationInit: function applicationInit(requestModel) {
    var _this = this;

    var data = {
      tckn: requestModel.tckn,
      cepTel: requestModel.phone ? "0090" + requestModel.phone : "",
      dogumGun: requestModel.birthDay,
      dogumAy: requestModel.birthMonth,
      dogumYil: requestModel.birthYear,
      captcha: requestModel.captcha,
      kvkk: requestModel.kvkk,
      callCenter: requestModel.callCenter,
      p: requestModel.p,
      tutar: requestModel.tutar,
      vade: requestModel.vade,
      urunTip: requestModel.urunTip,
      isCovid19: requestModel.isCovid19,
      cid: requestModel.cid,
      firm: requestModel.firm,
      sid: Utils.readCookieSessionSid("MMbpmEoJR4"),
      tc9g: Utils.readCookieDeviceTag(),
      NextTransactionUrl: "Facebook/WebCredit/Apply1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        if (jsonObj.ErrorMessage) {
          /* Bu aÅamada hata alÄ±nÄ±rsa captcha'nÄ±n yenilenmesi gerekiyor. Captcha yenilenirken Åu an almÄ±Å olduÄumuz hatayÄ±
          ekranda gÃ¶sterebilmek iÃ§in createCaptcha() fonksiyonuna gÃ¶nderiyoruz  */
          _this.createCaptcha({
            tckn: requestModel.tckn,
            tokenSessionId: requestModel.tokenSessionId,
            prevErrorMsg: jsonObj.ErrorMessage
          });
        }

        //TODO: inviteToBranch ???

        var nextPage = jsonObj.ErrorMessage ? '' : '/details/smsotp';

        return {
          formatliCepTelefonu: jsonObj.formattedPhoneNumber,
          otpMesajNo: jsonObj.otpId,
          pblModulus: jsonObj.publicKeyModulus,
          pblExponent: jsonObj.publicKeyExponent,
          nextPage: nextPage,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  verifyOtp: function verifyOtp(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      otp: requestModel.sifreEnc,
      NextTransactionUrl: "Facebook/WebCredit/Apply2",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        var nextPage = '';
        var error = jsonObj.ErrorMessage;
        if (!jsonObj.ErrorMessage) {
          if (jsonObj.verifyIdentityFlg) {
            nextPage = '/details/kimlikbilgileri';
          } else if (jsonObj.additionalInfoFlg == true || jsonObj.eligible == true || jsonObj.additionalInfo2Flg == true) {
            nextPage = '/details/ekbilgiler';
          } else if (jsonObj.branchFlg == true) {
            nextPage = '/details/branchselection';
          } else {
            nextPage = '/result/success';
          }
        }

        if (jsonObj.ErrorCode === 'COR-41496' || jsonObj.ErrorCode === 'CCM_0046') {
          nextPage = '/result/inviteToBranch';
          error = '';
        }

        return {
          error: error,
          verifyIdentityFlg: jsonObj.verifyIdentityFlg,
          additionalInfoFlg: jsonObj.additionalInfoFlg,
          additionalInfo2Flg: jsonObj.additionalInfo2Flg,
          eligible: jsonObj.eligible,
          branchFlg: jsonObj.branchFlg,
          nextPage: nextPage,
          inviteToBranchErrMsg: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  resendOtp: function resendOtp(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      NextTransactionUrl: "Facebook/WebCredit/ResendOtp1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          otpMesajNo: jsonObj.otpId,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  checkIdentity: function checkIdentity(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      kimlikSeriSiraNo: requestModel.seriSiraNo,
      appCode: this.state.appCode,
      lockHours: this.state.lockHours,
      errorCount: this.state.errorCounter,
      NextTransactionUrl: "Facebook/WebCredit/Apply3",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        var nextPage = '';
        if (!jsonObj.ErrorMessage) {
          if (jsonObj.additionalInfoFlg == true || jsonObj.eligible == true || jsonObj.additionalInfo2Flg == true) {
            nextPage = '/details/ekbilgiler';
          } else if (jsonObj.branchFlg == true) {
            nextPage = '/details/branchselection';
          } else {
            nextPage = '/result/success';
          }
        }

        return {
          error: jsonObj.ErrorMessage,
          additionalInfoFlg: jsonObj.additionalInfoFlg,
          additionalInfo2Flg: jsonObj.additionalInfo2Flg,
          eligible: jsonObj.eligible,
          branchFlg: jsonObj.branchFlg,
          nextPage: nextPage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  additionalInfo: function additionalInfo(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      ogrenimDurumu: requestModel.ogrenimDurumu,
      calismaSekli: requestModel.isTuru,
      meslek: requestModel.meslek,
      isyeriFaaliyetAlani: requestModel.isyeriFaaliyetAlani,
      unvan: requestModel.unvan,
      aylikNetGelir: requestModel.gelir,
      calismaSuresi: requestModel.calismaSuresi,
      yurtdisiBaglantisi: requestModel.yurtdisiBaglantisi,
      eposta: requestModel.eposta,
      isyeriTelefonu: requestModel.isyeriTelefonu,
      eligible: requestModel.eligible,
      varlikKaynagi: requestModel.varlikKaynagi,
      islemHacmi: requestModel.islemHacmi,
      islemSayisi: requestModel.islemSayisi,
      yerlesikUlke: requestModel.yerlesikUlke,
      NextTransactionUrl: "Facebook/WebCredit/Apply4",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        var nextPage = '';
        if (!jsonObj.ErrorMessage) {
          if (jsonObj.branchFlg == true) {
            nextPage = '/details/branchselection';
          } else {
            nextPage = '/result/success';
          }
          return {
            eligible: jsonObj.eligible,
            branchFlg: jsonObj.branchFlg,
            nextPage: nextPage,
            error: jsonObj.ErrorMessage
          };
        } else {
          return {
            error: jsonObj.ErrorMessage
          };
        }
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  completeApplication: function completeApplication(requestModel) {
    var data = {
      tckn: requestModel.tckn,
      subeKodu: requestModel.subeKodu,
      NextTransactionUrl: "Facebook/WebCredit/Apply5",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        var nextPage = '';
        var error = jsonObj.ErrorMessage;

        if (!jsonObj.ErrorMessage) {
          nextPage = '/result/success';
        }

        if (jsonObj.ErrorCode === 'COR-41496' || jsonObj.ErrorCode === 'CCM_0046') {
          nextPage = '/result/inviteToBranch';
          error = '';
        }

        return {
          eligible: jsonObj.eligible,
          nextPage: nextPage,
          error: error,
          inviteToBranchErrMsg: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  getConfig: function getConfig(configKey) {
    var data = {
      configKey: configKey,
      NextTransactionUrl: "Facebook/SMPUConfig/GetConfig1",
      TokenSessionId: "ABCDEFABCDEFABCDEFABCDEFABCDEFABCDEF"
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        return {
          configValue: jsonObj.configValue,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  getEducationStatuses: function getEducationStatuses(requestModel) {
    var postData = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/MbbEducationList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: postData,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetchingData: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        if (jsonObj.ogrenimDurumlari && jsonObj.ogrenimDurumlari.length > 0) {
          jsonObj.ogrenimDurumlari.sort(function (a, b) {
            return a.ogrenimDurumKod > b.ogrenimDurumKod ? 1 : -1;
          });
        }

        return {
          educationStatuses: jsonObj.ogrenimDurumlari,
          calismaSekilleri: [],
          meslekler: [],
          faaliyetAlanlari: [],
          unvanlar: [],
          isError: jsonObj.IsError,
          error: jsonObj.IsError ? jsonObj.ErrorMessage : ''
        };
      },
      onError: function onError(err) {
        return {
          isError: true,
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetchingData: false
        };
      }
    });
  },

  getWorkTypes: function getWorkTypes(requestModel) {
    var postData = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/MbbWorkTypeList1",
      education: '' + requestModel.ogrenimDurumu,
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: postData,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetchingData: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        if (jsonObj.calismaSekilleri && jsonObj.calismaSekilleri.length > 0) {
          jsonObj.calismaSekilleri.sort(function (a, b) {
            return a.calismaSekliKod > b.calismaSekliKod ? 1 : -1;
          });
        }
        return {
          calismaSekilleri: jsonObj.calismaSekilleri,
          meslekler: [],
          faaliyetAlanlari: [],
          unvanlar: [],
          isError: jsonObj.IsError,
          error: jsonObj.IsError ? jsonObj.ErrorMessage : ''
        };
      },
      onError: function onError(err) {
        return {
          isError: true,
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetchingData: false
        };
      }
    });
  },

  getOccupations: function getOccupations(requestModel) {
    var postData = {
      education: '' + requestModel.ogrenimDurumu,
      workType: '' + requestModel.calismaSekli,
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/MbbOccupationList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: postData,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetchingData: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          meslekler: jsonObj.meslekler,
          faaliyetAlanlari: [],
          unvanlar: [],
          isError: jsonObj.IsError,
          error: jsonObj.IsError ? jsonObj.ErrorMessage : ''
        };
      },
      onError: function onError(err) {
        return {
          isError: true,
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetchingData: false
        };
      }
    });
  },

  getActivityAreas: function getActivityAreas(requestModel) {
    var postData = {
      education: '' + requestModel.ogrenimDurumu,
      workType: '' + requestModel.calismaSekli,
      occupation: '' + requestModel.meslek,
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/MbbActivityAreaList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: postData,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetchingData: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        return {
          faaliyetAlanlari: jsonObj.faaliyetAlanlari,
          unvanlar: [],
          isError: jsonObj.IsError,
          error: jsonObj.IsError ? jsonObj.ErrorMessage : ''
        };
      },
      onError: function onError(err) {
        return {
          isError: true,
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetchingData: false
        };
      }
    });
  },

  getTitles: function getTitles(requestModel) {
    var postData = {
      education: '' + requestModel.ogrenimDurumu,
      workType: '' + requestModel.calismaSekli,
      occupation: '' + requestModel.meslek,
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/MbbTitleList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: postData,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetchingData: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        return {
          unvanlar: jsonObj.unvanlar,
          isError: jsonObj.IsError,
          error: jsonObj.IsError ? jsonObj.ErrorMessage : ''
        };
      },
      onError: function onError(err) {
        return {
          isError: true,
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetchingData: false
        };
      }
    });
  },

  getStaticCities: function getStaticCities(requestModel) {
    var data = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/CitiesList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          cities: jsonObj.iller,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  getBranches: function getBranches(requestModel) {
    var data = {
      ilKodu: requestModel.city,
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/BranchesList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);
        return {
          branches: jsonObj.subeler,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        // Bu aÅamada Devam butonu Ã¼zerinde loading efekti istemediÄimiz iÃ§in fetching set etmiyoruz
        return {};
      }
    });
  },

  getJobExperience: function getJobExperience(requestModel) {
    var data = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/KycWorkingTimeList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          calismaSuresi: jsonObj.calismaSureleri,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  getCddVarlikKaynagi: function getCddVarlikKaynagi(requestModel) {
    var data = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/CddVarlikKaynagiBireyselList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          varlikKaynaklari: jsonObj.varlikKaynaklari,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  getCddIslemHacmi: function getCddIslemHacmi(requestModel) {
    var data = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/CddIslemHacmiList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          islemHacimleri: jsonObj.islemHacimleri,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  getCddIslemSayisi: function getCddIslemSayisi(requestModel) {
    var data = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/CddIslemSayisiBireyselList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          islemSayilari: jsonObj.islemSayilari,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  },

  getCddYerlesikUlkeListesi: function getCddYerlesikUlkeListesi(requestModel) {
    var data = {
      NextTransactionUrl: "Facebook/SocialMediaPortalStaticData/SecondNationalityCountryList1",
      TokenSessionId: requestModel.tokenSessionId
    };

    return (0, _webcore.PostAjaxAsync)({
      url: "/api",
      data: data,
      dataType: "json",
      onStart: function onStart() {
        return {
          fetching: true
        };
      },
      onSuccess: function onSuccess(data) {
        var jsonObj = JSON.parse(data);

        return {
          ikinciUyrukUlkeler: jsonObj.ikinciUyrukUlkeler,
          error: jsonObj.ErrorMessage
        };
      },
      onError: function onError(err) {
        return {
          error: err
        };
      },
      onFinally: function onFinally(response) {
        return {
          fetching: false
        };
      }
    });
  }

});

exports.default = ihtiyacKredisiState;

/***/ }),

/***/ "VJPP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = __webpack_require__("ECVE");

var _utils2 = _interopRequireDefault(_utils);

var _smooth = __webpack_require__("lvGd");

var _smooth2 = _interopRequireDefault(_smooth);

var _cancelEvents = __webpack_require__("9Zln");

var _cancelEvents2 = _interopRequireDefault(_cancelEvents);

var _scrollEvents = __webpack_require__("xafY");

var _scrollEvents2 = _interopRequireDefault(_scrollEvents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Gets the easing type from the smooth prop within options.
 */
var getAnimationType = function getAnimationType(options) {
  return _smooth2.default[options.smooth] || _smooth2.default.defaultEasing;
};
/*
 * Function helper
 */
var functionWrapper = function functionWrapper(value) {
  return typeof value === 'function' ? value : function () {
    return value;
  };
};
/*
 * Wraps window properties to allow server side rendering
 */
var currentWindowProperties = function currentWindowProperties() {
  if (typeof window !== 'undefined') {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame;
  }
};

/*
 * Helper function to never extend 60fps on the webpage.
 */
var requestAnimationFrameHelper = function () {
  return currentWindowProperties() || function (callback, element, delay) {
    window.setTimeout(callback, delay || 1000 / 60, new Date().getTime());
  };
}();

var makeData = function makeData() {
  return {
    currentPosition: 0,
    startPosition: 0,
    targetPosition: 0,
    progress: 0,
    duration: 0,
    cancel: false,

    target: null,
    containerElement: null,
    to: null,
    start: null,
    delta: null,
    percent: null,
    delayTimeout: null
  };
};

var currentPositionX = function currentPositionX(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollLeft;
  } else {
    var supportPageOffset = window.pageXOffset !== undefined;
    var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
    return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;
  }
};

var currentPositionY = function currentPositionY(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollTop;
  } else {
    var supportPageOffset = window.pageXOffset !== undefined;
    var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
    return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
  }
};

var scrollContainerWidth = function scrollContainerWidth(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollWidth - containerElement.offsetWidth;
  } else {
    var body = document.body;
    var html = document.documentElement;

    return Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);
  }
};

var scrollContainerHeight = function scrollContainerHeight(options) {
  var containerElement = options.data.containerElement;
  if (containerElement && containerElement !== document && containerElement !== document.body) {
    return containerElement.scrollHeight - containerElement.offsetHeight;
  } else {
    var body = document.body;
    var html = document.documentElement;

    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
  }
};

var animateScroll = function animateScroll(easing, options, timestamp) {
  var data = options.data;

  // Cancel on specific events
  if (!options.ignoreCancelEvents && data.cancel) {
    if (_scrollEvents2.default.registered['end']) {
      _scrollEvents2.default.registered['end'](data.to, data.target, data.currentPositionY);
    }
    return;
  };

  data.delta = Math.round(data.targetPosition - data.startPosition);

  if (data.start === null) {
    data.start = timestamp;
  }

  data.progress = timestamp - data.start;

  data.percent = data.progress >= data.duration ? 1 : easing(data.progress / data.duration);

  data.currentPosition = data.startPosition + Math.ceil(data.delta * data.percent);

  if (data.containerElement && data.containerElement !== document && data.containerElement !== document.body) {
    if (options.horizontal) {
      data.containerElement.scrollLeft = data.currentPosition;
    } else {
      data.containerElement.scrollTop = data.currentPosition;
    }
  } else {
    if (options.horizontal) {
      window.scrollTo(data.currentPosition, 0);
    } else {
      window.scrollTo(0, data.currentPosition);
    }
  }

  if (data.percent < 1) {
    var easedAnimate = animateScroll.bind(null, easing, options);
    requestAnimationFrameHelper.call(window, easedAnimate);
    return;
  }

  if (_scrollEvents2.default.registered['end']) {
    _scrollEvents2.default.registered['end'](data.to, data.target, data.currentPosition);
  }
};

var setContainer = function setContainer(options) {
  options.data.containerElement = !options ? null : options.containerId ? document.getElementById(options.containerId) : options.container && options.container.nodeType ? options.container : document;
};

var animateTopScroll = function animateTopScroll(scrollOffset, options, to, target) {
  options.data = options.data || makeData();

  window.clearTimeout(options.data.delayTimeout);

  var setCancel = function setCancel() {
    options.data.cancel = true;
  };
  _cancelEvents2.default.subscribe(setCancel);

  setContainer(options);

  options.data.start = null;
  options.data.cancel = false;
  options.data.startPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);
  options.data.targetPosition = options.absolute ? scrollOffset : scrollOffset + options.data.startPosition;

  if (options.data.startPosition === options.data.targetPosition) {
    if (_scrollEvents2.default.registered['end']) {
      _scrollEvents2.default.registered['end'](options.data.to, options.data.target, options.data.currentPosition);
    }
    return;
  }

  options.data.delta = Math.round(options.data.targetPosition - options.data.startPosition);

  options.data.duration = functionWrapper(options.duration)(options.data.delta);
  options.data.duration = isNaN(parseFloat(options.data.duration)) ? 1000 : parseFloat(options.data.duration);
  options.data.to = to;
  options.data.target = target;

  var easing = getAnimationType(options);
  var easedAnimate = animateScroll.bind(null, easing, options);

  if (options && options.delay > 0) {
    options.data.delayTimeout = window.setTimeout(function () {
      if (_scrollEvents2.default.registered['begin']) {
        _scrollEvents2.default.registered['begin'](options.data.to, options.data.target);
      }
      requestAnimationFrameHelper.call(window, easedAnimate);
    }, options.delay);
    return;
  }

  if (_scrollEvents2.default.registered['begin']) {
    _scrollEvents2.default.registered['begin'](options.data.to, options.data.target);
  }
  requestAnimationFrameHelper.call(window, easedAnimate);
};

var proceedOptions = function proceedOptions(options) {
  options = _extends({}, options);
  options.data = options.data || makeData();
  options.absolute = true;
  return options;
};

var scrollToTop = function scrollToTop(options) {
  animateTopScroll(0, proceedOptions(options));
};

var scrollTo = function scrollTo(toPosition, options) {
  animateTopScroll(toPosition, proceedOptions(options));
};

var scrollToBottom = function scrollToBottom(options) {
  options = proceedOptions(options);
  setContainer(options);
  animateTopScroll(options.horizontal ? scrollContainerWidth(options) : scrollContainerHeight(options), options);
};

var scrollMore = function scrollMore(toPosition, options) {
  options = proceedOptions(options);
  setContainer(options);
  var currentPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);
  animateTopScroll(toPosition + currentPosition, options);
};

exports.default = {
  animateTopScroll: animateTopScroll,
  getAnimationType: getAnimationType,
  scrollToTop: scrollToTop,
  scrollToBottom: scrollToBottom,
  scrollTo: scrollTo,
  scrollMore: scrollMore
};

/***/ }),

/***/ "VUfu":
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["@bapp/nucleus"] = factory();
	else
		root["@bapp/nucleus"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 26);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Dd8w");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("//Fk");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("BO1k");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("fZjL");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("C4MV");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("GiK3");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("pFYg");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Gu7T");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("2KeS");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(10);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(11);

var _createClass3 = _interopRequireDefault(_createClass2);

var _redux = __webpack_require__(8);

var _assign = __webpack_require__(29);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function ReducerBuffer(capacity) {
  if (typeof capacity !== 'number' || capacity % 1 != 0 || capacity < 1) {
    throw new TypeError('Invalid capacity');
  }
  this._buffer = new Array(capacity);
  this._reducerDict = {};
  this._capacity = capacity;
  this._first = 0;
  this._size = 0;
  this._emitChange = null;
}

ReducerBuffer.prototype = {
  size: function () {
    function size() {
      return this._size;
    }

    return size;
  }(),
  setChangeListener: function () {
    function setChangeListener(listener) {
      this._emitChange = listener;
    }

    return setChangeListener;
  }(),
  enq: function () {
    function enq(value, key) {
      if (this._first > 0) {
        this._first--;
      } else {
        this._first = this._capacity - 1;
      }
      this.emitChange();
      this._buffer[this._first] = { reducer: value, tag: key };
      this._reducerDict[key] = true;
      if (this._size < this._capacity) {
        this._size++;
      }
    }

    return enq;
  }(),
  checkExists: function () {
    function checkExists(key) {
      return this._reducerDict[key];
    }

    return checkExists;
  }(),

  emitChange: function () {
    function emitChange() {
      if (this._emitChange != null && this._buffer[this._first]) {
        this._reducerDict[this._buffer[this._first].tag] = null;
        this._emitChange(this._buffer[this._first]);
      }
    }

    return emitChange;
  }(),
  get: function () {
    function get(start, end) {
      if (this._size == 0 && start == 0 && (end == undefined || end == 0)) {
        return [];
      }
      if (typeof start !== 'number' || start % 1 != 0 || start < 0) {
        throw new TypeError('Invalid start');
      }
      if (start >= this._size) {
        throw new RangeError('Index past end of buffer: ' + start);
      }
      if (end == undefined) {
        return this._buffer[(this._first + start) % this._capacity];
      }
      if (typeof end !== 'number' || end % 1 != 0 || end < 0) {
        throw new TypeError('Invalid end');
      }
      if (end >= this._size) {
        throw new RangeError('Index past end of buffer: ' + end);
      }
      if (this._first + start >= this._capacity) {
        start -= this._capacity;
        end -= this._capacity;
      }
      if (this._first + end < this._capacity) {
        return this._buffer.slice(this._first + start, this._first + end + 1);
      } else {
        return this._buffer.slice(this._first + start, this._capacity).concat(this._buffer.slice(0, this._first + end + 1 - this._capacity));
      }
    }

    return get;
  }(),
  toarray: function () {
    function toarray() {
      var newreducers = {};
      if (this._size == 0) {
        return newreducers;
      }
      var reducers = this.get(0, this._size - 1);
      for (var index = 0; index < reducers.length; index++) {
        newreducers[reducers[index].tag] = reducers[index].reducer;
      }
      return newreducers;
    }

    return toarray;
  }()
};

var ReducerCatalog = function () {
  function ReducerCatalog() {
    (0, _classCallCheck3['default'])(this, ReducerCatalog);

    this._emitChange = null;
    this._store = null;
    this._uniqueIncrement = 0;
  }

  (0, _createClass3['default'])(ReducerCatalog, [{
    key: 'init',
    value: function () {
      function init() {
        var initialreducers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var initialSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;

        var self = this;
        this._initialreducers = (0, _extends3['default'])({}, initialreducers);
        this._reducers = (0, _extends3['default'])({}, this._initialreducers);
        this._reducerBuffer = new ReducerBuffer(initialSize);
        this._reducerBuffer.setChangeListener(function (bufferObj) {
          if (self._store) {
            var currentState = self._store.getState();
            if (currentState[bufferObj.tag]) {
              delete currentState[bufferObj.tag];
            }
          }
        });
      }

      return init;
    }()
  }, {
    key: 'register',
    value: function () {
      function register(newreducers) {
        if (this._reducerBuffer) {
          for (var key in newreducers) {
            if (!this._reducerBuffer.checkExists(key)) {
              if (newreducers.hasOwnProperty(key)) {
                var reducer = newreducers[key];
                this._reducerBuffer.enq(reducer, key);
              }
            }
          }
          this._reducers = (0, _extends3['default'])({}, this._initialreducers, this._reducerBuffer.toarray());
          if (this._emitChange != null) {
            this._emitChange(this.getReducers());
          }
        } else {
          throw 'Reducer Catalog is not initialized!';
        }
      }

      return register;
    }()
  }, {
    key: 'setStore',
    value: function () {
      function setStore(store) {
        this._store = store;
      }

      return setStore;
    }()
  }, {
    key: 'getStore',
    value: function () {
      function getStore() {
        return this._store;
      }

      return getStore;
    }()
  }, {
    key: 'getIncrement',
    value: function () {
      function getIncrement() {
        this._uniqueIncrement = this._uniqueIncrement + 1;
        return this._uniqueIncrement;
      }

      return getIncrement;
    }()
  }, {
    key: 'configureReducers',
    value: function () {
      function configureReducers(reducers) {
        return (0, _redux.combineReducers)((0, _extends3['default'])({}, reducers));
      }

      return configureReducers;
    }()
  }, {
    key: 'getReducers',
    value: function () {
      function getReducers() {
        return (0, _extends3['default'])({}, this._reducers);
      }

      return getReducers;
    }()
  }, {
    key: 'getCommonReducers',
    value: function () {
      function getCommonReducers() {
        return (0, _extends3['default'])({}, this._initialreducers);
      }

      return getCommonReducers;
    }()
  }, {
    key: 'setChangeListener',
    value: function () {
      function setChangeListener(listener) {
        this._emitChange = listener;
      }

      return setChangeListener;
    }()
  }, {
    key: 'changeReducers',
    value: function () {
      function changeReducers(reducers) {
        var newReducers = this.configureReducers(reducers);
        this._store.replaceReducer(newReducers);
      }

      return changeReducers;
    }()
  }, {
    key: 'createAction',
    value: function () {
      function createAction(type) {
        var store = this._store;
        return function (data) {
          store.dispatch({
            type: type,
            payload: {
              data: data
            }
          });
        };
      }

      return createAction;
    }()
  }, {
    key: 'createReducer',
    value: function () {
      function createReducer(targetAction) {
        var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var matchingPropName = arguments[2];
        var reducertag = arguments[3];

        var newReducer = {};
        var pageReducer = function () {
          function pageReducer() {
            var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
            var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { type: 'UNKNOWN' };

            if (action.type == targetAction) {
              var myState = {};
              myState[matchingPropName] = action.payload.data;
              return (0, _assign2['default'])({}, state, myState);
            }
            return state;
          }

          return pageReducer;
        }();
        newReducer[reducertag] = pageReducer;
        return newReducer;
      }

      return createReducer;
    }()
  }, {
    key: 'exists',
    value: function () {
      function exists(key) {
        return this._reducerBuffer.checkExists(key);
      }

      return exists;
    }()
  }]);
  return ReducerCatalog;
}();

var reducerRegistry = new ReducerCatalog();
exports['default'] = reducerRegistry;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("Zrlr");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("wxAW");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = undefined;

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(10);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(11);

var _createClass3 = _interopRequireDefault(_createClass2);

var _react = __webpack_require__(5);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var reducers = {};

var ReducerRegistry = function () {
  function ReducerRegistry() {
    (0, _classCallCheck3['default'])(this, ReducerRegistry);
  }

  (0, _createClass3['default'])(ReducerRegistry, null, [{
    key: 'injectReducer',
    value: function () {
      function injectReducer(name, reducer) {
        reducers[name] = reducer;
      }

      return injectReducer;
    }()
  }, {
    key: 'getReducers',
    value: function () {
      function getReducers() {
        return (0, _extends3['default'])({}, reducers);
      }

      return getReducers;
    }()
  }]);
  return ReducerRegistry;
}();

exports['default'] = ReducerRegistry;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("woOf");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = createMiddleware;

var warningFn = function () {
  function warningFn() {
    if (typeof console !== 'undefined' && typeof console.group !== 'undefined') console.warn('It looks like you\'re trying to use Flightstate without the middleware! For Flightstate to work, you need to run CreateFlightstateMiddleware() and apply it as middleware to your Redux Store.');
  }

  return warningFn;
}();
var resolvedDispatch = warningFn;
var resolvedGetState = warningFn;

var dispatch = exports.dispatch = function () {
  function dispatch() {
    return resolvedDispatch.apply(undefined, arguments);
  }

  return dispatch;
}();
var getState = exports.getState = function () {
  function getState() {
    return resolvedGetState.apply(undefined, arguments);
  }

  return getState;
}();

function createMiddleware(options) {
  return function (stateUtils) {
    // If we haven't lifted the stores dispatcher yet, do it just this once
    if (resolvedDispatch === warningFn) {
      resolvedDispatch = stateUtils.dispatch;
      resolvedGetState = stateUtils.getState;
    }
    return function (next) {
      return function (action) {
        var result = next(action);

        return result;
      };
    };
  };
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(5);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var GetterSetterUtils = {
  dottedObjectGetter: function () {
    function dottedObjectGetter(obj, fullPath) {
      var splittedPath = fullPath.split('.');
      for (var j = 0; j < splittedPath.length - 1; j++) {
        var path = splittedPath[j];
        if (obj[path]) {
          obj = obj[path];
        } else {
          return null;
        }
      }

      return obj[splittedPath[splittedPath.length - 1]];
    }

    return dottedObjectGetter;
  }(),
  dottedObjectSetter: function () {
    function dottedObjectSetter(obj, fullPath, value) {
      var splittedPath = fullPath.split('.');
      for (var j = 0; j < splittedPath.length - 1; j++) {
        var path = splittedPath[j];
        if (!obj[path]) {
          obj[path] = {};
        }

        obj = obj[path];
      }

      obj[splittedPath[splittedPath.length - 1]] = value;
    }

    return dottedObjectSetter;
  }(),
  getFieldName: function () {
    function getFieldName(fullPath) {
      if (fullPath) {
        var lastDotIndex = fullPath.lastIndexOf('.');
        if (lastDotIndex == -1) {
          return fullPath;
        } else {
          return fullPath.substring(lastDotIndex + 1);
        }
      } else {
        return null;
      }
    }

    return getFieldName;
  }(),
  removeLastFieldName: function () {
    function removeLastFieldName(fullPath) {
      if (fullPath) {
        var lastDotIndex = fullPath.lastIndexOf('.');
        if (lastDotIndex == -1) {
          return null;
        } else {
          return fullPath.substring(0, lastDotIndex);
        }
      } else {
        return null;
      }
    }

    return removeLastFieldName;
  }()
};

exports['default'] = GetterSetterUtils;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCached = isCached;
exports.setCache = setCache;
exports.getCache = getCache;

var CACHE = {};
var MEMORY = exports.MEMORY = 'memory';
var LOCAL = exports.LOCAL = 'local';
var SESSION = exports.SESSION = 'session';
var defaultTimeout = exports.defaultTimeout = 30000;

function isLocalStorage(type) {
  return type && type === LOCAL && window && window.localStorage;
}

function isSessionStorage(type) {
  return type && type === SESSION && window && window.sessionStorage;
}

function isCached(key, type) {
  if (type) {
    if (isLocalStorage(type) && window.localStorage.getItem(key) || isSessionStorage(type) && window.sessionStorage.getItem(key)) {
      return true;
    } else {
      return false;
    }
  }
  if (CACHE[key] === undefined) {
    return false;
  }
  return true;
}

function setCache(key, value, type) {
  if (isLocalStorage(type)) {
    window.localStorage.setItem(key, value);
  } else if (isSessionStorage(type)) {
    window.sessionStorage.setItem(key, value);
  }
  CACHE[key] = value;
  return true;
}

function getCache(key, type) {
  if (isLocalStorage(type)) {
    return window.localStorage.getItem(key);
  } else if (isSessionStorage(type)) {
    return window.sessionStorage.getItem(key);
  }
  if (isCached(key)) {
    return CACHE[key];
  }

  return null;
}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatch = exports.getState = exports.CreateFlightstateMiddleware = exports.State = undefined;

var _state = __webpack_require__(18);

var _state2 = _interopRequireDefault(_state);

var _middleware = __webpack_require__(14);

var _middleware2 = _interopRequireDefault(_middleware);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports.State = _state2['default'];
exports.CreateFlightstateMiddleware = _middleware2['default'];
exports.getState = _middleware.getState;
exports.dispatch = _middleware.dispatch;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = __webpack_require__(1);

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__(3);

var _keys2 = _interopRequireDefault(_keys);

var _getIterator2 = __webpack_require__(2);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _assign = __webpack_require__(13);

var _assign2 = _interopRequireDefault(_assign);

var _toConsumableArray2 = __webpack_require__(7);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

var _middleware = __webpack_require__(14);

var _actions = __webpack_require__(30);

var _ReducerRegistry = __webpack_require__(12);

var _ReducerRegistry2 = _interopRequireDefault(_ReducerRegistry);

var _GetterSetterUtils = __webpack_require__(15);

var _GetterSetterUtils2 = _interopRequireDefault(_GetterSetterUtils);

var _promiseWrapper = __webpack_require__(31);

var _promiseWrapper2 = _interopRequireDefault(_promiseWrapper);

var _isPromise = __webpack_require__(32);

var _isPromise2 = _interopRequireDefault(_isPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var promiseExecutor = function () {
  function promiseExecutor(namedActions, state, name, fieldPath, promise, stateContext) {
    var result = null;
    if (promise.onStart) {
      result = promise.onStart(state, fieldPath, stateContext.initialState);
    }

    promise.then(function (res) {
      var successName = name + '_success';
      if (!namedActions[successName]) namedActions[successName] = function () {};

      (0, _middleware.dispatch)({ type: successName, promiseFn: function () {
          function promiseFn() {
            return res;
          }

          return promiseFn;
        }(), fieldPath: fieldPath, args: [] });
    })['catch'](function (err) {
      var failName = name + '_fail';
      if (!namedActions[failName]) namedActions[failName] = function () {};

      (0, _middleware.dispatch)({ type: failName, promiseFn: function () {
          function promiseFn() {
            return err;
          }

          return promiseFn;
        }(), fieldPath: fieldPath, args: [] });
    });

    return result;
  }

  return promiseExecutor;
}();

var xSetFieldValue = function () {
  function xSetFieldValue(target, fieldPath, key, fieldValue, stripFieldName) {
    var path = fieldPath;
    if (!fieldPath) {
      path = key;
    } else {
      if (stripFieldName && fieldPath) {
        var strippedFieldPath = _GetterSetterUtils2['default'].removeLastFieldName(fieldPath);
        path = strippedFieldPath ? strippedFieldPath + '.' + key : key;
      } else {
        path = fieldPath ? fieldPath + '.' + key : key;
      }
    }

    _GetterSetterUtils2['default'].dottedObjectSetter(target, path, fieldValue);
  }

  return xSetFieldValue;
}();

function createReducerWithAction(namedActions, stateContext) {
  return function (state) {
    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (namedActions[action.type]) {
      var fn = action.promiseFn || namedActions[action.type];
      var reducerWithActions = fn.reducerWithActions || {};
      var _private = reducerWithActions.__private__ || {};
      var ctx = (0, _extends3['default'])({}, reducerWithActions, _private, { state: state });
      fn = fn.bind(ctx);
      var nextState = fn.apply(undefined, (0, _toConsumableArray3['default'])(action.args)) || {};

      if ((0, _isPromise2['default'])(nextState)) {
        var fieldPath = action.fieldPath;
        var onStartState = promiseExecutor(namedActions, state, action.type, fieldPath, nextState, stateContext);
        if (onStartState) {
          var startState = {};
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = (0, _getIterator3['default'])((0, _keys2['default'])(onStartState)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var subKey = _step.value;

              xSetFieldValue(startState, fieldPath, subKey, onStartState[subKey], onStartState.stripFieldName);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator['return']) {
                _iterator['return']();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          stateContext.currentState = (0, _assign2['default'])({}, state, startState);
        }

        if (action.promiseArgs) {
          nextState.then(function (response) {
            setTimeout(function () {
              action.promiseArgs.resolve(response);
            }, 20);
          })['catch'](function (err) {
            setTimeout(function () {
              action.promiseArgs.reject(err);
            }, 20);
          });
        }
      } else {
        var syncNextState = {};
        var promiseList = [];
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = (0, _getIterator3['default'])((0, _keys2['default'])(nextState)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var key = _step2.value;

            var nextField = nextState[key];
            if ((0, _isPromise2['default'])(nextField)) {
              promiseList.push(nextField);
              var _fieldPath = action.fieldPath ? action.fieldPath + '.' + key : key;
              var _onStartState = promiseExecutor(namedActions, state, action.type, _fieldPath, nextField, stateContext);
              if (_onStartState) {
                var _iteratorNormalCompletion3 = true;
                var _didIteratorError3 = false;
                var _iteratorError3 = undefined;

                try {
                  for (var _iterator3 = (0, _getIterator3['default'])((0, _keys2['default'])(_onStartState)), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                    var _subKey = _step3.value;

                    xSetFieldValue(syncNextState, _fieldPath, _subKey, _onStartState[_subKey], _onStartState.stripFieldName);
                  }
                } catch (err) {
                  _didIteratorError3 = true;
                  _iteratorError3 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion3 && _iterator3['return']) {
                      _iterator3['return']();
                    }
                  } finally {
                    if (_didIteratorError3) {
                      throw _iteratorError3;
                    }
                  }
                }
              }
            } else {
              xSetFieldValue(syncNextState, action.fieldPath, key, nextField, nextState.stripFieldName);
            }
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2['return']) {
              _iterator2['return']();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }

        delete syncNextState.stripFieldName;

        stateContext.currentState = (0, _assign2['default'])({}, state, syncNextState);
        if (action.promiseArgs) {
          if (promiseList.length > 0) {
            _promise2['default'].all(promiseList).then(function () {
              setTimeout(function () {
                action.promiseArgs.resolve(syncNextState);
              }, 20);
            })['catch'](function (err) {
              setTimeout(function () {
                action.promiseArgs.reject(err);
              }, 20);
            });
          } else {
            setTimeout(function () {
              action.promiseArgs.resolve(syncNextState);
            }, 100);
          }
        }
      }
    } else {
      // If the store already has a stored previous state, use that
      // Otherwise, fallback to the user-provided initial state
      stateContext.currentState = state || stateContext.initialState;
    }
    return stateContext.currentState;
  };
}

function replaceActions(sandboxName, namedActions, reducerWithActions, actions) {
  // Loop through the actions and proxy them to do awesome stuff
  (0, _keys2['default'])(actions).forEach(function (actionName) {
    var actionFn = actions[actionName];
    if (actionName[0] === '_') {
      if (!reducerWithActions.__private__) reducerWithActions.__private__ = {};
      reducerWithActions.__private__[actionName] = actionFn;
    } else if (actionName[0] !== '_' && typeof actionFn === 'function') {
      var resolvedActionName = sandboxName ? sandboxName + '_' + actionName : actionName;

      // Keep a reference to the original action for the reducer to reference
      actionFn.reducerWithActions = reducerWithActions;
      namedActions[resolvedActionName] = actionFn;

      // Create a namespaced action
      var actionMethod = function () {
        function actionMethod() {
          var args = arguments;
          var action = {
            type: resolvedActionName,
            args: args
          };

          var promise = new _promise2['default'](function (resolve, reject) {
            action.promiseArgs = { resolve: resolve, reject: reject };
            (0, _middleware.dispatch)(action);
          });

          return (0, _promiseWrapper2['default'])(promise);
        }

        return actionMethod;
      }();

      // Attach the method to the reducer
      reducerWithActions[actionName] = actionMethod;

      // If global, add the actionMethod to the global Actions list
      if (!sandboxName) {
        (0, _actions.addAction)(actionName, actionMethod);
      }
    }
  });
}

var State = function () {
  function State() {
    var actions = arguments.length <= 0 ? undefined : arguments[0];
    var sandboxName = actions.name;

    // Checks
    if (typeof sandboxName === 'string' && !sandboxName.length) {
      throw new Error('State name must be a valid string');
    }

    // set the current state to the initial value
    var stateContext = {
      sandboxName: sandboxName,
      currentState: null,
      initialState: actions.initial,
      namedActions: {}
    };
    delete actions.initial;

    var reducerWithActions = createReducerWithAction(stateContext.namedActions, stateContext);

    reducerWithActions.getState = function () {
      return stateContext.currentState;
    };

    reducerWithActions.__getContext = function () {
      return stateContext;
    };

    replaceActions(stateContext.sandboxName, stateContext.namedActions, reducerWithActions, actions);

    _ReducerRegistry2['default'].injectReducer(stateContext.sandboxName, reducerWithActions);
    return reducerWithActions;
  }

  return State;
}();

State.extend = function (reducerWithActions, extendedActions) {
  if (!reducerWithActions.__getContext) {
    throw new Error('State name must be a valid object');
  }

  var stateContext = reducerWithActions.__getContext();

  replaceActions(stateContext.sandboxName, stateContext.namedActions, reducerWithActions, extendedActions);
};

exports['default'] = State;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("mvHQ");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = md5;
function md5(str) {
  var hash = 0;
  if (str.length === 0) return hash;
  for (var i = 0; i < str.length; i++) {
    var char = str.charCodeAt(i);
    hash = (hash << 5) - hash + char;
    hash = hash & hash; // Convert to 32bit integer
  }
  return hash;
}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(48);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends3 = __webpack_require__(0);

var _extends4 = _interopRequireDefault(_extends3);

var _promise = __webpack_require__(1);

var _promise2 = _interopRequireDefault(_promise);

exports.setLogger = setLogger;
exports.addLog = addLog;
exports.clearLog = clearLog;
exports.sendLogQueue = sendLogQueue;

var _AjaxAsync = __webpack_require__(22);

var _loghelper = __webpack_require__(49);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function setLogger(props) {
    (0, _loghelper.setLoggerAction)(props, sendLogQueue);
}

function addLog(log) {
    new _promise2["default"](function (resolve) {
        (0, _loghelper.addLogPromise)(log, sendLogQueue);
        resolve();
    });
}

function clearLog(logs) {
    new _promise2["default"](function (resolve) {
        (0, _loghelper.clearLogPromise)(logs);
        resolve();
    });
}

function sendLogQueue(logs) {
    if (!logs) {
        logs = _loghelper.logQueue;
    }
    var _loggerOptions$logger = _loghelper.loggerOptions.loggerConfig,
        loggerConfig = _loggerOptions$logger === undefined ? {} : _loggerOptions$logger,
        _loggerOptions$tokenC = _loghelper.loggerOptions.tokenConfig,
        tokenConfig = _loggerOptions$tokenC === undefined ? {} : _loggerOptions$tokenC;
    var data = loggerConfig.data,
        url = loggerConfig.url,
        sendLog = loggerConfig.sendLog,
        logName = loggerConfig.logName;

    if (!sendLog) return;

    if (logs.length > 0) {
        sendLog({
            request: {
                url: url,
                data: (0, _extends4["default"])({}, data, (0, _defineProperty3["default"])({}, logName, logs))
            },
            tokenConfig: tokenConfig,
            onSuccess: function () {
                function onSuccess() {
                    clearLog(logs);
                }

                return onSuccess;
            }()
        });
    }
}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PostAjaxAsync = exports.GetAjaxAsync = undefined;

var _promise = __webpack_require__(1);

var _promise2 = _interopRequireDefault(_promise);

var _toConsumableArray2 = __webpack_require__(7);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _assign = __webpack_require__(13);

var _assign2 = _interopRequireDefault(_assign);

var _typeof2 = __webpack_require__(6);

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = __webpack_require__(3);

var _keys2 = _interopRequireDefault(_keys);

var _getIterator2 = __webpack_require__(2);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _stringify = __webpack_require__(19);

var _stringify2 = _interopRequireDefault(_stringify);

var _axios = __webpack_require__(23);

var _axios2 = _interopRequireDefault(_axios);

var _GetterSetterUtils = __webpack_require__(15);

var _GetterSetterUtils2 = _interopRequireDefault(_GetterSetterUtils);

var _AjaxEnricher = __webpack_require__(24);

var _md = __webpack_require__(20);

var _md2 = _interopRequireDefault(_md);

var _caching = __webpack_require__(16);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function createCacheKey(url, data) {
  var cacheKey = (0, _md2['default'])((0, _stringify2['default'])({ url: url, data: data }));
  return cacheKey;
}

function toUrl(options) {
  return options.url;
}

function toAxiosArgs(isGet, options) {
  if (isGet) {
    return [toUrl(options), options.config];
  } else {
    return [toUrl(options), options.data, options.config];
  }
}

function waitUntill(condition, action) {
  var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;

  setTimeout(function () {
    if (condition()) {
      action();
    } else {
      waitUntill(condition, action, delay + 10);
    }
  }, delay);
}

function startToState(fieldName, initialValue) {
  var result = {};
  if (fieldName) {
    result.stripFieldName = true;
    result[fieldName + 'Initialized'] = false;
    result[fieldName + 'Loading'] = true;
    result[fieldName + 'Error'] = null;
    result[fieldName] = initialValue;
  }
  return result;
}

function successToState(fieldName, data) {
  var result = {};
  if (fieldName) {
    result.stripFieldName = true;
    result[fieldName + 'Initialized'] = true;
    result[fieldName + 'Loading'] = false;
    result[fieldName + 'Error'] = null;
    result[fieldName] = data;
  }
  return result;
}

function failToState(fieldName, error, initialValue) {
  var result = {};
  if (fieldName) {
    result.stripFieldName = true;
    result[fieldName + 'Initialized'] = true;
    result[fieldName + 'Loading'] = false;
    result[fieldName + 'Error'] = error;
    result[fieldName] = initialValue;
  }
  return result;
}

function xStripField(obj, key, field) {
  if (key === '_embedded') {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = (0, _getIterator3['default'])((0, _keys2['default'])(field)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var embeddedKey = _step.value;

        xStripField(obj, embeddedKey, field[embeddedKey]);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  } else if (Array.isArray(field)) {
    var arrayField = [];
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = (0, _getIterator3['default'])(field), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var item = _step2.value;

        if (item && (typeof item === 'undefined' ? 'undefined' : (0, _typeof3['default'])(item)) === 'object') {
          arrayField.push(xStripEmbedded(item));
        } else {
          arrayField.push(item);
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    obj[key] = arrayField;
  } else {
    obj[key] = field;
  }
}

function xStripEmbedded(data) {
  var result = {};
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = (0, _getIterator3['default'])((0, _keys2['default'])(data)), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var key = _step3.value;

      var field = data[key];
      xStripField(result, key, field);
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3['return']) {
        _iterator3['return']();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  return result;
}

function normalizeData(options, data) {
  var result = data;
  if (options.stripEmbedded) {
    result = xStripEmbedded(result);
  }

  if (options.select) {
    result = _GetterSetterUtils2['default'].dottedObjectGetter(result, options.select);
  }

  if (options.map) {
    if (Array.isArray(result)) {
      result = result.map(function (obj) {
        return options.map(obj);
      });
    } else {
      result = options.map(result);
    }
  }

  if (options.orderyBy) {
    result.sort(function (left, right) {
      var a = options.orderyBy(left);
      var b = options.orderyBy(right);
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return 0;
    });
  }

  return result;
}

function ajaxRequest(options, isGet) {
  var fieldNameWrapper = {
    name: null,
    initialized: false,
    initialValue: null
  };

  var axiosArgs = toAxiosArgs(isGet, options);
  var axiosFn = isGet ? _axios2['default'].get : _axios2['default'].post;

  var processFailure = function () {
    function processFailure(reject, err) {
      var result = failToState(fieldNameWrapper.name, err, fieldNameWrapper.initialValue);
      (0, _AjaxEnricher.proccesErrorMessage)(err, options);
      if (options.onError) {
        var onErrorResult = options.onError(err);
        if (onErrorResult) {
          result = (0, _assign2['default'])(result, onErrorResult);
        }
        if (options.onFinally) {
          var onFinallyResult = options.onFinally(false, null, err);
          if (onFinallyResult) {
            result = (0, _assign2['default'])(result, onFinallyResult);
          }
        }
      }
      reject(result);
    }

    return processFailure;
  }();

  var cacheKey = createCacheKey(options.url, options.data);
  var promise;

  if (!(options.cache && options.cache.isCacheable) || !(0, _caching.isCached)(cacheKey)) {
    promise = axiosFn.apply(undefined, (0, _toConsumableArray3['default'])(axiosArgs)).then(function (res) {
      if (options.cache && options.cache.isCacheable) {
        var data = normalizeData(options, res.data);
        var enrichedResponse = (0, _AjaxEnricher.proccesSuccessMessage)(res, data, options);
        if (!enrichedResponse.error) {
          var now = new Date();
          (0, _caching.setCache)(cacheKey, { created: now, value: res });
        }
      }
      return processAxiosResponse(res, options, fieldNameWrapper);
    })['catch'](function (err) {
      return new _promise2['default'](function (resolve, reject) {
        waitUntill(function () {
          return fieldNameWrapper.initialized != null;
        }, function () {
          processFailure(reject, err);
        });
      });
    });
  } else {
    var cachedData = (0, _caching.getCache)(cacheKey);
    var timeout = options.cache && options.cache.timeout ? options.cache.timeout : _caching.defaultTimeout;
    var now = new Date();
    if (cachedData.created.getTime() + _caching.defaultTimeout < now.getTime()) {
      promise = axiosFn.apply(undefined, (0, _toConsumableArray3['default'])(axiosArgs)).then(function (res) {
        if (options.cache && options.cache.isCacheable) {
          var data = normalizeData(options, res.data);
          var enrichedResponse = (0, _AjaxEnricher.proccesSuccessMessage)(res, data, options);
          if (!enrichedResponse.error) {
            var _now = new Date();
            (0, _caching.setCache)(cacheKey, { created: _now, value: res });
          }
        }
        return processAxiosResponse(res, options, fieldNameWrapper);
      })['catch'](function (err) {
        return new _promise2['default'](function (resolve, reject) {
          waitUntill(function () {
            return fieldNameWrapper.initialized != null;
          }, function () {
            processFailure(reject, err);
          });
        });
      });
    } else {
      promise = new _promise2['default'](function (resolve, reject) {
        resolve((0, _caching.getCache)(cacheKey).value);
      }).then(function (res) {
        return processAxiosResponse(res, options, fieldNameWrapper);
      })['catch'](function (err) {
        return new _promise2['default'](function (resolve, reject) {
          waitUntill(function () {
            return fieldNameWrapper.initialized != null;
          }, function () {
            processFailure(reject, err);
          });
        });
      });
    }
  }

  promise.onStart = function (state, fieldPath, initialState) {
    var fieldName = _GetterSetterUtils2['default'].getFieldName(fieldPath);
    fieldNameWrapper.name = fieldName;
    fieldNameWrapper.initialValue = fieldPath ? _GetterSetterUtils2['default'].dottedObjectGetter(initialState || {}, fieldPath) : null;
    fieldNameWrapper.initialized = true;
    var result = startToState(fieldName, fieldNameWrapper.initialValue);
    if (options.onStart) {
      var onStartResult = options.onStart();
      if (onStartResult) {
        result = (0, _assign2['default'])(result, onStartResult);
      }
    }
    return result;
  };
  return promise;
}

// function processAxiosCatchResponse (err, fieldNameWrapper) {
//   return new Promise((resolve, reject) => {
//     waitUntill(
//       () => fieldNameWrapper.initialized != null,
//       () => {
//         processFailure(reject, err)
//       }
//     )
//   })
// }

function processAxiosResponse(res, options, fieldNameWrapper) {
  var data = normalizeData(options, res.data);
  return new _promise2['default'](function (resolve, reject) {
    waitUntill(function () {
      return fieldNameWrapper.initialized;
    }, function () {
      var enrichedResponse = (0, _AjaxEnricher.proccesSuccessMessage)(res, data, options);
      if (enrichedResponse.error) {
        reject(enrichedResponse.error);
      } else {
        data = enrichedResponse.data;
        var result = successToState(fieldNameWrapper.name, data);
        if (options.onSuccess) {
          var onSuccessResult = options.onSuccess(data);
          if (onSuccessResult) {
            result = (0, _assign2['default'])(result, onSuccessResult);
          }
        }
        if (options.onFinally) {
          var onFinallyResult = options.onFinally(true, data, null);
          if (onFinallyResult) {
            result = (0, _assign2['default'])(result, onFinallyResult);
          }
        }
        resolve(result);
      }
    });
  });
}

var GetAjaxAsync = function () {
  function GetAjaxAsync(options) {
    return ajaxRequest(options, true);
  }

  return GetAjaxAsync;
}();

var PostAjaxAsync = function () {
  function PostAjaxAsync(options) {
    return ajaxRequest(options, false);
  }

  return PostAjaxAsync;
}();

exports.GetAjaxAsync = GetAjaxAsync;
exports.PostAjaxAsync = PostAjaxAsync;

/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("mtWM");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getIterator2 = __webpack_require__(2);

var _getIterator3 = _interopRequireDefault(_getIterator2);

exports.addAjaxEnricher = addAjaxEnricher;
exports.proccesSuccessMessage = proccesSuccessMessage;
exports.proccesErrorMessage = proccesErrorMessage;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var ajaxEnrichers = [];

function addAjaxEnricher(enricher) {
  ajaxEnrichers.push(enricher);
}

function proccesSuccessMessage(result, data, options) {
  var currentData = data;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3["default"])(ajaxEnrichers), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var enricher = _step.value;

      var response = enricher.proccesSuccessMessage(result, currentData, options);
      if (response.error) {
        return response;
      }
      currentData = response.data;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator["return"]) {
        _iterator["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return {
    data: currentData
  };
}

function proccesErrorMessage(err, options) {
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = (0, _getIterator3["default"])(ajaxEnrichers), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var enricher = _step2.value;

      enricher.proccesErrorMessage(err, options);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2["return"]) {
        _iterator2["return"]();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }
}

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("M4fF");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setupPromiseAspectActions = exports.setupLoader = exports.languageService = exports.reducerRegistery = exports.clearLog = exports.setLogger = exports.addLog = exports.sendLogQueue = exports.AsyncCall = exports.SESSION = exports.LOCAL = exports.MEMORY = exports.isCached = exports.getCache = exports.setCache = exports.throttle = exports.debounce = exports.traceLifeCycle = exports.loader = exports.trace = exports.safe = exports.log = exports.initialstate = exports.cache = exports.aspect = exports.autobind = exports.authorize = exports.addAjaxEnricher = exports.CreateFlightstateMiddleware = exports.PostAjaxAsync = exports.GetAjaxAsync = exports.State = exports.setStore = exports.configureServerStore = exports.configureStore = undefined;

var _react = __webpack_require__(5);

var _react2 = _interopRequireDefault(_react);

var _store = __webpack_require__(27);

var _server = __webpack_require__(33);

var _server2 = _interopRequireDefault(_server);

var _reducer = __webpack_require__(9);

var _reducer2 = _interopRequireDefault(_reducer);

var _aspect = __webpack_require__(34);

var _aspect2 = _interopRequireDefault(_aspect);

var _autobind = __webpack_require__(35);

var _autobind2 = _interopRequireDefault(_autobind);

var _authorize = __webpack_require__(40);

var _authorize2 = _interopRequireDefault(_authorize);

var _cache = __webpack_require__(41);

var _cache2 = _interopRequireDefault(_cache);

var _initialstate = __webpack_require__(42);

var _initialstate2 = _interopRequireDefault(_initialstate);

var _log = __webpack_require__(43);

var _log2 = _interopRequireDefault(_log);

var _safe = __webpack_require__(44);

var _safe2 = _interopRequireDefault(_safe);

var _loader = __webpack_require__(45);

var _loader2 = _interopRequireDefault(_loader);

var _trace = __webpack_require__(47);

var _debounce = __webpack_require__(50);

var _debounce2 = _interopRequireDefault(_debounce);

var _throttle = __webpack_require__(51);

var _throttle2 = _interopRequireDefault(_throttle);

var _caching = __webpack_require__(16);

var _state = __webpack_require__(18);

var _state2 = _interopRequireDefault(_state);

var _middleware = __webpack_require__(14);

var _middleware2 = _interopRequireDefault(_middleware);

var _AjaxAsync = __webpack_require__(22);

var _AjaxEnricher = __webpack_require__(24);

var _AsyncCall = __webpack_require__(52);

var _AsyncCall2 = _interopRequireDefault(_AsyncCall);

var _logger = __webpack_require__(21);

var _languageService = __webpack_require__(53);

var _languageService2 = _interopRequireDefault(_languageService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

exports.configureStore = _store.configureStore;
exports.configureServerStore = _server2["default"];
exports.setStore = _store.setStore;
exports.State = _state2["default"];
exports.GetAjaxAsync = _AjaxAsync.GetAjaxAsync;
exports.PostAjaxAsync = _AjaxAsync.PostAjaxAsync;
exports.CreateFlightstateMiddleware = _middleware2["default"];
exports.addAjaxEnricher = _AjaxEnricher.addAjaxEnricher;
exports.authorize = _authorize2["default"];
exports.autobind = _autobind2["default"];
exports.aspect = _aspect2["default"];
exports.cache = _cache2["default"];
exports.initialstate = _initialstate2["default"];
exports.log = _log2["default"];
exports.safe = _safe2["default"];
exports.trace = _trace.trace;
exports.loader = _loader2["default"];
exports.traceLifeCycle = _trace.traceLifeCycle;
exports.debounce = _debounce2["default"];
exports.throttle = _throttle2["default"];
exports.setCache = _caching.setCache;
exports.getCache = _caching.getCache;
exports.isCached = _caching.isCached;
exports.MEMORY = _caching.MEMORY;
exports.LOCAL = _caching.LOCAL;
exports.SESSION = _caching.SESSION;
exports.AsyncCall = _AsyncCall2["default"];
exports.sendLogQueue = _logger.sendLogQueue;
exports.addLog = _logger.addLog;
exports.setLogger = _logger.setLogger;
exports.clearLog = _logger.clearLog;
exports.reducerRegistery = _reducer2["default"];
exports.languageService = _languageService2["default"];
exports.setupLoader = _loader.setupLoader;
exports.setupPromiseAspectActions = _AsyncCall.setupPromiseAspectActions;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isExternal = exports.store = undefined;

var _keys = __webpack_require__(3);

var _keys2 = _interopRequireDefault(_keys);

var _getIterator2 = __webpack_require__(2);

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _typeof2 = __webpack_require__(6);

var _typeof3 = _interopRequireDefault(_typeof2);

var _toConsumableArray2 = __webpack_require__(7);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.configureStore = configureStore;
exports.setStore = setStore;

var _redux = __webpack_require__(8);

var _reduxThunk = __webpack_require__(28);

var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

var _reducer = __webpack_require__(9);

var reducerRegistry = _interopRequireWildcard(_reducer);

var _ReducerRegistry = __webpack_require__(12);

var _ReducerRegistry2 = _interopRequireDefault(_ReducerRegistry);

var _state = __webpack_require__(17);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var store = exports.store = null;
var isExternal = exports.isExternal = false;

function configureStore(initialState, middlewares) {
  var isProduction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var reduxRouterMiddleware = arguments[3];

  var storeMiddleware = [_reduxThunk2['default']].concat((0, _toConsumableArray3['default'])(middlewares), [reduxRouterMiddleware, (0, _state.CreateFlightstateMiddleware)()]);
  var createStoreWithMiddleware = _redux.applyMiddleware.apply(this, storeMiddleware)(_redux.createStore);
  var reducerList = reducerRegistry['default'].getReducers();
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3['default'])((0, _keys2['default'])(reducerList)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var reducerName = _step.value;

      _ReducerRegistry2['default'].injectReducer(reducerName, reducerList[reducerName]);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator['return']) {
        _iterator['return']();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  var rootReducer = reducerRegistry['default'].configureReducers(_ReducerRegistry2['default'].getReducers());
  var composeEnhancers = window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : _redux.compose;
  exports.store = store = isProduction || (typeof window === 'undefined' ? 'undefined' : (0, _typeof3['default'])(window)) === 'object' && typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'undefined' ? createStoreWithMiddleware(rootReducer, initialState) : createStoreWithMiddleware(rootReducer, initialState, composeEnhancers(function (f) {
    return f;
  }));
  reducerRegistry['default'].setStore(store);
  reducerRegistry['default'].setChangeListener(function (reducers) {
    var newrootReducer = reducerRegistry['default'].configureReducers(reducers);
    store.replaceReducer(newrootReducer);
  });
  return store;
}

function setStore(external_store) {
  exports.store = store = external_store;
  exports.isExternal = isExternal = true;
}

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("bEzl");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("BUAs");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addAction = addAction;
exports.removeAction = removeAction;
var Actions = {};

exports["default"] = Actions;
function addAction(actionName, action) {
  // Make sure the name is unique
  if (Actions[actionName]) {
    throw new Error("An action called \"" + actionName + "\" already exists! Please pick another name!");
  }
  Actions[actionName] = function (payload) {
    return action(payload);
  };
}

function removeAction(actionName) {
  delete Actions[actionName];
}

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = promiseWrapper;
function wrap(ctx, wrapper, errorFn, catchResult) {
  var result = {
    then: function () {
      function then(fn) {
        var newCtx = ctx.then(fn);
        return wrap(newCtx, wrapper, errorFn, catchResult);
      }

      return then;
    }(),
    "finally": function () {
      function _finally(fn) {
        var newCtx = ctx["finally"](fn);
        return wrap(newCtx, wrapper, errorFn, catchResult);
      }

      return _finally;
    }(),
    "catch": function () {
      function _catch(fn) {
        wrapper.registeredErrorFn = fn;

        if (wrapper.errorReceived) {
          errorFn(wrapper.error);
        }

        return catchResult;
      }

      return _catch;
    }()
  };

  return result;
}

function promiseWrapper(promise) {
  var wrapper = {
    registeredErrorFn: null,
    errorReceived: false,
    error: null
  };

  var errorFn = function () {
    function errorFn(err) {
      if (wrapper.registeredErrorFn) {
        wrapper.registeredErrorFn(err);
      }

      wrapper.error = err;
      wrapper.errorReceived = true;
    }

    return errorFn;
  }();

  var catchResult = promise["catch"](errorFn);
  return wrap(catchResult, wrapper, errorFn, catchResult);
}

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("zmAe");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = __webpack_require__(3);

var _keys2 = _interopRequireDefault(_keys);

var _getIterator2 = __webpack_require__(2);

var _getIterator3 = _interopRequireDefault(_getIterator2);

exports["default"] = configureServerStore;

var _redux = __webpack_require__(8);

var _reducer = __webpack_require__(9);

var reducerRegistry = _interopRequireWildcard(_reducer);

var _ReducerRegistry = __webpack_require__(12);

var _ReducerRegistry2 = _interopRequireDefault(_ReducerRegistry);

var _state = __webpack_require__(17);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function configureServerStore(initialState) {
  var storeMiddleware = [(0, _state.CreateFlightstateMiddleware)()];
  var createStoreWithMiddleware = _redux.applyMiddleware.apply(this, storeMiddleware)(_redux.createStore);
  var reducerList = reducerRegistry["default"].getReducers();
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3["default"])((0, _keys2["default"])(reducerList)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var reducerName = _step.value;

      _ReducerRegistry2["default"].injectReducer(reducerName, reducerList[reducerName]);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator["return"]) {
        _iterator["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  var rootReducer = reducerRegistry["default"].configureReducers(_ReducerRegistry2["default"].getReducers());
  var store = createStoreWithMiddleware(rootReducer, initialState);
  reducerRegistry["default"].setStore(store);
  reducerRegistry["default"].setChangeListener(function (reducers) {
    var newrootReducer = reducerRegistry["default"].configureReducers(reducers);
    store.replaceReducer(newrootReducer);
  });
  return store;
}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports["default"] = aspect;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function aspect(_ref) {
    var preCallback = _ref.preCallback,
        posCallback = _ref.posCallback;

    return function (target, key, descriptor) {
        var userFunc = descriptor.value;
        return (0, _extends3["default"])({}, descriptor, {
            value: function () {
                function value() {
                    if (preCallback && typeof preCallback === "function") preCallback();

                    for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
                        params[_key] = arguments[_key];
                    }

                    var result = userFunc.apply(this, [].concat(params));
                    if (posCallback && typeof posCallback === "function") posCallback();
                    return result;
                }

                return value;
            }()
        });
    };
}

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__(6);

var _typeof3 = _interopRequireDefault(_typeof2);

var _defineProperty = __webpack_require__(4);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _getOwnPropertyDescriptor = __webpack_require__(36);

var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

var _getOwnPropertySymbols = __webpack_require__(37);

var _getOwnPropertySymbols2 = _interopRequireDefault(_getOwnPropertySymbols);

var _getOwnPropertyNames = __webpack_require__(38);

var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

var _ownKeys = __webpack_require__(39);

var _ownKeys2 = _interopRequireDefault(_ownKeys);

exports['default'] = autobind;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function autobind() {
  if (arguments.length === 1) {
    return boundClass.apply(undefined, arguments);
  } else {
    return boundMethod.apply(undefined, arguments);
  }
}

function boundClass(target) {
  // (Using reflect to get all keys including symbols)
  var keys = void 0;
  // Use Reflect if exists
  if (typeof Reflect !== 'undefined' && typeof _ownKeys2['default'] === 'function') {
    keys = (0, _ownKeys2['default'])(target.prototype);
  } else {
    keys = (0, _getOwnPropertyNames2['default'])(target.prototype);
    // use symbols if support is provided
    if (typeof _getOwnPropertySymbols2['default'] === 'function') {
      keys = keys.concat((0, _getOwnPropertySymbols2['default'])(target.prototype));
    }
  }

  keys.forEach(function (key) {
    // Ignore special case target method
    if (key === 'constructor') {
      return;
    }

    var descriptor = (0, _getOwnPropertyDescriptor2['default'])(target.prototype, key);

    // Only methods need binding
    if (typeof descriptor.value === 'function') {
      (0, _defineProperty2['default'])(target.prototype, key, boundMethod(target, key, descriptor));
    }
  });
  return target;
}

function boundMethod(target, key, descriptor) {
  var fn = descriptor.value;

  if (typeof fn !== 'function') {
    throw new Error('@autobind decorator can only be applied to methods not: ' + (typeof fn === 'undefined' ? 'undefined' : (0, _typeof3['default'])(fn)));
  }

  // In IE11 calling Object.defineProperty has a side-effect of evaluating the
  // getter for the property which is being replaced. This causes infinite
  // recursion and an "Out of stack space" error.
  var definingProperty = false;

  return {
    configurable: true,
    get: function () {
      function get() {
        if (definingProperty || this === target.prototype || this.hasOwnProperty(key) || typeof fn !== 'function') {
          return fn;
        }

        var boundFn = fn.bind(this);
        definingProperty = true;
        (0, _defineProperty2['default'])(this, key, {
          configurable: true,
          get: function () {
            function get() {
              return boundFn;
            }

            return get;
          }(),
          set: function () {
            function set(value) {
              fn = value;
              delete this[key];
            }

            return set;
          }()
        });
        definingProperty = false;
        return boundFn;
      }

      return get;
    }(),
    set: function () {
      function set(value) {
        fn = value;
      }

      return set;
    }()
  };
}

/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("K6ED");

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("8hRR");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("aFK5");

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("x4/c");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = authorize;
function authorize(keys) {
  return function (target, key, descriptor) {
    //change target prototype to not render if not authorized
  };
}

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = __webpack_require__(19);

var _stringify2 = _interopRequireDefault(_stringify);

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports['default'] = cache;

var _md = __webpack_require__(20);

var _md2 = _interopRequireDefault(_md);

var _caching = __webpack_require__(16);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var CacheTypes = {
  'memory': memoize,
  'local': localStorageCache,
  'session': sessionStorageCache
};

function cache(type) {
  var _this = this;

  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _caching.defaultTimeout;

  return function (target, key, descriptor) {
    var oldFunction = descriptor.value;
    return (0, _extends3['default'])({}, descriptor, {
      value: CacheTypes[type] ? CacheTypes[type].bind(_this, target, key, timeout, oldFunction) : CacheTypes[_caching.MEMORY].bind(_this, target, key, timeout, oldFunction)
    });
  };
}

function createCacheKey() {
  return (0, _md2['default'])((0, _stringify2['default'])(arguments));
}

function memoize(target, key, timeout, oldFunction) {
  for (var _len = arguments.length, args = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
    args[_key - 4] = arguments[_key];
  }

  var cacheKey = createCacheKey.apply(undefined, [target.constructor.name, key].concat(args));
  if (!(0, _caching.isCached)(cacheKey)) {
    var now = new Date();
    var functionResult = oldFunction.apply(target, args);
    (0, _caching.setCache)(cacheKey, { created: now, value: functionResult });
    return functionResult;
  } else {
    var returnedData = (0, _caching.getCache)(cacheKey);
    var _now = new Date();
    if (_now.getTime() > returnedData.created.getTime() + timeout) {
      var _functionResult = oldFunction.apply(target, args);
      (0, _caching.setCache)(cacheKey, { created: _now, value: _functionResult });
      return _functionResult;
    } else {
      return returnedData.value;
    }
  }
  return (0, _caching.getCache)(cacheKey).value;
}

function localStorageCache(target, key, timeout, oldFunction) {
  for (var _len2 = arguments.length, args = Array(_len2 > 4 ? _len2 - 4 : 0), _key2 = 4; _key2 < _len2; _key2++) {
    args[_key2 - 4] = arguments[_key2];
  }

  if (window && window.localStorage) {
    var cacheKey = createCacheKey.apply(undefined, [target.constructor.name, key].concat(args));
    if (!(0, _caching.isCached)(cacheKey, _caching.LOCAL)) {
      var _now2 = new Date();
      var functionResult = oldFunction.apply(target, args);
      (0, _caching.setCache)(cacheKey, (0, _stringify2['default'])({ created: _now2, value: functionResult }), _caching.LOCAL);
      return functionResult;
    } else {
      var returnedData = JSON.parse((0, _caching.getCache)(cacheKey, _caching.LOCAL));
      var now = new Date();
      if (now.getTime() > new Date(returnedData.created).getTime() + timeout) {
        var _functionResult2 = oldFunction.apply(target, args);
        (0, _caching.setCache)(cacheKey, (0, _stringify2['default'])({ value: _functionResult2, created: new Date() }), _caching.LOCAL);
        return _functionResult2;
      } else {
        return returnedData.value;
      }
    }
  }
  return oldFunction.apply(target, args);
}

function sessionStorageCache(target, key, timeout, oldFunction) {
  for (var _len3 = arguments.length, args = Array(_len3 > 4 ? _len3 - 4 : 0), _key3 = 4; _key3 < _len3; _key3++) {
    args[_key3 - 4] = arguments[_key3];
  }

  if (window && window.sessionStorage) {
    var cacheKey = createCacheKey.apply(undefined, [target.constructor.name, key].concat(args));
    if (!(0, _caching.isCached)(cacheKey, _caching.SESSION)) {
      var functionResult = oldFunction.apply(target, args);
      (0, _caching.setCache)(cacheKey, (0, _stringify2['default'])({ value: functionResult }), _caching.SESSION);
      return functionResult;
    }
    return JSON.parse((0, _caching.getCache)(cacheKey, _caching.SESSION)).value;
  }
  return oldFunction.apply(target, args);
}

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = initialState;
function initialState(state) {
  return function (target) {
    target.prototype.state = state;
  };
}

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports['default'] = log;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function log(target, key, descriptor) {
  var userFunc = descriptor.value;
  return (0, _extends3['default'])({}, descriptor, {
    value: function () {
      function proxyForLogger() {
        if (typeof console !== 'undefined' && typeof console.group !== 'undefined') {
          for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
            params[_key] = arguments[_key];
          }

          // console.log(performance.timing)
          //console.group(this.constructor.name + '.' + key)
          //console.log('Params : ', ...params)
          var result = userFunc.apply(this, [].concat(params));
          //eslint-disable-next-line
          //console.log(`Response : `, result ? result : " ")
          //eslint-disable-next-line
          //console.groupEnd()
          return result;
        }
      }

      return proxyForLogger;
    }()
  });
}

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports['default'] = safe;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function safe(target, key, descriptor) {
  var userFunc = descriptor.value;
  return (0, _extends3['default'])({}, descriptor, {
    value: function () {
      function proxyForLogger() {
        try {
          for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
            params[_key] = arguments[_key];
          }

          return userFunc.apply(this, [].concat(params));
        } catch (ex) {
          if (typeof console !== 'undefined' && typeof console.group !== 'undefined') console.error(ex);
        }
      }

      return proxyForLogger;
    }()
  });
}

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _promise = __webpack_require__(1);

var _promise2 = _interopRequireDefault(_promise);

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports["default"] = loader;
exports.setupLoader = setupLoader;

var _utils = __webpack_require__(46);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var loaderConfig = {
    showLoader: null,
    hideLoader: null
};

function loader() {
    return function (target, key, descriptor) {
        var userFunc = descriptor.value;
        return (0, _extends3["default"])({}, descriptor, {
            value: function () {
                function value() {
                    var _this = this;

                    for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
                        params[_key] = arguments[_key];
                    }

                    var _loaderConfig = loaderConfig,
                        showLoader = _loaderConfig.showLoader,
                        hideLoader = _loaderConfig.hideLoader;

                    if (showLoader && (0, _utils.isPromise)(showLoader) && hideLoader && (0, _utils.isPromise)(hideLoader)) showLoader().then(function () {
                        if ((0, _utils.isPromise)(userFunc)) return new _promise2["default"](function (resolve, reject) {
                            userFunc.apply(_this, [].concat(params)).then(function (result) {
                                hideLoader().then(function () {
                                    resolve(result);
                                });
                            })["catch"](function (result) {
                                reject(result);
                            });
                        });else {
                            var result = userFunc.apply(_this, [].concat(params));
                            return new _promise2["default"](function (resolve, reject) {
                                hideLoader().then(function () {
                                    resolve(result);
                                });
                            });
                        }
                    });else return new _promise2["default"](function (resolve, reject) {
                        resolve(userFunc.apply(_this, [].concat(params)));
                    });
                }

                return value;
            }()
        });
    };
}

function setupLoader(config) {
    loaderConfig = (0, _extends3["default"])({}, loaderConfig, config);
}

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _promise = __webpack_require__(1);

var _promise2 = _interopRequireDefault(_promise);

exports.isPromise = isPromise;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function isPromise(obj) {
    return _promise2["default"].resolve(obj) == obj;
}

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty = __webpack_require__(4);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports.trace = trace;
exports.traceLifeCycle = traceLifeCycle;

var _logger = __webpack_require__(21);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var proxyForLogger = "proxyForLogger";

function trace(target, key, descriptor) {
  var userFunc = descriptor.value;
  var proxyForLoggerFunc = function () {
    function proxyForLoggerFunc() {
      var start = performance.now();

      for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {
        params[_key] = arguments[_key];
      }

      var result = userFunc.apply(this, [].concat(params));
      var end = performance.now();
      var elapsed = end - start;
      (0, _logger.addLog)({
        //"RequestId": "?",
        "StartTime": start,
        "EndTime": end,
        "ElapsedTime": elapsed,
        "Name": this.displayName
        //"Detail": "Trace of Bapp"
      });
      //eslint-disable-next-line
      return result;
    }

    return proxyForLoggerFunc;
  }();
  Object.defineProperty(proxyForLoggerFunc, 'name', { value: proxyForLogger, writable: true });
  return (0, _extends3["default"])({}, descriptor, {
    value: proxyForLoggerFunc
  });
}

function traceLifeCycle(target, key) {
  if (target.__proto__ && target.__proto__[key] && !(target.__proto__[key].name === proxyForLogger)) {
    var _trace = trace(target.__proto__[key].prototype, key, {
      configurable: true,
      enumerable: false,
      value: target.__proto__[key],
      writable: true
    });

    (0, _defineProperty2["default"])(target.__proto__, key, _trace);
  }
}

/***/ }),
/* 48 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("bOdI");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loggerOptions = exports.logQueue = undefined;

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports.setLoggerAction = setLoggerAction;
exports.addLogPromise = addLogPromise;
exports.clearLogPromise = clearLogPromise;
exports.attachUnloadEvent = attachUnloadEvent;
exports.createTimer = createTimer;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var logQueue = exports.logQueue = [];
var loggerOptions = exports.loggerOptions = {
    queueLimit: 100,
    setOnUnload: false,
    setOnInterval: false,
    loggerConfig: {},
    tokenConfig: {}
};

function setLoggerAction(props, sendLog) {
    exports.loggerOptions = loggerOptions = (0, _extends3["default"])({}, loggerOptions, props);
    if (loggerOptions.setOnUnload) attachUnloadEvent(sendLog);
    if (loggerOptions.setOnInterval) createTimer(loggerOptions.interval, sendLog);
}

function addLogPromise(log, sendLog) {
    logQueue.push(log);
    if (logQueue.length >= loggerOptions.queueLimit) {
        sendLog();
    }
}

function clearLogPromise(logs) {
    logs = [];
    exports.logQueue = logQueue = [];
}

function attachUnloadEvent(sendLog) {
    if (typeof window !== "undefined") {
        var attacher = window.addEventListener || window.attachEvent;
        var eventName = (window.addEventListener ? "on" : "") + "beforeunload";
        attacher(eventName, function () {
            sendLog();
        });
    }
}

function createTimer() {
    var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60000;
    var sendLog = arguments[1];

    if (typeof window !== "undefined") window.setInterval(function () {
        sendLog();
    }, interval);
}

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty = __webpack_require__(4);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _lodash = __webpack_require__(25);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function debounce(wait) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return function (target, name, descriptor) {
        return {
            configurable: true,
            enumerable: descriptor.enumerable,
            get: function () {
                function get() {
                    (0, _defineProperty2["default"])(this, name, {
                        configurable: true,
                        enumerable: descriptor.enumerable,
                        value: (0, _lodash.debounce)(descriptor.value, wait, options)
                    });

                    return this[name];
                }

                return get;
            }()
        };
    };
}

exports["default"] = debounce;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty = __webpack_require__(4);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _lodash = __webpack_require__(25);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function throttle(wait) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return function (target, name, descriptor) {
        return {
            configurable: true,
            enumerable: descriptor.enumerable,
            get: function () {
                function get() {
                    (0, _defineProperty2["default"])(this, name, {
                        configurable: true,
                        enumerable: descriptor.enumerable,
                        value: (0, _lodash.throttle)(descriptor.value, wait, options)
                    });

                    return this[name];
                }

                return get;
            }()
        };
    };
}

exports["default"] = throttle;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = __webpack_require__(13);

var _assign2 = _interopRequireDefault(_assign);

var _promise = __webpack_require__(1);

var _promise2 = _interopRequireDefault(_promise);

var _extends2 = __webpack_require__(0);

var _extends3 = _interopRequireDefault(_extends2);

exports.setupPromiseAspectActions = setupPromiseAspectActions;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var promiseAspectActions = {
  beforePromiseAction: null,
  afterPromiseAction: null
};

function setupPromiseAspectActions(config) {
  promiseAspectActions = (0, _extends3["default"])({}, promiseAspectActions, config);
}

var AsyncCall = function () {
  function AsyncCall(options) {
    var promise = new _promise2["default"](function (resolve, reject) {
      var successCallback = options.onSuccess ? options.onSuccess : function () {};
      var errorCallback = options.onError ? options.onError : function () {};
      var postData = options.data || {};

      var asyncCallback = function () {
        function asyncCallback(data) {
          var result = {};
          if (promiseAspectActions.afterPromiseAction && typeof promiseAspectActions.afterPromiseAction === "function") promiseAspectActions.afterPromiseAction(options);
          if (data) {
            var successResult = successCallback();
            result = (0, _assign2["default"])(result, successResult);
            if (options.onFinally) {
              var onFinally = options.onFinally();
              result = (0, _assign2["default"])(result, onFinally);
            }
            resolve(result);
          } else {
            var errorResult = errorCallback();
            result = (0, _assign2["default"])(result, errorResult);
            if (options.onFinally) {
              var _onFinally = options.onFinally();
              result = (0, _assign2["default"])(result, _onFinally);
            }
            reject(result);
          }
        }

        return asyncCallback;
      }();

      options.func(asyncCallback, postData);
    });

    promise.onStart = function (state, fieldPath, initialState) {
      var result = {};
      if (promiseAspectActions.beforePromiseAction && typeof promiseAspectActions.beforePromiseAction === "function") promiseAspectActions.beforePromiseAction(options);
      if (options.onStart) {
        var onStartResult = options.onStart();
        if (onStartResult) {
          result = (0, _assign2["default"])(result, onStartResult);
        }
      }
      return result;
    };

    return promise;
  }

  return AsyncCall;
}();

exports["default"] = AsyncCall;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(10);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(11);

var _createClass3 = _interopRequireDefault(_createClass2);

var _merge = __webpack_require__(54);

var _merge2 = _interopRequireDefault(_merge);

var _action = __webpack_require__(55);

var _action2 = _interopRequireDefault(_action);

var _sprintfJs = __webpack_require__(56);

var _GetterSetterUtils = __webpack_require__(15);

var _GetterSetterUtils2 = _interopRequireDefault(_GetterSetterUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var LanguageService = function () {
    function LanguageService() {
        (0, _classCallCheck3['default'])(this, LanguageService);

        this.groupCache = { 'tr-TR': {}, 'en-US': {} };
        this.langDic = { 'tr-TR': {}, 'en-US': {} };
        this.currentLang = 'tr-TR';
    }

    (0, _createClass3['default'])(LanguageService, [{
        key: 'changeLanguage',
        value: function () {
            function changeLanguage(newLang) {
                this.currentLang = newLang;
            }

            return changeLanguage;
        }()
    }, {
        key: 'routeMatchRule',
        value: function () {
            function routeMatchRule(route, routeGroup) {
                return new RegExp("^" + routeGroup.split("*").join(".*") + "$").test(route);
            }

            return routeMatchRule;
        }()
    }, {
        key: 'assignInitialSet',
        value: function () {
            function assignInitialSet(initialLang, initialSet) {
                this.currentLang = initialLang;
                for (var langObj in initialSet) {
                    for (var groupObj in initialSet[langObj]) {
                        if (this.groupCache[langObj] && this.groupCache[langObj][groupObj]) {
                            continue;
                        } else {
                            if (!this.groupCache[langObj]) {
                                this.groupCache[langObj] = {};
                            }
                            this.groupCache[langObj][groupObj] = {
                                isUpdatedAlready: true,
                                hash: initialSet[langObj][groupObj].hash
                            };
                            (0, _merge2['default'])(this.langDic[langObj], initialSet[langObj][groupObj]);
                        }
                    }
                }
            }

            return assignInitialSet;
        }()
    }, {
        key: 'acquireGroupSets',
        value: function () {
            function acquireGroupSets(groups, transactionUrl, nextAction, errorAction) {
                var unCachedGroups = [];
                for (var i = 0; i < groups.length; i++) {
                    if (this.groupCache[this.currentLang] && this.groupCache[this.currentLang][groups[i]] && this.groupCache[this.currentLang][groups[i]].isUpdatedAlready) {
                        continue;
                    } else {
                        unCachedGroups.push(groups[i]);
                    }
                }
                if (unCachedGroups.length > 0) {
                    var dataValues = {
                        NextTransactionUrl: transactionUrl,
                        Language: this.currentLang,
                        GroupNames: unCachedGroups
                    };
                    var request = {
                        url: this.serviceUrl,
                        data: dataValues,
                        headers: {}, method: 'POST'
                    };
                    var promise = (0, _action2['default'])(request);
                    var that = this;
                    promise.then(function (response) {
                        if (response.ErrorCode) {
                            errorAction(response);
                        } else {
                            if (!that.groupCache[that.currentLang]) {
                                that.groupCache[that.currentLang] = {};
                                that.langDic[that.currentLang] = {};
                            }
                            for (var _i = 0; _i < unCachedGroups.length; _i++) {
                                (0, _merge2['default'])(that.langDic[that.currentLang], response);
                                that.groupCache[that.currentLang][unCachedGroups[_i]] = true;
                            }
                            nextAction();
                        }
                    });
                    promise['catch'](function (error) {
                        errorAction(error);
                    });
                } else {
                    nextAction();
                }
            }

            return acquireGroupSets;
        }()
    }, {
        key: 'query',
        value: function () {
            function query() {
                return this.langDic[this.currentLang];
            }

            return query;
        }()
    }, {
        key: 'translate',
        value: function () {
            function translate(key, args) {
                return (0, _sprintfJs.sprintf)(_GetterSetterUtils2['default'].dottedObjectGetter(this.query(), key), args);
            }

            return translate;
        }()
    }, {
        key: 'url',
        get: function () {
            function get() {
                return this.serviceUrl;
            }

            return get;
        }(),
        set: function () {
            function set(value) {
                this.serviceUrl = value;
            }

            return set;
        }()
    }]);
    return LanguageService;
}();

var languageService = new LanguageService();
exports['default'] = languageService;

/***/ }),
/* 54 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("HN2V");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _promise = __webpack_require__(1);

var _promise2 = _interopRequireDefault(_promise);

var _axios = __webpack_require__(23);

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var client = _axios2['default'].create();
var serviceCall = function () {
    function serviceCall(options) {
        var onSuccess = function () {
            function onSuccess(response) {
                return response.data;
            }

            return onSuccess;
        }();

        var onError = function () {
            function onError(error) {
                return _promise2['default'].reject(error.response || error.message);
            }

            return onError;
        }();

        return client(options).then(onSuccess)['catch'](onError);
    }

    return serviceCall;
}();
exports['default'] = serviceCall;

/***/ }),
/* 56 */
/***/ (function(module, exports) {

module.exports = __webpack_require__("0XFg");

/***/ })
/******/ ]);
});

/***/ }),

/***/ "Vd7I":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _reactRouterDom = __webpack_require__("F8kA");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _grid = __webpack_require__("MI+p");

var _grid2 = _interopRequireDefault(_grid);

var _row = __webpack_require__("J+e6");

var _row2 = _interopRequireDefault(_row);

var _col = __webpack_require__("CUvw");

var _col2 = _interopRequireDefault(_col);

var _initialinfo = __webpack_require__("tP4Q");

var _initialinfo2 = _interopRequireDefault(_initialinfo);

var _smsotp = __webpack_require__("PIm+");

var _smsotp2 = _interopRequireDefault(_smsotp);

var _kimlikbilgileri = __webpack_require__("NmPj");

var _kimlikbilgileri2 = _interopRequireDefault(_kimlikbilgileri);

var _ekbilgiler = __webpack_require__("2/Fb");

var _ekbilgiler2 = _interopRequireDefault(_ekbilgiler);

var _branchselection = __webpack_require__("B0QY");

var _branchselection2 = _interopRequireDefault(_branchselection);

var _ = __webpack_require__("xWJd");

var _2 = _interopRequireDefault(_);

__webpack_require__("Rjmx");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DetailsPage = function (_BappBase) {
  _inherits(DetailsPage, _BappBase);

  function DetailsPage(props) {
    _classCallCheck(this, DetailsPage);

    return _possibleConstructorReturn(this, (DetailsPage.__proto__ || Object.getPrototypeOf(DetailsPage)).call(this, props));
  }

  _createClass(DetailsPage, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        { className: "details-page-wrapper" },
        _react2.default.createElement(
          _grid2.default,
          { type: "section" },
          _react2.default.createElement(
            _row2.default,
            null,
            _react2.default.createElement(
              _col2.default,
              { xs: 12, sm: 12, md: 10, lg: 10, xl: 10, mdOffset: 1, lgOffset: 1, xlOffset: 1 },
              _react2.default.createElement(
                _reactRouterDom.Switch,
                null,
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/details/initialinfo", component: _initialinfo2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/details/smsotp", component: _smsotp2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/details/kimlikbilgileri", component: _kimlikbilgileri2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/details/ekbilgiler", component: _ekbilgiler2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/details/branchselection", component: _branchselection2.default }),
                _react2.default.createElement(_reactRouterDom.Route, { component: _2.default })
              )
            )
          )
        )
      );
    }
  }]);

  return DetailsPage;
}(_webcore.BappBase);

function mapStateToProps(state, ownProps) {
  return {};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(DetailsPage);

/***/ }),

/***/ "Vflq":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* DEPRECATED */

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = __webpack_require__("GiK3");
var ReactDOM = __webpack_require__("O27J");

var utils = __webpack_require__("ECVE");
var scrollSpy = __webpack_require__("iox6");
var defaultScroller = __webpack_require__("ak1w");
var PropTypes = __webpack_require__("KSGD");
var scrollHash = __webpack_require__("0v1V");

var protoTypes = {
  to: PropTypes.string.isRequired,
  containerId: PropTypes.string,
  container: PropTypes.object,
  activeClass: PropTypes.string,
  spy: PropTypes.bool,
  smooth: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
  offset: PropTypes.number,
  delay: PropTypes.number,
  isDynamic: PropTypes.bool,
  onClick: PropTypes.func,
  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),
  absolute: PropTypes.bool,
  onSetActive: PropTypes.func,
  onSetInactive: PropTypes.func,
  ignoreCancelEvents: PropTypes.bool,
  hashSpy: PropTypes.bool,
  spyThrottle: PropTypes.number
};

var Helpers = {
  Scroll: function Scroll(Component, customScroller) {

    console.warn("Helpers.Scroll is deprecated since v1.7.0");

    var scroller = customScroller || defaultScroller;

    var Scroll = function (_React$Component) {
      _inherits(Scroll, _React$Component);

      function Scroll(props) {
        _classCallCheck(this, Scroll);

        var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, props));

        _initialiseProps.call(_this);

        _this.state = {
          active: false
        };
        return _this;
      }

      _createClass(Scroll, [{
        key: 'getScrollSpyContainer',
        value: function getScrollSpyContainer() {
          var containerId = this.props.containerId;
          var container = this.props.container;

          if (containerId) {
            return document.getElementById(containerId);
          }

          if (container && container.nodeType) {
            return container;
          }

          return document;
        }
      }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
          if (this.props.spy || this.props.hashSpy) {
            var scrollSpyContainer = this.getScrollSpyContainer();

            if (!scrollSpy.isMounted(scrollSpyContainer)) {
              scrollSpy.mount(scrollSpyContainer, this.props.spyThrottle);
            }

            if (this.props.hashSpy) {
              if (!scrollHash.isMounted()) {
                scrollHash.mount(scroller);
              }
              scrollHash.mapContainer(this.props.to, scrollSpyContainer);
            }

            if (this.props.spy) {
              scrollSpy.addStateHandler(this.stateHandler);
            }

            scrollSpy.addSpyHandler(this.spyHandler, scrollSpyContainer);

            this.setState({
              container: scrollSpyContainer
            });
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          scrollSpy.unmount(this.stateHandler, this.spyHandler);
        }
      }, {
        key: 'render',
        value: function render() {
          var className = "";

          if (this.state && this.state.active) {
            className = ((this.props.className || "") + " " + (this.props.activeClass || "active")).trim();
          } else {
            className = this.props.className;
          }

          var props = _extends({}, this.props);

          for (var prop in protoTypes) {
            if (props.hasOwnProperty(prop)) {
              delete props[prop];
            }
          }

          props.className = className;
          props.onClick = this.handleClick;

          return React.createElement(Component, props);
        }
      }]);

      return Scroll;
    }(React.Component);

    var _initialiseProps = function _initialiseProps() {
      var _this2 = this;

      this.scrollTo = function (to, props) {
        scroller.scrollTo(to, _extends({}, _this2.state, props));
      };

      this.handleClick = function (event) {

        /*
         * give the posibility to override onClick
         */

        if (_this2.props.onClick) {
          _this2.props.onClick(event);
        }

        /*
         * dont bubble the navigation
         */

        if (event.stopPropagation) event.stopPropagation();
        if (event.preventDefault) event.preventDefault();

        /*
         * do the magic!
         */
        _this2.scrollTo(_this2.props.to, _this2.props);
      };

      this.stateHandler = function () {
        if (scroller.getActiveLink() !== _this2.props.to) {
          if (_this2.state !== null && _this2.state.active && _this2.props.onSetInactive) {
            _this2.props.onSetInactive();
          }
          _this2.setState({ active: false });
        }
      };

      this.spyHandler = function (y) {

        var scrollSpyContainer = _this2.getScrollSpyContainer();

        if (scrollHash.isMounted() && !scrollHash.isInitialized()) {
          return;
        }

        var to = _this2.props.to;
        var element = null;
        var elemTopBound = 0;
        var elemBottomBound = 0;
        var containerTop = 0;

        if (scrollSpyContainer.getBoundingClientRect) {
          var containerCords = scrollSpyContainer.getBoundingClientRect();
          containerTop = containerCords.top;
        }

        if (!element || _this2.props.isDynamic) {
          element = scroller.get(to);
          if (!element) {
            return;
          }

          var cords = element.getBoundingClientRect();
          elemTopBound = cords.top - containerTop + y;
          elemBottomBound = elemTopBound + cords.height;
        }

        var offsetY = y - _this2.props.offset;
        var isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);
        var isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);
        var activeLink = scroller.getActiveLink();

        if (isOutside) {
          if (to === activeLink) {
            scroller.setActiveLink(void 0);
          }

          if (_this2.props.hashSpy && scrollHash.getHash() === to) {
            scrollHash.changeHash();
          }

          if (_this2.props.spy && _this2.state.active) {
            _this2.setState({ active: false });
            _this2.props.onSetInactive && _this2.props.onSetInactive();
          }

          return scrollSpy.updateStates();
        }

        if (isInside && activeLink !== to) {
          scroller.setActiveLink(to);

          _this2.props.hashSpy && scrollHash.changeHash(to);

          if (_this2.props.spy) {
            _this2.setState({ active: true });
            _this2.props.onSetActive && _this2.props.onSetActive(to);
          }
          return scrollSpy.updateStates();
        }
      };
    };

    ;

    Scroll.propTypes = protoTypes;

    Scroll.defaultProps = { offset: 0 };

    return Scroll;
  },
  Element: function Element(Component) {

    console.warn("Helpers.Element is deprecated since v1.7.0");

    var Element = function (_React$Component2) {
      _inherits(Element, _React$Component2);

      function Element(props) {
        _classCallCheck(this, Element);

        var _this3 = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this, props));

        _this3.childBindings = {
          domNode: null
        };
        return _this3;
      }

      _createClass(Element, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
          if (typeof window === 'undefined') {
            return false;
          }
          this.registerElems(this.props.name);
        }
      }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate(prevProps) {
          if (this.props.name !== prevProps.name) {
            this.registerElems(this.props.name);
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          if (typeof window === 'undefined') {
            return false;
          }
          defaultScroller.unregister(this.props.name);
        }
      }, {
        key: 'registerElems',
        value: function registerElems(name) {
          defaultScroller.register(name, this.childBindings.domNode);
        }
      }, {
        key: 'render',
        value: function render() {
          return React.createElement(Component, _extends({}, this.props, { parentBindings: this.childBindings }));
        }
      }]);

      return Element;
    }(React.Component);

    ;

    Element.propTypes = {
      name: PropTypes.string,
      id: PropTypes.string
    };

    return Element;
  }
};

module.exports = Helpers;

/***/ }),

/***/ "WCHC":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "WCkl":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "WQ+4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__("O27J");

var _reactDom2 = _interopRequireDefault(_reactDom);

var _scroller = __webpack_require__("ak1w");

var _scroller2 = _interopRequireDefault(_scroller);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = function (Component) {
  var Element = function (_React$Component) {
    _inherits(Element, _React$Component);

    function Element(props) {
      _classCallCheck(this, Element);

      var _this = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this, props));

      _this.childBindings = {
        domNode: null
      };
      return _this;
    }

    _createClass(Element, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (typeof window === 'undefined') {
          return false;
        }
        this.registerElems(this.props.name);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (this.props.name !== prevProps.name) {
          this.registerElems(this.props.name);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (typeof window === 'undefined') {
          return false;
        }
        _scroller2.default.unregister(this.props.name);
      }
    }, {
      key: 'registerElems',
      value: function registerElems(name) {
        _scroller2.default.register(name, this.childBindings.domNode);
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(Component, _extends({}, this.props, { parentBindings: this.childBindings }));
      }
    }]);

    return Element;
  }(_react2.default.Component);

  ;

  Element.propTypes = {
    name: _propTypes2.default.string,
    id: _propTypes2.default.string
  };

  return Element;
};

/***/ }),

/***/ "WoYp":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "assets/captcha-error.svg";

/***/ }),

/***/ "YnjH":
/***/ (function(module, exports) {

module.exports = {"Menu":{"HeaderText":"Root","SummaryText":"","IconName":"","ClickedIconName":"","Url":"","IsNew":false,"SubItems":[{"HeaderText":"Genel BankacÄ±lÄ±k","SummaryText":"Detaylar iÃ§in tÄ±klayÄ±nÄ±z","IconName":"everyday-banking","ClickedIconName":"everyday-banking","Url":"auth/dashboards/retail","IsNew":false,"SubItems":[{"HeaderText":"HesaplarÄ±m&KartlarÄ±m","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/accounts/accountslanding","IsNew":false,"SubItems":[]},{"HeaderText":"VarlÄ±klarÄ±m","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/everydaybanking/assets","IsNew":false,"SubItems":[]},{"HeaderText":"Transferler","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/transfers/transferlanding","IsNew":true,"SubItems":[]},{"HeaderText":"Ãdemelerim","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/payments/paymentlanding","IsNew":false,"SubItems":[]},{"HeaderText":"Hesap AÃ§Ä±lÄ±ÅlarÄ±","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/accounts/accopeninglanding","IsNew":true,"SubItems":[]}]},{"HeaderText":"YatÄ±rÄ±m","SummaryText":"YatÄ±rÄ±m DetaylarÄ±","IconName":"investing","ClickedIconName":"investing","Url":"auth/investments/landing","IsNew":false,"SubItems":[{"HeaderText":"DÃ¶viz","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/investments/currency","IsNew":false,"SubItems":[]},{"HeaderText":"Emirlerim","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/investments/stocks","IsNew":true,"SubItems":[]}]},{"HeaderText":"ÃrÃ¼nler","SummaryText":"ÃrÃ¼n DetaylarÄ±","IconName":"","ClickedIconName":"","Url":"auth/products/directcredit","IsNew":false,"SubItems":[{"HeaderText":"Direkt Kredi","SummaryText":"","IconName":"","ClickedIconName":"","Url":"auth/products/directcredit","IsNew":false,"SubItems":[]}]}]}}

/***/ }),

/***/ "YuRK":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _scrollSpy = __webpack_require__("iox6");

var _scrollSpy2 = _interopRequireDefault(_scrollSpy);

var _scroller = __webpack_require__("ak1w");

var _scroller2 = _interopRequireDefault(_scroller);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _scrollHash = __webpack_require__("0v1V");

var _scrollHash2 = _interopRequireDefault(_scrollHash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var protoTypes = {
  to: _propTypes2.default.string.isRequired,
  containerId: _propTypes2.default.string,
  container: _propTypes2.default.object,
  activeClass: _propTypes2.default.string,
  activeStyle: _propTypes2.default.object,
  spy: _propTypes2.default.bool,
  horizontal: _propTypes2.default.bool,
  smooth: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),
  offset: _propTypes2.default.number,
  delay: _propTypes2.default.number,
  isDynamic: _propTypes2.default.bool,
  onClick: _propTypes2.default.func,
  duration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),
  absolute: _propTypes2.default.bool,
  onSetActive: _propTypes2.default.func,
  onSetInactive: _propTypes2.default.func,
  ignoreCancelEvents: _propTypes2.default.bool,
  hashSpy: _propTypes2.default.bool,
  saveHashHistory: _propTypes2.default.bool,
  spyThrottle: _propTypes2.default.number
};

exports.default = function (Component, customScroller) {

  var scroller = customScroller || _scroller2.default;

  var Link = function (_React$PureComponent) {
    _inherits(Link, _React$PureComponent);

    function Link(props) {
      _classCallCheck(this, Link);

      var _this = _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).call(this, props));

      _initialiseProps.call(_this);

      _this.state = {
        active: false
      };
      return _this;
    }

    _createClass(Link, [{
      key: 'getScrollSpyContainer',
      value: function getScrollSpyContainer() {
        var containerId = this.props.containerId;
        var container = this.props.container;

        if (containerId && !container) {
          return document.getElementById(containerId);
        }

        if (container && container.nodeType) {
          return container;
        }

        return document;
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.props.spy || this.props.hashSpy) {
          var scrollSpyContainer = this.getScrollSpyContainer();

          if (!_scrollSpy2.default.isMounted(scrollSpyContainer)) {
            _scrollSpy2.default.mount(scrollSpyContainer, this.props.spyThrottle);
          }

          if (this.props.hashSpy) {
            if (!_scrollHash2.default.isMounted()) {
              _scrollHash2.default.mount(scroller);
            }
            _scrollHash2.default.mapContainer(this.props.to, scrollSpyContainer);
          }

          _scrollSpy2.default.addSpyHandler(this.spyHandler, scrollSpyContainer);

          this.setState({
            container: scrollSpyContainer
          });
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _scrollSpy2.default.unmount(this.stateHandler, this.spyHandler);
      }
    }, {
      key: 'render',
      value: function render() {
        var className = "";

        if (this.state && this.state.active) {
          className = ((this.props.className || "") + " " + (this.props.activeClass || "active")).trim();
        } else {
          className = this.props.className;
        }

        var style = {};

        if (this.state && this.state.active) {
          style = _extends({}, this.props.style, this.props.activeStyle);
        } else {
          style = _extends({}, this.props.style);
        }

        var props = _extends({}, this.props);

        for (var prop in protoTypes) {
          if (props.hasOwnProperty(prop)) {
            delete props[prop];
          }
        }

        props.className = className;
        props.style = style;
        props.onClick = this.handleClick;

        return _react2.default.createElement(Component, props);
      }
    }]);

    return Link;
  }(_react2.default.PureComponent);

  var _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.scrollTo = function (to, props) {
      scroller.scrollTo(to, _extends({}, _this2.state, props));
    };

    this.handleClick = function (event) {

      /*
       * give the posibility to override onClick
       */

      if (_this2.props.onClick) {
        _this2.props.onClick(event);
      }

      /*
       * dont bubble the navigation
       */

      if (event.stopPropagation) event.stopPropagation();
      if (event.preventDefault) event.preventDefault();

      /*
       * do the magic!
       */
      _this2.scrollTo(_this2.props.to, _this2.props);
    };

    this.spyHandler = function (x, y) {
      var scrollSpyContainer = _this2.getScrollSpyContainer();

      if (_scrollHash2.default.isMounted() && !_scrollHash2.default.isInitialized()) {
        return;
      }

      var horizontal = _this2.props.horizontal;

      var to = _this2.props.to;
      var element = null;
      var isInside = void 0;
      var isOutside = void 0;

      if (horizontal) {
        var elemLeftBound = 0;
        var elemRightBound = 0;
        var containerLeft = 0;

        if (scrollSpyContainer.getBoundingClientRect) {
          var containerCords = scrollSpyContainer.getBoundingClientRect();
          containerLeft = containerCords.left;
        }

        if (!element || _this2.props.isDynamic) {
          element = scroller.get(to);
          if (!element) {
            return;
          }

          var cords = element.getBoundingClientRect();
          elemLeftBound = cords.left - containerLeft + x;
          elemRightBound = elemLeftBound + cords.width;
        }

        var offsetX = x - _this2.props.offset;
        isInside = offsetX >= Math.floor(elemLeftBound) && offsetX < Math.floor(elemRightBound);
        isOutside = offsetX < Math.floor(elemLeftBound) || offsetX >= Math.floor(elemRightBound);
      } else {
        var elemTopBound = 0;
        var elemBottomBound = 0;
        var containerTop = 0;

        if (scrollSpyContainer.getBoundingClientRect) {
          var _containerCords = scrollSpyContainer.getBoundingClientRect();
          containerTop = _containerCords.top;
        }

        if (!element || _this2.props.isDynamic) {
          element = scroller.get(to);
          if (!element) {
            return;
          }

          var _cords = element.getBoundingClientRect();
          elemTopBound = _cords.top - containerTop + y;
          elemBottomBound = elemTopBound + _cords.height;
        }

        var offsetY = y - _this2.props.offset;
        isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);
        isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);
      }

      var activeLink = scroller.getActiveLink();

      if (isOutside) {
        if (to === activeLink) {
          scroller.setActiveLink(void 0);
        }

        if (_this2.props.hashSpy && _scrollHash2.default.getHash() === to) {
          var _props$saveHashHistor = _this2.props.saveHashHistory,
              saveHashHistory = _props$saveHashHistor === undefined ? false : _props$saveHashHistor;

          _scrollHash2.default.changeHash("", saveHashHistory);
        }

        if (_this2.props.spy && _this2.state.active) {
          _this2.setState({ active: false });
          _this2.props.onSetInactive && _this2.props.onSetInactive(to, element);
        }
      }

      if (isInside && (activeLink !== to || _this2.state.active === false)) {
        scroller.setActiveLink(to);

        var _props$saveHashHistor2 = _this2.props.saveHashHistory,
            _saveHashHistory = _props$saveHashHistor2 === undefined ? false : _props$saveHashHistor2;

        _this2.props.hashSpy && _scrollHash2.default.changeHash(to, _saveHashHistory);

        if (_this2.props.spy) {
          _this2.setState({ active: true });
          _this2.props.onSetActive && _this2.props.onSetActive(to, element);
        }
      }
    };
  };

  ;

  Link.propTypes = protoTypes;

  Link.defaultProps = { offset: 0 };

  return Link;
};

/***/ }),

/***/ "ZVd2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _row = __webpack_require__("J+e6");

var _row2 = _interopRequireDefault(_row);

var _col = __webpack_require__("CUvw");

var _col2 = _interopRequireDefault(_col);

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

var _grid = __webpack_require__("MI+p");

var _grid2 = _interopRequireDefault(_grid);

__webpack_require__("u2GR");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Footer = function (_React$Component) {
  _inherits(Footer, _React$Component);

  function Footer(props) {
    _classCallCheck(this, Footer);

    return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).call(this, props));
  }

  _createClass(Footer, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.currentYear = new Date().getFullYear();
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          className = _props.className,
          xsLeft = _props.xsLeft,
          xsOffset = _props.xsOffset,
          xsRight = _props.xsRight,
          smLeft = _props.smLeft,
          smOffset = _props.smOffset,
          smRight = _props.smRight,
          mdLeft = _props.mdLeft,
          mdOffset = _props.mdOffset,
          mdRight = _props.mdRight,
          lgLeft = _props.lgLeft,
          lgOffset = _props.lgOffset,
          lgRight = _props.lgRight,
          xlLeft = _props.xlLeft,
          xlOffset = _props.xlOffset,
          xlRight = _props.xlRight,
          copyrightText = _props.copyrightText;


      return _react2.default.createElement(
        _block2.default,
        { type: "footer", className: (0, _classnames2.default)("page-footer", className) },
        _react2.default.createElement(
          _grid2.default,
          null,
          _react2.default.createElement(
            _row2.default,
            null,
            _react2.default.createElement(
              _col2.default,
              {
                xs: xsLeft - xsOffset,
                sm: smLeft - smOffset,
                md: mdLeft - mdOffset,
                lg: lgLeft - lgOffset,
                xl: xlLeft - xlOffset,
                xsOffset: xsOffset,
                smOffset: smOffset,
                mdOffset: mdOffset,
                lgOffset: lgOffset,
                xlOffset: xlOffset
              },
              _react2.default.createElement(
                _block2.default,
                { className: "page-footer-left" },
                _react2.default.createElement(
                  _element2.default,
                  { className: "copyright-text" },
                  copyrightText + this.currentYear
                )
              )
            ),
            _react2.default.createElement(
              _col2.default,
              {
                xs: xsRight - xsOffset,
                sm: smRight - smOffset,
                md: mdRight - mdOffset,
                lg: lgRight - lgOffset,
                xl: xlRight - xlOffset
              },
              _react2.default.createElement(
                _block2.default,
                { className: "page-footer-right" },
                _react2.default.createElement(_image2.default, {
                  path: "public/images/norton.png",
                  className: "norton-logo",
                  name: "NortonLogo"
                })
              )
            )
          )
        )
      );
    }
  }]);

  return Footer;
}(_react2.default.Component);

Footer.defaultProps = {
  xsLeft: 9,
  xsOffset: 0,
  xsRight: 3,
  smLeft: 9,
  smOffset: 0,
  smRight: 3,
  mdLeft: 9,
  mdOffset: 0,
  mdRight: 3,
  lgLeft: 9,
  lgOffset: 0,
  lgRight: 3,
  xlLeft: 9,
  xlOffset: 0,
  xlRight: 3,
  copyrightText: "Her hakkÄ± Akbank T.A.Å'ye aittir Â©"
};

exports.default = Footer;

/***/ }),

/***/ "Zx67":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("fS6E"), __esModule: true };

/***/ }),

/***/ "aFK5":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("gAsd"), __esModule: true };

/***/ }),

/***/ "ak1w":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = __webpack_require__("ECVE");

var _utils2 = _interopRequireDefault(_utils);

var _animateScroll = __webpack_require__("VJPP");

var _animateScroll2 = _interopRequireDefault(_animateScroll);

var _scrollEvents = __webpack_require__("xafY");

var _scrollEvents2 = _interopRequireDefault(_scrollEvents);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __mapped = {};
var __activeLink = void 0;

exports.default = {

  unmount: function unmount() {
    __mapped = {};
  },

  register: function register(name, element) {
    __mapped[name] = element;
  },

  unregister: function unregister(name) {
    delete __mapped[name];
  },

  get: function get(name) {
    return __mapped[name] || document.getElementById(name) || document.getElementsByName(name)[0] || document.getElementsByClassName(name)[0];
  },

  setActiveLink: function setActiveLink(link) {
    return __activeLink = link;
  },

  getActiveLink: function getActiveLink() {
    return __activeLink;
  },

  scrollTo: function scrollTo(to, props) {

    var target = this.get(to);

    if (!target) {
      console.warn("target Element not found");
      return;
    }

    props = _extends({}, props, { absolute: false });

    var containerId = props.containerId;
    var container = props.container;

    var containerElement = void 0;
    if (containerId) {
      containerElement = document.getElementById(containerId);
    } else if (container && container.nodeType) {
      containerElement = container;
    } else {
      containerElement = document;
    }

    props.absolute = true;

    var horizontal = props.horizontal;
    var scrollOffset = _utils2.default.scrollOffset(containerElement, target, horizontal) + (props.offset || 0);

    /*
     * if animate is not provided just scroll into the view
     */
    if (!props.smooth) {
      if (_scrollEvents2.default.registered['begin']) {
        _scrollEvents2.default.registered['begin'](to, target);
      }

      if (containerElement === document) {
        if (props.horizontal) {
          window.scrollTo(scrollOffset, 0);
        } else {
          window.scrollTo(0, scrollOffset);
        }
      } else {
        containerElement.scrollTop = scrollOffset;
      }

      if (_scrollEvents2.default.registered['end']) {
        _scrollEvents2.default.registered['end'](to, target);
      }

      return;
    }

    /*
     * Animate scrolling
     */

    _animateScroll2.default.animateTopScroll(scrollOffset, props, to, target);
  }
};

/***/ }),

/***/ "bRrM":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("7KvD");
var core = __webpack_require__("FeBl");
var dP = __webpack_require__("evD5");
var DESCRIPTORS = __webpack_require__("+E39");
var SPECIES = __webpack_require__("dSzd")('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "bqyg":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "c/Tr":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("5zde"), __esModule: true };

/***/ }),

/***/ "cDD6":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "cnlX":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("iInB");
var $Object = __webpack_require__("FeBl").Object;
module.exports = function getOwnPropertyDescriptor(it, key) {
  return $Object.getOwnPropertyDescriptor(it, key);
};


/***/ }),

/***/ "dNDb":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "dY0y":
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__("dSzd")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "e5++":
/***/ (function(module, exports, __webpack_require__) {


/*!
* jquery-deferred
* Copyright(c) 2011 Hidden <zzdhidden@gmail.com>
* MIT Licensed
*/

/**
* Library version.
*/

var jQuery = module.exports = __webpack_require__("DC2E"),
	core_slice = Array.prototype.slice;

/**
* jQuery deferred
*
* Code from: https://github.com/jquery/jquery/blob/master/src/deferred.js
* Doc: http://api.jquery.com/category/deferred-object/
*
*/

jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var action = tuple[ 0 ],
								fn = fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ]( jQuery.isFunction( fn ) ?
								function() {
									var returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								} :
								newDefer[ action ]
							);
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ] = list.fire
			deferred[ tuple[0] ] = list.fire;
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = core_slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
					if( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


/***/ }),

/***/ "eWjm":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("LTVp");
module.exports = __webpack_require__("FeBl").Reflect.ownKeys;


/***/ }),

/***/ "fBQ2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__("evD5");
var createDesc = __webpack_require__("X8DO");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "fJUb":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("77Pl");
var isObject = __webpack_require__("EqjI");
var newPromiseCapability = __webpack_require__("qARP");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "fLa5":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "fS6E":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("Kh5d");
module.exports = __webpack_require__("FeBl").Object.getPrototypeOf;


/***/ }),

/***/ "fZjL":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("jFbC"), __esModule: true };

/***/ }),

/***/ "fere":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _axios = __webpack_require__("mtWM");

var _axios2 = _interopRequireDefault(_axios);

var _constants = __webpack_require__("FN8c");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var httpAuthorizationErrorCode = 401;
var httpForbiddenErrorCode = 403;

var logout = function logout() {};

var setupAxiosInterceptors = function setupAxiosInterceptors() {
  var onRequestSuccess = function onRequestSuccess(config) {
    config.headers["Content-Type"] = "application/json; charset=UTF-8";
    /*
      const loginState = store.getState().loginState
      if (
      loginState &&
      loginState.access_token &&
      loginState.access_token !== "" &&
      !config.url.includes("/token")
    ) {
      config.headers["Authorization"] = "Bearer " + loginState.access_token
    }*/
    config.timeout = 60000;
    if (false) {
      config.data = { input: JSON.stringify(config.data) };
    } else if (false) {
      //nothing to do
    } else {
      config.url = _constants.API_URL;
    }

    return config;
  };
  var onResponseSuccess = function onResponseSuccess(response) {
    if (false) {
      response.data = response.data.EntryPointJsonResult;
    }
    return response;
  };

  var onResponseError = function onResponseError(error) {
    var statusCode = error.response ? error.response.status : 0;
    /*
    if (error.status == httpForbiddenErrorCode) {
      if (
        store.getState().loginState.access_token &&
        store.getState().loginState.access_token !== ""
      ) {
        loginState.logout()
      }
    } else if (statusCode == httpAuthorizationErrorCode) {
      if (
        store.getState().loginState.access_token &&
        store.getState().loginState.access_token !== ""
      ) {
        loginState.logout()
      }
    }*/
    return Promise.reject(error.message);
  };

  _axios2.default.interceptors.request.use(onRequestSuccess);
  _axios2.default.interceptors.response.use(onResponseSuccess, onResponseError);
};

exports.default = setupAxiosInterceptors;

/***/ }),

/***/ "fxRn":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("+tPU");
__webpack_require__("zQR9");
module.exports = __webpack_require__("g8Ux");


/***/ }),

/***/ "g8Ux":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("77Pl");
var get = __webpack_require__("3fs2");
module.exports = __webpack_require__("FeBl").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "gAsd":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("G5/o");
var $Object = __webpack_require__("FeBl").Object;
module.exports = function getOwnPropertyNames(it) {
  return $Object.getOwnPropertyNames(it);
};


/***/ }),

/***/ "hg2J":
/***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
var gOPN = __webpack_require__("n0T6");
var gOPS = __webpack_require__("1kS7");
var anObject = __webpack_require__("77Pl");
var Reflect = __webpack_require__("7KvD").Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};


/***/ }),

/***/ "iInB":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__("TcQ7");
var $getOwnPropertyDescriptor = __webpack_require__("LKZe").f;

__webpack_require__("uqUo")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "iLr6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var initialSet = {
  "tr-TR": {
    "Common": {
      Continue: "Devam",
      SecurityCode: "GÃ¼venlik Kodu",
      SecurityCodeError: "LÃ¼tfen gÃ¼venlik kodunu kontrol ediniz.",
      MobilePassword: "Cep Åifrenizi Giriniz.",
      RemainingTime: "sn Kalan SÃ¼re",
      OtpReuiredError: "LÃ¼tfen telefonunuza gelen Cep Åifreyi giriniz.",
      Resend: "Tekrar GÃ¶nder",
      MobilePasswordText: "Cep Åifre",
      Password: "Åifre",
      SMSOtpCountText1ByType2: "",
      SMSOtpCountText2ByType2: " numaralÄ± Cep Åifre'ni gir",
      SMSOtpPhoneNumberText1ByType2: "",
      SMSOtpPhoneNumberText2ByType2: " numaralÄ± telefonuna gÃ¶nderdik.",
      SMSOtpCountText1ByType1: "LÃ¼tfen ",
      SMSOtpCountText2ByType1: " numaralÄ± telefonunuza gelen ",
      SMSOtpCountText3ByType1: " numaralÄ± Cep Åifre'yi aÅaÄÄ±da belirtilen sÃ¼re iÃ§erisinde girerek Devam tuÅuna basÄ±nÄ±z.",
      LangCode: "tr-TR",
      Copyright: "Her hakkÄ± Akbank T.A.Å'ye aittir Â©",
      NotRecordFound: "KayÄ±t bulunamadÄ±",
      Choose: "SeÃ§iniz",
      Name: "AdÄ±nÄ±z",
      NameRequired: "LÃ¼tfen adÄ±nÄ±zÄ± giriniz.",
      Surname: "SoyadÄ±nÄ±z",
      SurnameRequired: "LÃ¼tfen soyadÄ±nÄ±zÄ± giriniz.",
      Email: "E-posta adresiniz",
      EmailRequired: "LÃ¼tfen e-posta adresinizi giriniz.",
      EmailAddressNotValid: "LÃ¼tfen geÃ§erli bir e-posta adresi giriniz.",
      MobilePhone: "Cep telefonu numaranÄ±z",
      MobilePhoneRequired: "LÃ¼tfen cep telefon numaranÄ±zÄ± giriniz.",
      IDNumber: "T.C. kimlik numaranÄ±z",
      IDNumberRequired: "LÃ¼tfen T.C. kimlik numaranÄ±zÄ± giriniz.",
      KVKKTextFirst: "",
      KVKKTextLink: "KiÅisel Verilerin KorunmasÄ± Kanunu hakkÄ±nda Bilgilendirme",
      KVKKTextLast: "'yi okudum.",
      KVKKRequiredError: "LÃ¼tfen onay kutusunu iÅaretleyiniz.",
      SendForm: "Formu GÃ¶nder"
    }
  },
  "en-US": {
    "Common": {
      Continue: "Continue",
      SecurityCode: "Security Code",
      SecurityCodeError: "You have entered a wrong security code, please retry.",
      MobilePassword: "Enter SMS OTP",
      RemainingTime: "Time left (seconds)",
      OtpReuiredError: "Please enter the Mobile Password sent to your phone.",
      Resend: "Resend",
      MobilePasswordText: "Mobile Password",
      Password: "Password",
      SMSOtpCountText1ByType2: "Enter your number ",
      SMSOtpCountText2ByType2: " mobile password",
      SMSOtpPhoneNumberText1ByType2: "We have sent to your phone number of ",
      SMSOtpPhoneNumberText2ByType2: "",
      SMSOtpCountText1ByType1: "Please enter the mobile password which sent to your phone number ",
      SMSOtpCountText2ByType1: ", is number ",
      SMSOtpCountText3ByType1: " within the time specified below and click Continue button.",
      LangCode: "en-US",
      Copyright: "Copyright Â© Akbank. All rights reserved.",
      NotRecordFound: "Not record found",
      Choose: "Select",
      Name: "First name",
      NameRequired: "Please fill name field.",
      Surname: "Last name",
      SurnameRequired: "Please fill surname field.",
      Email: "E-mail address",
      EmailRequired: "Please fill e-mail field.",
      EmailAddressNotValid: "Please enter a valid e-mail address.",
      MobilePhone: "Phone number",
      MobilePhoneRequired: "Please fill phone number.",
      IDNumber: "Customer number",
      IDNumberRequired: "Please fill customer number field.",
      KVKKTextFirst: "I have read the information about ",
      KVKKTextLink: "The Law on Protection of Personal Data",
      KVKKTextLast: "",
      KVKKRequiredError: "Please check the box.",
      SendForm: "Send"
    }
  }
};

exports.default = initialSet;

/***/ }),

/***/ "iRmV":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var Common = exports.Common = {
  Success: "SUCCESS",
  Fail: "FAIL",
  NotAccepted: "NOTACCEPTED"
};

var DirektKrediKonut = exports.DirektKrediKonut = {
  Step1Completed: "Complete1",
  Step1NotSuitable: "Complete2",
  Step2Completed: "Complete3",
  CaptchaNotValid: "CAPTCHA_NOT_OK"
};

var DeviceTypes = exports.DeviceTypes = {
  MOBILE: "M",
  TABLET: "T",
  DESKTOP: "D"
};

var LoginTypes = exports.LoginTypes = {
  TCKN: "T",
  VKN: "V",
  GUID: "G"
};

var PageTypes = exports.PageTypes = {
  Landing: "landing",
  InitialInfo: "kimlik-iletisim-bilgileri",
  SmsOtp: "cep-sifre",
  KimlikBilgileri: "kimlik-bilgileri",
  AmountEntry: "tutar-bilgileri",
  EkBilgiler: "ek-bilgiler",
  BranchSelection: "sube-secimi",
  PaymentOptions: "odeme-bilgileri",
  NotFound: "sayfa-bulunamadÄ±",
  Success: "sonuc-sayfasi",
  Error: "hata-sayfasÄ±",
  InviteToBranch: "subeye-davet"
};

var FamilyType = exports.FamilyType = [{ code: 1, title: "KENDÄ°SÄ°" }, { code: 2, title: "EÅ" }, { code: 3, title: "ÃOCUK" }, { code: 4, title: "EBEVEYN" }, { code: 5, title: "KARDEÅ" }];

var CLICK_LINK_AFTER_FIVE_SECOND_MS = exports.CLICK_LINK_AFTER_FIVE_SECOND_MS = 5000;

var UNINSURED_PRODUCT_TYPE = exports.UNINSURED_PRODUCT_TYPE = "1";
var INSURED_PRODUCT_TYPE = exports.INSURED_PRODUCT_TYPE = "2";

/***/ }),

/***/ "iUbK":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7KvD");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "ijqj":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "inI0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webcore = __webpack_require__("9EQB");

var rootReducers = {
  routing: _webcore.routeReducer
};

exports.default = rootReducers;

/***/ }),

/***/ "iox6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = __webpack_require__("R3sX");

var _lodash2 = _interopRequireDefault(_lodash);

var _passiveEventListeners = __webpack_require__("yBKa");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// The eventHandler will execute at a rate of 15fps by default
var eventThrottler = function eventThrottler(eventHandler) {
  var throttleAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 66;
  return (0, _lodash2.default)(eventHandler, throttleAmount);
};

var scrollSpy = {

  spyCallbacks: [],
  spySetState: [],
  scrollSpyContainers: [],

  mount: function mount(scrollSpyContainer, throttle) {
    if (scrollSpyContainer) {
      var eventHandler = eventThrottler(function (event) {
        scrollSpy.scrollHandler(scrollSpyContainer);
      }, throttle);
      scrollSpy.scrollSpyContainers.push(scrollSpyContainer);
      (0, _passiveEventListeners.addPassiveEventListener)(scrollSpyContainer, 'scroll', eventHandler);
    }
  },
  isMounted: function isMounted(scrollSpyContainer) {
    return scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer) !== -1;
  },
  currentPositionX: function currentPositionX(scrollSpyContainer) {
    if (scrollSpyContainer === document) {
      var supportPageOffset = window.pageYOffset !== undefined;
      var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
      return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;
    } else {
      return scrollSpyContainer.scrollLeft;
    }
  },
  currentPositionY: function currentPositionY(scrollSpyContainer) {
    if (scrollSpyContainer === document) {
      var supportPageOffset = window.pageXOffset !== undefined;
      var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
      return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;
    } else {
      return scrollSpyContainer.scrollTop;
    }
  },
  scrollHandler: function scrollHandler(scrollSpyContainer) {
    var callbacks = scrollSpy.scrollSpyContainers[scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)].spyCallbacks || [];
    callbacks.forEach(function (c) {
      return c(scrollSpy.currentPositionX(scrollSpyContainer), scrollSpy.currentPositionY(scrollSpyContainer));
    });
  },
  addStateHandler: function addStateHandler(handler) {
    scrollSpy.spySetState.push(handler);
  },
  addSpyHandler: function addSpyHandler(handler, scrollSpyContainer) {
    var container = scrollSpy.scrollSpyContainers[scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)];

    if (!container.spyCallbacks) {
      container.spyCallbacks = [];
    }

    container.spyCallbacks.push(handler);

    handler(scrollSpy.currentPositionX(scrollSpyContainer), scrollSpy.currentPositionY(scrollSpyContainer));
  },
  updateStates: function updateStates() {
    scrollSpy.spySetState.forEach(function (s) {
      return s();
    });
  },
  unmount: function unmount(stateHandler, spyHandler) {
    scrollSpy.scrollSpyContainers.forEach(function (c) {
      return c.spyCallbacks && c.spyCallbacks.length && c.spyCallbacks.indexOf(spyHandler) > -1 && c.spyCallbacks.splice(c.spyCallbacks.indexOf(spyHandler), 1);
    });

    if (scrollSpy.spySetState && scrollSpy.spySetState.length && scrollSpy.spySetState.indexOf(stateHandler) > -1) {
      scrollSpy.spySetState.splice(scrollSpy.spySetState.indexOf(stateHandler), 1);
    }

    document.removeEventListener('scroll', scrollSpy.scrollHandler);
  },


  update: function update() {
    return scrollSpy.scrollSpyContainers.forEach(function (c) {
      return scrollSpy.scrollHandler(c);
    });
  }
};

exports.default = scrollSpy;

/***/ }),

/***/ "ipFE":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "j90D":
/***/ (function(module, exports, __webpack_require__) {


module.exports = __webpack_require__("e5++");

/***/ }),

/***/ "jFbC":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("Cdx3");
module.exports = __webpack_require__("FeBl").Object.keys;


/***/ }),

/***/ "jKW+":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__("kM2E");
var newPromiseCapability = __webpack_require__("qARP");
var perform = __webpack_require__("dNDb");

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),

/***/ "jU+E":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "kRrW":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "kUO7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _scrollLink = __webpack_require__("YuRK");

var _scrollLink2 = _interopRequireDefault(_scrollLink);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ButtonElement = function (_React$Component) {
  _inherits(ButtonElement, _React$Component);

  function ButtonElement() {
    _classCallCheck(this, ButtonElement);

    return _possibleConstructorReturn(this, (ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)).apply(this, arguments));
  }

  _createClass(ButtonElement, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'button',
        this.props,
        this.props.children
      );
    }
  }]);

  return ButtonElement;
}(_react2.default.Component);

;

exports.default = (0, _scrollLink2.default)(ButtonElement);

/***/ }),

/***/ "knuC":
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "lfkx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateMonthlyPayment = calculateMonthlyPayment;
exports.getLoanTerms = getLoanTerms;
function pmt(i, n, p) {
  return i * p * Math.pow(1 + i, n) / (1 - Math.pow(1 + i, n));
}

function irr(values, guess) {
  // Credits: algorithm inspired by Apache OpenOffice

  // Calculates the resulting amount
  var irrResult = function irrResult(values, dates, rate) {
    var r = rate + 1;
    var result = values[0];
    for (var i = 1; i < values.length; i++) {
      result += values[i] / Math.pow(r, (dates[i] - dates[0]) / 365);
    }
    return result;
  };

  // Calculates the first derivation
  var irrResultDeriv = function irrResultDeriv(values, dates, rate) {
    var r = rate + 1;
    var result = 0;
    for (var i = 1; i < values.length; i++) {
      var frac = (dates[i] - dates[0]) / 365;
      result -= frac * values[i] / Math.pow(r, frac + 1);
    }
    return result;
  };

  // Initialize dates and check that values contains at least one positive value and one negative value
  var dates = [];
  var positive = false;
  var negative = false;
  for (var i = 0; i < values.length; i++) {
    dates[i] = i === 0 ? 0 : dates[i - 1] + 365;
    if (values[i] > 0) positive = true;
    if (values[i] < 0) negative = true;
  }

  // Return error if values does not contain at least one positive value and one negative value
  if (!positive || !negative) return '#NUM!';

  // Initialize guess and resultRate
  var guess = typeof guess === 'undefined' ? 0.1 : guess;
  var resultRate = guess;

  // Set maximum epsilon for end of iteration
  var epsMax = 1e-10;

  // Set maximum number of iterations
  var iterMax = 180;

  // Implement Newton's method
  var newRate, epsRate, resultValue;
  var iteration = 0;
  var contLoop = true;
  do {
    resultValue = irrResult(values, dates, resultRate);
    newRate = resultRate - resultValue / irrResultDeriv(values, dates, resultRate);
    epsRate = Math.abs(newRate - resultRate);
    resultRate = newRate;
    contLoop = epsRate > epsMax && Math.abs(resultValue) > epsMax;
  } while (contLoop && ++iteration < iterMax);

  if (contLoop) return '#NUM!';

  // Return internal rate of return
  return resultRate;
}

/**
 * Ä°stenen tutar (TL) ve vade iÃ§in TL cinsinden aylÄ±k Ã¶deme tutarÄ±nÄ± hesaplar
 * (Kodlar, Direkt Kredi HÄ±zlÄ± BaÅvurudan alÄ±nmÄ±ÅtÄ±r. https://tfs.akbank.com/DefaultCollection/SMPU/_versionControl?path=%24%2FSMPU%2FDigitalProduct%2FAkbank.DirektKredi.Lead%2FDEV%2FSource%2FAkbank.DirektKredi.Lead.UI%2Fassets%2Fjs%2Fcore.js)
 * @param {number} amount Kredi tutarÄ±
 * @param {number} vade Vade
 * @param {object} productInfo Kredi Ã¼rÃ¼nÃ¼ne ait bilgiler (faiz listesi, min/max vade, min/max tutar, masraf b. )
 */
function calculateMonthlyPayment(amount, vade, productInfo) {
  if (amount < productInfo.iMinTutar || amount > productInfo.iMaxTutar) {
    return null;
  }
  // if (vade < productInfo.minVadeTl || vade > productInfo.maxVadeTl) {
  //   return null
  // }

  var productDetail = {
    minVade: productInfo.minVadeTl,
    maxVade: productInfo.maxVadeTl,
    minTutar: productInfo.minTutar,
    maxTutar: productInfo.maxTutar,
    masraf: productInfo.masraf,
    kkdf: productInfo.fonOran * 1.0,
    bsmv: productInfo.vergiOran * 1.0,
    faizAdet: productInfo.faizAdet,
    faizler: productInfo.faizArrayListesi
  };

  var istenenVade = vade;
  var istenenTutar = amount;

  var urunMasraf = productDetail.masraf;
  var urunMinTutar = productDetail.minTutar;
  var urunMaxTutar = productDetail.maxTutar;
  var faizOrani = 0.0;

  var hesaplananMasraf = urunMasraf / urunMaxTutar * istenenTutar;
  var vadeFaizArray = [];

  for (var i = 0; i < productDetail.faizler.length; i++) {
    if (istenenVade >= productDetail.faizler[i].minVade && istenenVade <= productDetail.faizler[i].maxVade) {
      vadeFaizArray.push(productDetail.faizler[i]);
    }
  }

  for (var y = 0; y < vadeFaizArray.length; y++) {
    if (istenenTutar >= vadeFaizArray[y].minKrediTutari && istenenTutar <= vadeFaizArray[y].maxKrediTutari) {
      faizOrani = vadeFaizArray[y].tlOran.replace(/,/g, ".");
    }
  }

  // Beklenen Ãrnek DeÄerler:
  // faizOrani: 2.05 | KKDF: 15 | BSMV: 10
  // ir = (ÃrÃ¼nÃ¼n Faiz OranÄ± / 100) + ÃrÃ¼nÃ¼n Faiz OranÄ±nÄ±n KKDF + BSMV yÃ¼zdesi kadar fazlasÄ±
  var ir = faizOrani / 100.0 * (1.0 + (productDetail.kkdf + productDetail.bsmv) / 100.0);

  var aylikOdeme = pmt(ir, istenenVade, -istenenTutar);

  var masrafsizTutar = hesaplananMasraf - istenenTutar;
  var vadeCounter = istenenVade;
  var taksitArray = [];
  var odemePlaniArr = [];
  var kalanAnapara = istenenTutar;
  var donem = 0;
  var toplamTaksitTutari = 0;
  var toplamFaizOdemesi = 0;
  var toplamKkdfOdemesi = 0;
  var toplamBsmvOdemesi = 0;
  var toplamAnaparaOdemesi = 0;

  while (donem < vadeCounter) {
    taksitArray[donem] = aylikOdeme;
    var faizOdemesi = kalanAnapara * (faizOrani / 100.0);
    var kkdfOdemesi = faizOdemesi * (productDetail.kkdf / 100.0);
    var bsmvOdemesi = faizOdemesi * (productDetail.bsmv / 100.0);

    var faizKkdfBsmv = faizOdemesi + kkdfOdemesi + bsmvOdemesi;
    var anaparaOdemesi = aylikOdeme - faizKkdfBsmv;

    toplamTaksitTutari += aylikOdeme;
    toplamFaizOdemesi += faizOdemesi;
    toplamKkdfOdemesi += kkdfOdemesi;
    toplamBsmvOdemesi += bsmvOdemesi;
    toplamAnaparaOdemesi += anaparaOdemesi;

    kalanAnapara = kalanAnapara - anaparaOdemesi;

    if (kalanAnapara < 0) {
      kalanAnapara = 0;
    }

    odemePlaniArr[donem] = {
      aylikOdeme: aylikOdeme,
      faizOdemesi: faizOdemesi,
      kkdfOdemesi: kkdfOdemesi,
      bsmvOdemesi: bsmvOdemesi,
      anaparaOdemesi: anaparaOdemesi,
      kalanAnapara: kalanAnapara
    };

    donem++;
  }
  taksitArray.unshift(masrafsizTutar);
  var calculatedIRR = irr(taksitArray);
  var monthIRR = calculatedIRR * 100;
  var efektifYillikFaizOrani = (Math.pow(1 + calculatedIRR, 12) - 1) * 100;

  return {
    aylikOdeme: aylikOdeme,
    faizOrani: faizOrani,
    aylikMaliyetOrani: monthIRR,
    yearlyInterestRate: efektifYillikFaizOrani,
    totalPaymentAmt: aylikOdeme * istenenVade + hesaplananMasraf,
    odemePlaniArr: odemePlaniArr,
    toplamMasraf: hesaplananMasraf,
    toplamTaksitTutari: toplamTaksitTutari,
    toplamFaizOdemesi: toplamFaizOdemesi,
    toplamKkdfOdemesi: toplamKkdfOdemesi,
    toplamBsmvOdemesi: toplamBsmvOdemesi,
    toplamAnaparaOdemesi: toplamAnaparaOdemesi
  };
}

function getLoanTerms(amount, productInfo) {
  if (parseInt(amount) < parseInt(productInfo.minTutar) || parseInt(amount) > parseInt(productInfo.maxTutar)) {
    return null;
  }

  var faizArrayList = productInfo.faizArrayListesi;
  if (faizArrayList) {
    var creditTermsByAmount = faizArrayList.filter(function (item) {
      return parseInt(amount) >= parseInt(item.minKrediTutari) && parseInt(amount) <= parseInt(item.maxKrediTutari);
    });

    if (creditTermsByAmount.length === 0) {
      return null;
    }

    var maxLoanTermValue = Math.max.apply(Math, creditTermsByAmount.map(function (o) {
      return o.maxVade;
    }));
    var minLoanTermValue = Math.min.apply(Math, creditTermsByAmount.map(function (o) {
      return o.minVade;
    }));

    return {
      maxLoanTermValue: maxLoanTermValue,
      minLoanTermValue: minLoanTermValue
    };
  } else {
    return null;
  }
}

/***/ }),

/***/ "lo3n":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

__webpack_require__("kRrW");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InfoBox = function (_BappBase) {
  _inherits(InfoBox, _BappBase);

  function InfoBox(props) {
    _classCallCheck(this, InfoBox);

    return _possibleConstructorReturn(this, (InfoBox.__proto__ || Object.getPrototypeOf(InfoBox)).call(this, props));
  }

  _createClass(InfoBox, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _panel2.default,
        { hasFooter: false, noHeader: true, id: this.props.id, className: "infobox" },
        _react2.default.createElement(
          _block2.default,
          { className: "infobox-img-container" },
          _react2.default.createElement(_image2.default, { path: this.props.img, className: "infobox-img", name: "infobox-img" })
        ),
        _react2.default.createElement(
          _element2.default,
          { type: "p", className: "infobox-text1" },
          this.props.text1
        ),
        _react2.default.createElement(
          _element2.default,
          { type: "p", className: "infobox-text2" },
          this.props.text2
        )
      );
    }
  }]);

  return InfoBox;
}(_webcore.BappBase);

InfoBox.propTypes = {
  id: _propTypes2.default.string,
  img: _propTypes2.default.string,
  text1: _propTypes2.default.string,
  text2: _propTypes2.default.string
};

exports.default = InfoBox;

/***/ }),

/***/ "lvGd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  /*
   * https://github.com/oblador/angular-scroll (duScrollDefaultEasing)
   */
  defaultEasing: function defaultEasing(x) {
    if (x < 0.5) {
      return Math.pow(x * 2, 2) / 2;
    }
    return 1 - Math.pow((1 - x) * 2, 2) / 2;
  },
  /*
   * https://gist.github.com/gre/1650294
   */
  // no easing, no acceleration
  linear: function linear(x) {
    return x;
  },
  // accelerating from zero velocity
  easeInQuad: function easeInQuad(x) {
    return x * x;
  },
  // decelerating to zero velocity
  easeOutQuad: function easeOutQuad(x) {
    return x * (2 - x);
  },
  // acceleration until halfway, then deceleration
  easeInOutQuad: function easeInOutQuad(x) {
    return x < .5 ? 2 * x * x : -1 + (4 - 2 * x) * x;
  },
  // accelerating from zero velocity 
  easeInCubic: function easeInCubic(x) {
    return x * x * x;
  },
  // decelerating to zero velocity Ï
  easeOutCubic: function easeOutCubic(x) {
    return --x * x * x + 1;
  },
  // acceleration until halfway, then deceleration 
  easeInOutCubic: function easeInOutCubic(x) {
    return x < .5 ? 4 * x * x * x : (x - 1) * (2 * x - 2) * (2 * x - 2) + 1;
  },
  // accelerating from zero velocity 
  easeInQuart: function easeInQuart(x) {
    return x * x * x * x;
  },
  // decelerating to zero velocity 
  easeOutQuart: function easeOutQuart(x) {
    return 1 - --x * x * x * x;
  },
  // acceleration until halfway, then deceleration
  easeInOutQuart: function easeInOutQuart(x) {
    return x < .5 ? 8 * x * x * x * x : 1 - 8 * --x * x * x * x;
  },
  // accelerating from zero velocity
  easeInQuint: function easeInQuint(x) {
    return x * x * x * x * x;
  },
  // decelerating to zero velocity
  easeOutQuint: function easeOutQuint(x) {
    return 1 + --x * x * x * x * x;
  },
  // acceleration until halfway, then deceleration 
  easeInOutQuint: function easeInOutQuint(x) {
    return x < .5 ? 16 * x * x * x * x * x : 1 + 16 * --x * x * x * x * x;
  }
};

/***/ }),

/***/ "lx7a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable global-require */

if (true) {
  module.exports = __webpack_require__("sGP0");
} else {
  module.exports = require('./AppContainer.dev');
}

/***/ }),

/***/ "msXi":
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__("77Pl");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "mvHQ":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("qkKv"), __esModule: true };

/***/ }),

/***/ "nCzU":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _reactRedux = __webpack_require__("RH2O");

var _reactRouterDom = __webpack_require__("F8kA");

var _webcore = __webpack_require__("9EQB");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _header = __webpack_require__("6LHJ");

var _header2 = _interopRequireDefault(_header);

var _footer = __webpack_require__("ZVd2");

var _footer2 = _interopRequireDefault(_footer);

var _ = __webpack_require__("xWJd");

var _2 = _interopRequireDefault(_);

var _landing = __webpack_require__("seSm");

var _landing2 = _interopRequireDefault(_landing);

var _details = __webpack_require__("Vd7I");

var _details2 = _interopRequireDefault(_details);

var _result = __webpack_require__("AEpP");

var _result2 = _interopRequireDefault(_result);

__webpack_require__("2Nry");

__webpack_require__("NMP2");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MainApp = function (_BappBase) {
  _inherits(MainApp, _BappBase);

  function MainApp(props, context) {
    _classCallCheck(this, MainApp);

    return _possibleConstructorReturn(this, (MainApp.__proto__ || Object.getPrototypeOf(MainApp)).call(this, props, context));
  }

  _createClass(MainApp, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        {
          className: (0, _classnames2.default)("bapp-page", {
            "bapp-navigation-open": !this.props.menuCollapsed,
            "bapp-page-loading": this.props.loading
          })
        },
        _react2.default.createElement(_header2.default, null),
        _react2.default.createElement(
          _reactRouterDom.Switch,
          null,
          _react2.default.createElement(_reactRouterDom.Route, { exact: true, path: "/", component: _landing2.default }),
          _react2.default.createElement(_reactRouterDom.Route, { path: "/details", component: _details2.default }),
          _react2.default.createElement(_reactRouterDom.Route, { path: "/result", component: _result2.default }),
          _react2.default.createElement(_reactRouterDom.Route, { component: _2.default })
        ),
        _react2.default.createElement(_footer2.default, null)
      );
    }
  }]);

  return MainApp;
}(_webcore.BappBase);

MainApp.propTypes = {
  loading: _propTypes2.default.bool
};

MainApp.contextTypes = {
  device: _propTypes2.default.object,
  platform: _propTypes2.default.number,
  theme: _propTypes2.default.string
};

function mapStateToProps(state, ownProps) {
  return {
    nextPage: state.ihtiyacKredisiState.nextPage
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(MainApp);

/***/ }),

/***/ "nu99":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _webcore = __webpack_require__("9EQB");

var _menuResponse = __webpack_require__("YnjH");

var _menuResponse2 = _interopRequireDefault(_menuResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var menuState = (0, _webcore.State)({
  name: "menuState",
  initial: {
    menuObject: _menuResponse2.default,
    open: false,
    visible: true,
    error: null,
    menuCollapsed: false
  },
  collapseMenu: function collapseMenu(collapseParam) {
    return { menuCollapsed: collapseParam };
  },
  getMenuItems: function getMenuItems(authToken) {
    return (0, _webcore.PostAjaxAsync)({
      data: {
        NextTransactionUrl: "Menu/GetMenu",
        HeaderText: "Root"
      },
      config: {
        headers: {
          "Content-Type": "application/json; charset=UTF-8",
          Authorization: "Bearer " + authToken
        }
      },
      onSuccess: function onSuccess(data) {
        return {
          menuObject: data
        };
      },
      onError: function onError(err) {
        return {
          error: err,
          menuObject: _menuResponse2.default.Menu
        };
      }
    });
  }
});

exports.default = menuState;

/***/ }),

/***/ "o846":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Banner = function (_BappBase) {
  _inherits(Banner, _BappBase);

  function Banner(props) {
    _classCallCheck(this, Banner);

    return _possibleConstructorReturn(this, (Banner.__proto__ || Object.getPrototypeOf(Banner)).call(this, props));
  }

  _createClass(Banner, [{
    key: "render",
    value: function render() {
      var imageSource = "public/images/ihtiyackredisi/ihtiyac-kredisi.png, public/images/ihtiyackredisi/ihtiyac-kredisi@2x.png 2x";
      var textClassName = '';
      var blockClassName = "banner image-top";
      var imgClassName = "lazyload img-fluid banner-img";

      if (this.props.firm === "dugun") {
        imageSource = "public/images/ihtiyackredisi/ihtiyac-kredisi-duguncom.png";
        textClassName = "gray-color";
        blockClassName = "banner image-top transparent-bg firm1";
        imgClassName = "lazyload img-fluid banner-img firm1";
      }

      if (this.props.firm === "londonist") {
        imageSource = "public/images/ihtiyackredisi/ihtiyac-kredisi-londonist.png";
        blockClassName = "banner image-top transparent-bg ";
        imgClassName = "lazyload img-fluid banner-img firm2";
      }

      return _react2.default.createElement(
        "div",
        { className: blockClassName },
        _react2.default.createElement(
          "div",
          { className: "container-v2 position-relative" },
          _react2.default.createElement("h1", { dangerouslySetInnerHTML: { __html: this.props.headerText }, className: textClassName }),
          _react2.default.createElement(
            "picture",
            null,
            _react2.default.createElement("source", {
              "data-srcset": imageSource,
              "data-src": "public/images/ihtiyackredisi/transparent.png"
            }),
            _react2.default.createElement("img", {
              alt: "banner",
              className: imgClassName,
              "data-src": imageSource,
              src: "public/images/ihtiyackredisi/transparent.png"
            })
          )
        )
      );
    }
  }]);

  return Banner;
}(_webcore.BappBase);

Banner.propTypes = {
  firm: _propTypes2.default.string,
  headerText: _propTypes2.default.string
};

exports.default = Banner;

/***/ }),

/***/ "oAV5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.createUniqueId = createUniqueId;
exports.addThousandSeparator = addThousandSeparator;
exports.getDayMonthYearFromStr = getDayMonthYearFromStr;
exports.isValidDate = isValidDate;
exports.loadCDIScripts = loadCDIScripts;
exports.unloadCDIScripts = unloadCDIScripts;
exports.loadIovationScripts = loadIovationScripts;
exports.unloadIovationScripts = unloadIovationScripts;
exports.getUrlParameter = getUrlParameter;
exports.getQuerystringValue = getQuerystringValue;
exports.checkEmail = checkEmail;
exports.getValidIban = getValidIban;
exports.isNullOrEmpty = isNullOrEmpty;
exports.isObjectNullOrEmpty = isObjectNullOrEmpty;
exports.readCookieDeviceTag = readCookieDeviceTag;
exports.readCookieSessionSid = readCookieSessionSid;
exports.createUUID = createUUID;
exports.isMobileDevice = isMobileDevice;

var _utils = __webpack_require__("FOo0");

var _constants = __webpack_require__("FN8c");

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createUniqueId() {
  var now = new Date();
  var id = now.getFullYear().toString().concat(now.getMonth(), now.getDate(), now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds());

  return id;
}

/**
 * Verilen sayÄ±ya TÃ¼rkiye formatÄ±na uygun binler ayÄ±racÄ± (.) ekler.
 * @param {*} originalAmt
 * @param {*} addDecimal
 * @param {*} originalAmtDecimalSeparator originalAmt'de ondalÄ±k ayÄ±racÄ±nÄ±n ne olduÄunu belirtir (Tr: ,(virgÃ¼l) / Eng: . (nokta))
 * @returns Binler ayÄ±racÄ± eklenmiÅ string. Ãrn: 1.234.567 veya 1.234.567,90
 */
function addThousandSeparator(originalAmt) {
  var addDecimal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var originalAmtDecimalSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';

  var strOrgAmt = originalAmt.toString();
  var intPart = void 0,
      decimalPart = "";
  var containsDecimal = strOrgAmt.search(new RegExp('\\' + originalAmtDecimalSeparator + '\\d+', 'gi')) >= 0;
  if (containsDecimal) {
    var parts = strOrgAmt.split(originalAmtDecimalSeparator);
    intPart = parts[0];
    decimalPart = parts[1].length < 2 ? parts[1] + "0" : parts[1];
  } else {
    intPart = strOrgAmt;
    decimalPart = "00";
  }
  var result = intPart.replace(/\B(?=(\d{3})+(?!\d))/g, ".");
  if (addDecimal) {
    return result + "," + decimalPart;
  }

  return result;
}

/**
 * metinden gÃ¼n, ay ve yÄ±l bilgisini parse edip bir obje olarak dÃ¶ndÃ¼rÃ¼r
 * @param {string} str ddMMyyyy veya dd/MM/yyyy Åeklinde string deÄer
 */
function getDayMonthYearFromStr(str) {
  var day = '';
  var month = '';
  var year = '';

  if (str.length == 8) {
    day = str.substr(0, 2);
    month = str.substr(2, 2);
    year = str.substr(4, 4);
  } else if (str.length == 10) {
    day = str.substr(0, 2);
    month = str.substr(3, 2);
    year = str.substr(6, 4);
  } else {
    throw 'str does not have a valid date format. valid format is ddMMyyyy or dd/MM/yyyy';
  }
  return {
    day: day,
    month: month,
    year: year
  };
}

/**
 * Verilen gÃ¼n, ay ve yÄ±l bilgisinin geÃ§erli bir tarih olup olmadÄ±ÄÄ±nÄ± dÃ¶ner
 * Ãrnek: isValidDate(30,2,2021) -> false
 */
function isValidDate(day, month, year) {
  if (year < 1000 || year > 3000 || month == 0 || month > 12) return false;

  var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

  // Adjust for leap years
  if (year % 400 == 0 || year % 100 != 0 && year % 4 == 0) monthLength[1] = 29;

  // Check the range of the day
  return day > 0 && day <= monthLength[month - 1];
}

function loadCDIScripts() {
  if (_constants.CDI_SCRIPT_URL) (0, _utils.load3rdPartyScriptAndAppendToBody)(_constants.CDI_SCRIPT_URL, true);
}

function unloadCDIScripts() {
  if (_constants.CDI_SCRIPT_URL) (0, _utils.unload3rdPartyScript)(_constants.CDI_SCRIPT_URL);
}

function loadIovationScripts() {
  if (_constants.IOVATION_SCRIPT_URL) {
    (0, _utils.load3rdPartyScriptAndAppendToBody)(_constants.IOVATION_SCRIPT_URL, true);
    (0, _utils.load3rdPartyScriptAndAppendToBody)("https://internetsubesi.akbank.com/WebApplication.UI/Content/js/static_wdp.js", true);
    (0, _utils.load3rdPartyScriptAndAppendToBody)("https://internetsubesi.akbank.com/WebApplication.UI/iojs/dyn_wdp.js", true);
  }
}

function unloadIovationScripts() {
  if (_constants.IOVATION_SCRIPT_URL) {
    (0, _utils.unload3rdPartyScript)("https://internetsubesi.akbank.com/WebApplication.UI/iojs/dyn_wdp.js");
    (0, _utils.unload3rdPartyScript)("https://internetsubesi.akbank.com/WebApplication.UI/Content/js/static_wdp.js");
    (0, _utils.unload3rdPartyScript)(_constants.IOVATION_SCRIPT_URL);
  }
}

function getUrlParameter(name) {
  name = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
  var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
  var results = regex.exec(location.search);
  return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
}

function getQuerystringValue(objAllParams, paramsToSearch) {
  if (objAllParams) {
    var keys = Object.keys(objAllParams);
    for (var i = 0; i < keys.length; i++) {
      var k = keys[i];
      if (k.toLowerCase() == paramsToSearch.toLowerCase()) {
        return objAllParams[k];
      }
    }
  }
}

var hasValue = function hasValue(value) {
  if (value === null || value === undefined || value === "") {
    return false;
  } else {
    return true;
  }
};

function checkEmail(message) {
  return function (value, props) {
    var EMAIL_MESSAGE = "Bu alan eposta format\u0131nda olmal\u0131d\u0131r";
    if (hasValue(value) && !/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i.test(value)) {
      return _react2.default.createElement("span", { className: "form-error is-visible" }, message || EMAIL_MESSAGE);
    }
  };
}

function getValidIban(text) {
  if (text) {
    var isTRPrefixControl = false;

    var trIndexs = text.toLowerCase().lastIndexOf("tr");
    text = text.replace(/ /g, '');
    text = text.substring(trIndexs, text.length);
    var textControl = text.substring(0, 2);
    textControl = textControl.toUpperCase();
    if (textControl == "TR") {
      isTRPrefixControl = true;
    }
    text = text.replace(/[~\-+<>_|Ã¦Ã"!.`Â½{}:,Â£';@#$%^&*()?Ã¼ÃÅÅÃ¶ÃÃ§ÃÄ°Ä±]/g, '');

    if (!isTRPrefixControl) {
      text = "TR" + text;
    }
    if (text.length > 26) {
      text = text.substring(0, 26);
    }
    return text;
  }
}

function isNullOrEmpty(val) {
  if (typeof val === 'undefined' || val === null || val === '') {
    return true;
  }
  return false;
}

function isObjectNullOrEmpty(obj) {
  for (var i in obj) {
    return false;
  }
  return true;
}

/**
* Cookie'deki device tag (tttSFCbKlF) deÄerini okur
* @returns {string} device tag
*/
function readCookieDeviceTag() {
  var deviceTag = null;
  var cookie = document.cookie; // eslint-disable-line
  if (cookie !== "" && (typeof cookie === "undefined" ? "undefined" : _typeof(cookie)) !== ( true ? "undefined" : _typeof(undefined))) {
    var splittedCookie = cookie.split(";");
    if (splittedCookie !== "" && (typeof splittedCookie === "undefined" ? "undefined" : _typeof(splittedCookie)) !== ( true ? "undefined" : _typeof(undefined)) && splittedCookie.length > 0) {
      for (var i = 0; i < splittedCookie.length; i++) {
        var cookieValues = splittedCookie[i].split("=");
        if (cookieValues !== "" && (typeof cookieValues === "undefined" ? "undefined" : _typeof(cookieValues)) !== ( true ? "undefined" : _typeof(undefined))) {
          if (cookieValues[0].replace(" ", "") === "tttSFCbKlF") {
            deviceTag = cookieValues[1];
            break;
          }
        }
      }
    }
  }
  return deviceTag;
}

/**
* Cookie'deki session sid deÄerini okur
* @returns {string} session sid
*/
function readCookieSessionSid(cookieName) {
  var sessionSid = null;
  var cookie = document.cookie; // eslint-disable-line
  if (cookie !== "" && (typeof cookie === "undefined" ? "undefined" : _typeof(cookie)) !== ( true ? "undefined" : _typeof(undefined))) {
    var splittedCookie = cookie.split(";");
    if (splittedCookie !== "" && (typeof splittedCookie === "undefined" ? "undefined" : _typeof(splittedCookie)) !== ( true ? "undefined" : _typeof(undefined)) && splittedCookie.length > 0) {
      for (var i = 0; i < splittedCookie.length; i++) {
        var cookieValues = splittedCookie[i].split("=");
        if (cookieValues !== "" && (typeof cookieValues === "undefined" ? "undefined" : _typeof(cookieValues)) !== ( true ? "undefined" : _typeof(undefined))) {
          if (cookieValues[0].replace(" ", "") === cookieName) {
            sessionSid = cookieValues[1];
            break;
          }
        }
      }
    }
  }
  return sessionSid;
}

function createUUID() {
  var dt = new Date().getTime();
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = (dt + Math.random() * 16) % 16 | 0; // eslint-disable-line
    dt = Math.floor(dt / 16);
    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16); // eslint-disable-line
  });

  return uuid;
}

function isMobileDevice() {
  /*eslint-disable */
  var check = false;
  (function (a) {
    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true;
  })(navigator.userAgent || navigator.vendor || window.opera);
  return check;
  /*eslint-enable */
}

/***/ }),

/***/ "okEX":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = __webpack_require__("FOo0");

var _textfield = __webpack_require__("8WwK");

var _textfield2 = _interopRequireDefault(_textfield);

__webpack_require__("ipFE");

var _select = __webpack_require__("qjcq");

var _select2 = _interopRequireDefault(_select);

__webpack_require__("WCkl");

var _amountreview = __webpack_require__("zmhh");

var _amountreview2 = _interopRequireDefault(_amountreview);

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _validations = __webpack_require__("2Bql");

__webpack_require__("cDD6");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Amount = function (_AbstractNested) {
  _inherits(Amount, _AbstractNested);

  function Amount(props) {
    _classCallCheck(this, Amount);

    var _this = _possibleConstructorReturn(this, (Amount.__proto__ || Object.getPrototypeOf(Amount)).call(this, props));

    _this.state = {
      amount: {
        integerValue: 0,
        decimalValue: 0
      },
      currency: {
        value: "888",
        label: "TL"
      }
    };

    _this.handleIntegerPartChange = _this.handleIntegerPartChange.bind(_this);
    _this.handleDecimalPartChange = _this.handleDecimalPartChange.bind(_this);
    _this.handleDecimalPartBlur = _this.handleDecimalPartBlur.bind(_this);
    _this.numberWithCommas = _this.numberWithCommas.bind(_this);
    _this.calculateMaxLength = _this.calculateMaxLength.bind(_this);
    _this.handlePickerChange = _this.handlePickerChange.bind(_this);
    return _this;
  }

  _createClass(Amount, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props && this.props.value ? this.initialise(this.props.value) : "";
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.value !== this.props.value) {
        this.initialise(nextProps.value == null ? 0 : nextProps.value);
      }
    }
  }, {
    key: "initialise",
    value: function initialise(value) {
      if (value) {
        var amountValue = value.amount.toString().replace(/,/g, ".");
        var currency = value.currency;
        if (amountValue.indexOf(".") >= 0) {
          this.setState({
            amount: {
              integerValue: parseInt(amountValue.split(".")[0]),
              decimalValue: amountValue.split(".")[1]
            }
          });
        } else {
          this.setState({
            amount: {
              integerValue: amountValue,
              decimalValue: 0
            }
          });
        }

        if (currency) {
          var filteredValue = this.props.currencyList.filter(function (options) {
            return options.value === currency.value;
          });

          if (filteredValue && filteredValue.length > 0) {
            this.setState({
              currency: filteredValue[0]
            });
          }
        }
      } else {
        this.setState({
          amount: {
            integerValue: 0,
            decimalValue: 0
          }
        });
      }
    }
  }, {
    key: "handleIntegerPartChange",
    value: function handleIntegerPartChange(event) {
      var eventValue = event.target.value == "" ? 0 : event.target.value.replace(/\./g, "").replace(/[^0-9]+/, "");

      var amount = parseInt(eventValue) + parseFloat("." + this.state.amount.decimalValue);
      var value = { amount: amount, currency: this.state.currency };

      if (this.props.onChange) {
        this.props.onChange(event, value);
      }
    }
  }, {
    key: "handleDecimalPartChange",
    value: function handleDecimalPartChange(event) {
      var eventValue = event.target.value == "" ? 0 : event.target.value.replace(/\./g, "").replace(/[^0-9]+/, "");
      var amount = parseInt(this.state.amount.integerValue) + parseFloat("." + eventValue.toString());
      var value = { amount: amount, currency: this.state.currency };

      if (this.props.onChange) {
        this.props.onChange(event, value);
      }
    }
  }, {
    key: "handleDecimalPartBlur",
    value: function handleDecimalPartBlur(event) {
      this.setState(function (previousState, currentProps) {
        return {
          amount: {
            integerValue: previousState.amount.integerValue,
            decimalValue: previousState.amount.decimalValue.length == 1 ? previousState.amount.decimalValue + "0" : previousState.amount.decimalValue
          }
        };
      });
    }
  }, {
    key: "numberWithCommas",
    value: function numberWithCommas(value) {
      return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    }
  }, {
    key: "calculateMaxLength",
    value: function calculateMaxLength(maxLength) {
      if (maxLength == 0) {
        return 0;
      } else {
        if (maxLength % 3 == 0) {
          return maxLength + parseInt(maxLength / 3) - 1;
        } else {
          return maxLength + parseInt(maxLength / 3);
        }
      }
    }
  }, {
    key: "handlePickerChange",
    value: function handlePickerChange(event, dataObj) {
      var _this2 = this;

      this.setState({ currency: dataObj }, function () {
        var amount = parseInt(_this2.state.amount.integerValue) + parseFloat("." + _this2.state.amount.decimalValue.toString());
        var value = { amount: amount, currency: _this2.state.currency };

        if (_this2.props.onChange) {
          _this2.props.onChange(event, value);
        }

        if (_this2.props.onCurrencyChange) {
          _this2.props.onCurrencyChange(dataObj);
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var amountClasses = (0, _classnames2.default)(this.props.className, "bapp-amount-container", {});
      var alignment = this.props.align === "left" ? "align-left" : "align-right";

      return _react2.default.createElement(
        _block2.default,
        { className: amountClasses },
        _react2.default.createElement(
          _block2.default,
          { className: "bapp-amount-whole" },
          _react2.default.createElement(
            _block2.default,
            { className: "bapp-input-container" },
            _react2.default.createElement(_textfield2.default, {
              partofform: false,
              placeholder: "00",
              type: "tel" /* type=number 7+ haneli sayÄ±larda binler ayÄ±racÄ±ndan dolayÄ± problem Ã§Ä±karÄ±yor*/
              , className: (0, _classnames2.default)("bapp-input", alignment),
              name: "amount",
              autoFocus: this.props.autoFocus,
              maxLength: this.calculateMaxLength(this.props.maxLength),
              onChange: this.handleIntegerPartChange,
              validator: _utils.RegexpTypes.Version /* Binler ayÄ±racÄ±nÄ± kabul etmesi iÃ§in Numeric yerine Version kullanmak gerekiyor */
              , value: this.state.amount.integerValue == 0 ? "" : this.numberWithCommas(this.state.amount.integerValue),
              label: this.props.label
            })
          )
        ),
        this.props.withDecimalPart && _react2.default.createElement(
          _block2.default,
          { className: "bapp-amount-decimal" },
          _react2.default.createElement(
            _block2.default,
            { className: "bapp-input-container" },
            _react2.default.createElement(_textfield2.default, {
              partofform: false,
              placeholder: "00",
              type: "tel",
              className: (0, _classnames2.default)("bapp-input", alignment),
              name: "decimals",
              maxLength: 2,
              onChange: this.handleDecimalPartChange,
              onBlur: this.handleDecimalPartBlur,
              validator: _utils.RegexpTypes.Version,
              value: this.state.amount.decimalValue == 0 ? "" : this.state.amount.decimalValue,
              label: this.props.labelDecimal
            })
          )
        ),
        this.props.withCurrency && this.props.currencyList && _react2.default.createElement(
          _block2.default,
          { className: "bapp-amount-currency" },
          this.props.currencyList.length > 1 ?
          // if render SELECT to currency
          _react2.default.createElement(_select2.default, {
            partofform: false,
            name: "select",
            value: this.state.currency.value,
            options: this.props.currencyList,
            onChange: this.handlePickerChange,
            clearable: false,
            backspaceRemoves: false
          }) :
          // else render input with readonly
          _react2.default.createElement(_textfield2.default, {
            partofform: false,
            placeholder: "TL",
            type: "text",
            name: "currency",
            readOnly: true,
            tabIndex: -1,
            value: this.props.currencyList[0].label,
            label: this.props.labelCurrency
          })
        )
      );
    }
  }]);

  return Amount;
}(_utils.AbstractNested);

Amount.propTypes = {
  id: _propTypes2.default.string,
  className: _propTypes2.default.string,
  value: _propTypes2.default.object,
  onChange: _propTypes2.default.func,
  onCurrencyChange: _propTypes2.default.func,
  maxLength: _propTypes2.default.number,
  withDecimalPart: _propTypes2.default.bool,
  withCurrency: _propTypes2.default.bool,
  currencyList: _propTypes2.default.array,
  autoFocus: _propTypes2.default.bool,
  align: _propTypes2.default.string,
  label: _propTypes2.default.string,
  labelDecimal: _propTypes2.default.string,
  labelCurrency: _propTypes2.default.string
};

Amount.defaultProps = {
  value: {
    amount: 0,
    currency: {
      value: "888",
      label: "TL"
    }
  },
  withDecimalPart: true,
  withCurrency: true,
  maxLength: 14,
  currencyList: [{ value: "888", label: "TL" }],
  align: "right"
  /*eslint-disable */
};Amount = (0, _utils.InputHOC)(Amount);
Amount.Review = _amountreview2.default;
Amount.requiredAmount = _validations.requiredAmount;
Amount.minValueAmount = _validations.minValueAmount;
Amount.maxValueAmount = _validations.maxValueAmount;
/*eslint-enable */
exports.default = Amount;

/***/ }),

/***/ "q3Gs":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _utils = __webpack_require__("FOo0");

var _classnames = __webpack_require__("HW6M");

var _classnames2 = _interopRequireDefault(_classnames);

var _message = __webpack_require__("+g8O");

var _message2 = _interopRequireDefault(_message);

__webpack_require__("4buR");

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _form = __webpack_require__("3kzJ");

var _form2 = _interopRequireDefault(_form);

__webpack_require__("2xzD");

var _label = __webpack_require__("79hd");

var _label2 = _interopRequireDefault(_label);

__webpack_require__("fLa5");

var _button = __webpack_require__("66uW");

var _button2 = _interopRequireDefault(_button);

__webpack_require__("jU+E");

var _link = __webpack_require__("sOPI");

var _link2 = _interopRequireDefault(_link);

__webpack_require__("USSv");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _otp = __webpack_require__("Mrtf");

var _otp2 = _interopRequireDefault(_otp);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

__webpack_require__("A46Q");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OtpModule = function (_React$Component) {
  _inherits(OtpModule, _React$Component);

  function OtpModule(props) {
    _classCallCheck(this, OtpModule);

    var _this = _possibleConstructorReturn(this, (OtpModule.__proto__ || Object.getPrototypeOf(OtpModule)).call(this, props));

    _this.state = {
      active: _this.props.active,
      resetTimer: false
    };

    _this.form = {};
    _this.autoTriggered = false;

    _this.handleTimeUp = _this.handleTimeUp.bind(_this);
    _this.handleResendClick = _this.handleResendClick.bind(_this);
    _this.handleChange = _this.handleChange.bind(_this);
    _this.handleSubmit = _this.handleSubmit.bind(_this);
    _this.resetTimer = _this.resetTimer.bind(_this);
    return _this;
  }

  _createClass(OtpModule, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps, nextContext) {
      var _this2 = this;

      if (nextProps.active !== this.props.active) {
        this.setState({ active: nextProps.active }, function () {
          _this2.resetTimer();
        });
      }

      if (nextProps.otpId !== this.props.otpId) {
        this.setState({ active: true }, function () {
          _this2.resetTimer();
        });
      }
    }
  }, {
    key: "handleTimeUp",
    value: function handleTimeUp() {
      this.setState({ active: false });
      if (this.props.onTimeUp) {
        this.props.onTimeUp();
      }
    }
  }, {
    key: "resetTimer",
    value: function resetTimer() {
      var _this3 = this;

      this.setState(function (prevState) {
        if (_this3.props.active) {
          return {
            resetTimer: !prevState.resetTimer
          };
        }
      });
    }
  }, {
    key: "handleResendClick",
    value: function handleResendClick() {
      this.autoTriggered = false;

      if (this.props.onResendClick) {
        this.props.onResendClick();
      }
    }
  }, {
    key: "handleChange",
    value: function handleChange(value) {
      if (value && value.length === 6 && this.props.autoTrigger && this.props.active && this.autoTriggered == false) {
        this.autoTriggered = true;
        this.handleSubmit(null, value);
      }
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit(e, otp) {
      if (e) {
        e.preventDefault();
      }

      if (this.form.validateAll()) {
        var otpValue = e ? otp.otp : otp;

        if (this.props.encrypt) {
          // aktivasyon, indigo projesinde index.html'de tanÄ±mlÄ± bir object
          aktivasyon.CreateRSAKey(this.props.pblExponent, this.props.pblModulus);
          otpValue = aktivasyon.RSAEncrypt(otpValue);
        }

        if (this.props.onSubmit) {
          this.props.onSubmit(otpValue);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      return _react2.default.createElement(
        _form2.default,
        {
          ref: function ref(c) {
            _this4.form = c;
          },
          shortLabels: true,
          onSubmit: this.handleSubmit
        },
        this.props.errorMessage && _react2.default.createElement(
          _message2.default,
          { id: "otpError", msgType: "error" },
          this.props.errorMessage
        ),
        this.props.designVersion === "1" && _react2.default.createElement(
          _panel2.default,
          {
            hasFooter: true,
            id: this.props.id,
            connected: this.props.connected,
            className: (0, _classnames2.default)(this.props.className)
          },
          _react2.default.createElement(
            _panel2.default.Header,
            { title: this.props.headerText },
            !this.state.active && _react2.default.createElement(_link2.default, {
              text: this.props.onResendText,
              iconName: _link2.default.Icons.refresh,
              onClick: this.handleResendClick
            })
          ),
          _react2.default.createElement(
            _panel2.default.Body,
            null,
            _react2.default.createElement(
              _form2.default.Row,
              null,
              this.props.otpIdText1ByType1 + this.props.phoneNumber.replace("009", "") + this.props.otpIdText2ByType1 + this.props.otpId + this.props.otpIdText3ByType1
            ),
            _react2.default.createElement(
              _form2.default.Group,
              { name: "OtpGroup", shortLabel: true },
              !this.props.label ? _react2.default.createElement(_label2.default, { text: this.props.labelText, id: "otp" }) : null,
              _react2.default.createElement(_otp2.default, {
                id: "otp",
                name: "otp",
                label: this.props.label,
                onChange: this.handleChange,
                onTimeUp: this.handleTimeUp,
                seconds: this.props.remainingTime,
                maxLength: 6,
                otpSecondsText: this.props.otpSecondsText,
                resetTimer: this.state.resetTimer,
                autoFocus: true,
                validations: [(0, _utils.required)(this.props.requiredError)]
              })
            )
          ),
          _react2.default.createElement(
            _panel2.default.Footer,
            null,
            _react2.default.createElement(
              _panel2.default.RightFooter,
              null,
              _react2.default.createElement(_button2.default, {
                id: "panel-action-button",
                text: this.props.onSubmitText,
                fetching: this.props.fetching,
                disabled: this.props.fetching || !this.state.active
              })
            )
          )
        ),
        this.props.designVersion === "2" && _react2.default.createElement(
          _panel2.default,
          {
            hasFooter: false,
            id: this.props.id,
            connected: this.props.connected,
            className: (0, _classnames2.default)(this.props.className)
          },
          _react2.default.createElement(
            _panel2.default.Body,
            { className: "bapp-panel-body-transparent" },
            _react2.default.createElement(
              _block2.default,
              { className: "bapp-panel-body-card" },
              _react2.default.createElement(
                _form2.default.Row,
                null,
                _react2.default.createElement(
                  _element2.default,
                  { type: "h2", className: "bapp-panel-body-card-title" },
                  this.props.otpIdText1ByType2 + this.props.otpId + this.props.otpIdText2ByType2
                )
              ),
              _react2.default.createElement(
                _form2.default.Row,
                null,
                _react2.default.createElement(
                  _element2.default,
                  { type: "p", className: "bapp-panel-body-card-description" },
                  this.props.otpPhoneNumberText1ByType2 + this.props.phoneNumber.replace("009", "") + this.props.otpPhoneNumberText2ByType2
                )
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { name: "OtpGroup", shortLabel: true },
                !this.props.label ? _react2.default.createElement(_label2.default, { text: this.props.labelText, id: "otp" }) : null,
                _react2.default.createElement(_otp2.default, {
                  id: "otp",
                  name: "otp",
                  label: this.props.label,
                  onChange: this.handleChange,
                  onTimeUp: this.handleTimeUp,
                  seconds: this.props.remainingTime,
                  maxLength: 6,
                  otpSecondsText: this.props.otpSecondsText,
                  resetTimer: this.state.resetTimer,
                  autoFocus: true,
                  validations: [(0, _utils.required)(this.props.requiredError)]
                })
              )
            ),
            _react2.default.createElement(
              _form2.default.Group,
              { className: "form-action-row" },
              !this.state.active && _react2.default.createElement(_link2.default, {
                text: this.props.onResendText,
                iconName: _link2.default.Icons.refresh,
                onClick: this.handleResendClick,
                className: "smsotp-footer-resend-link"
              }),
              _react2.default.createElement(_button2.default, {
                id: "panel-action-button",
                text: this.props.onSubmitText,
                fetching: this.props.fetching,
                disabled: this.props.fetching || !this.state.active
              })
            )
          )
        )
      );
    }
  }]);

  return OtpModule;
}(_react2.default.Component);

OtpModule.propTypes = {
  id: _propTypes2.default.string,
  className: _propTypes2.default.string,
  phoneNumber: _propTypes2.default.string,
  otpId: _propTypes2.default.string,
  fetching: _propTypes2.default.bool,
  autoTrigger: _propTypes2.default.bool,
  errorMessage: _propTypes2.default.string,
  connected: _propTypes2.default.bool,
  active: _propTypes2.default.bool,
  remainingTime: _propTypes2.default.number,
  pblExponent: _propTypes2.default.string,
  pblModulus: _propTypes2.default.string,
  onTimeUp: _propTypes2.default.func,
  encrypt: _propTypes2.default.bool,
  onResendClick: _propTypes2.default.func,
  onSubmit: _propTypes2.default.func,
  designVersion: _propTypes2.default.string,
  label: _propTypes2.default.string
};

OtpModule.defaultProps = {
  connected: false,
  phoneNumber: "",
  remainingTime: 60,
  otpId: "",
  encrypt: true,
  active: true,
  designVersion: "1",
  otpSecondsText: "sn Kalan SÃ¼re",
  requiredError: "LÃ¼tfen telefonunuza gelen Cep Åifreyi giriniz.",
  onResendText: "Tekrar GÃ¶nder",
  headerText: "Cep Åifre",
  labelText: "Åifre",
  onSubmitText: "Devam",
  otpIdText1ByType2: "",
  otpIdText2ByType2: " numaralÄ± Cep Åifre'ni gir",
  otpPhoneNumberText1ByType2: "",
  otpPhoneNumberText2ByType2: " numaralÄ± telefonuna gÃ¶nderdik.",
  otpIdText1ByType1: "LÃ¼tfen ",
  otpIdText2ByType1: " numaralÄ± telefonunuza gelen ",
  otpIdText3ByType1: " numaralÄ± Cep Åifre'yi aÅaÄÄ±da belirtilen sÃ¼re iÃ§erisinde girerek Devam tuÅuna basÄ±nÄ±z."
};

exports.default = OtpModule;

/***/ }),

/***/ "qARP":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__("lOnJ");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "qkKv":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("FeBl");
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),

/***/ "qqsW":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _webcore = __webpack_require__("9EQB");

var _reactRedux = __webpack_require__("RH2O");

var _image = __webpack_require__("2+7Y");

var _image2 = _interopRequireDefault(_image);

__webpack_require__("T7MV");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _utils = __webpack_require__("FOo0");

__webpack_require__("sleA");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var InviteToBranch = function (_BappBase) {
  _inherits(InviteToBranch, _BappBase);

  function InviteToBranch(props) {
    _classCallCheck(this, InviteToBranch);

    return _possibleConstructorReturn(this, (InviteToBranch.__proto__ || Object.getPrototypeOf(InviteToBranch)).call(this, props));
  }

  _createClass(InviteToBranch, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/subeye-davet",
        pageTitle: "HÄ±zlÄ± Ä°htiyaÃ§ Kredisi"
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _block2.default,
        null,
        _react2.default.createElement(
          _panel2.default,
          { hasFooter: false },
          _react2.default.createElement(
            _panel2.default.Body,
            null,
            _react2.default.createElement(
              _react2.default.Fragment,
              null,
              _react2.default.createElement(_image2.default, { path: "public/images/common/illustrations/illustrations-alert.svg", className: "result-img" }),
              _react2.default.createElement(
                _element2.default,
                { type: "h2" },
                this.props.inviteToBranchErrMsg
              )
            )
          )
        )
      );
    }
  }]);

  return InviteToBranch;
}(_webcore.BappBase);

function mapStateToProps(state, ownProps) {
  return {
    inviteToBranchErrMsg: state.ihtiyacKredisiState.inviteToBranchErrMsg
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(InviteToBranch);

/***/ }),

/***/ "qyJz":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__("+ZMJ");
var $export = __webpack_require__("kM2E");
var toObject = __webpack_require__("sB3e");
var call = __webpack_require__("msXi");
var isArrayIter = __webpack_require__("Mhyx");
var toLength = __webpack_require__("QRG4");
var createProperty = __webpack_require__("fBQ2");
var getIterFn = __webpack_require__("3fs2");

$export($export.S + $export.F * !__webpack_require__("dY0y")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "rGbO":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("HIVZ")


/***/ }),

/***/ "rPdZ":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Helpers = exports.ScrollElement = exports.ScrollLink = exports.animateScroll = exports.scrollSpy = exports.Events = exports.scroller = exports.Element = exports.Button = exports.Link = undefined;

var _Link = __webpack_require__("Oj4Q");

var _Link2 = _interopRequireDefault(_Link);

var _Button = __webpack_require__("kUO7");

var _Button2 = _interopRequireDefault(_Button);

var _Element = __webpack_require__("E8bV");

var _Element2 = _interopRequireDefault(_Element);

var _scroller = __webpack_require__("ak1w");

var _scroller2 = _interopRequireDefault(_scroller);

var _scrollEvents = __webpack_require__("xafY");

var _scrollEvents2 = _interopRequireDefault(_scrollEvents);

var _scrollSpy = __webpack_require__("iox6");

var _scrollSpy2 = _interopRequireDefault(_scrollSpy);

var _animateScroll = __webpack_require__("VJPP");

var _animateScroll2 = _interopRequireDefault(_animateScroll);

var _scrollLink = __webpack_require__("YuRK");

var _scrollLink2 = _interopRequireDefault(_scrollLink);

var _scrollElement = __webpack_require__("WQ+4");

var _scrollElement2 = _interopRequireDefault(_scrollElement);

var _Helpers = __webpack_require__("Vflq");

var _Helpers2 = _interopRequireDefault(_Helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Link = _Link2.default;
exports.Button = _Button2.default;
exports.Element = _Element2.default;
exports.scroller = _scroller2.default;
exports.Events = _scrollEvents2.default;
exports.scrollSpy = _scrollSpy2.default;
exports.animateScroll = _animateScroll2.default;
exports.ScrollLink = _scrollLink2.default;
exports.ScrollElement = _scrollElement2.default;
exports.Helpers = _Helpers2.default;
exports.default = { Link: _Link2.default, Button: _Button2.default, Element: _Element2.default, scroller: _scroller2.default, Events: _scrollEvents2.default, scrollSpy: _scrollSpy2.default, animateScroll: _animateScroll2.default, ScrollLink: _scrollLink2.default, ScrollElement: _scrollElement2.default, Helpers: _Helpers2.default };

/***/ }),

/***/ "rprB":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function (str) {
	return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
		return '%' + c.charCodeAt(0).toString(16).toUpperCase();
	});
};


/***/ }),

/***/ "sGP0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint-disable react/prop-types */

var React = __webpack_require__("GiK3");

var Component = React.Component;

var AppContainer = function (_Component) {
  _inherits(AppContainer, _Component);

  function AppContainer() {
    _classCallCheck(this, AppContainer);

    return _possibleConstructorReturn(this, (AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).apply(this, arguments));
  }

  _createClass(AppContainer, [{
    key: 'render',
    value: function render() {
      if (this.props.component) {
        return React.createElement(this.props.component, this.props.props);
      }

      return React.Children.only(this.props.children);
    }
  }]);

  return AppContainer;
}(Component);

module.exports = AppContainer;

/***/ }),

/***/ "seSm":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _queryString = __webpack_require__("OAwv");

var _queryString2 = _interopRequireDefault(_queryString);

var _utils = __webpack_require__("FOo0");

var _banner = __webpack_require__("o846");

var _banner2 = _interopRequireDefault(_banner);

var _formv = __webpack_require__("D2rl");

var _formv2 = _interopRequireDefault(_formv);

var _infoboxes = __webpack_require__("Sfkl");

var _infoboxes2 = _interopRequireDefault(_infoboxes);

var _faqlist = __webpack_require__("1vP6");

var _faqlist2 = _interopRequireDefault(_faqlist);

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

__webpack_require__("bqyg");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Landing = function (_BappBase) {
  _inherits(Landing, _BappBase);

  function Landing(props, context) {
    _classCallCheck(this, Landing);

    var _this = _possibleConstructorReturn(this, (Landing.__proto__ || Object.getPrototypeOf(Landing)).call(this, props, context));

    _this.handleHata = function (isError) {
      _this.setState({ showErrorMsg: isError });
    };

    _this.state = {
      firm: '',
      infoboxText: '',
      sssList: '',
      headerText: '',
      calcDetailsText: '',
      showErrorMsg: false
    };

    var params = _queryString2.default.parse(_this.props.location.search);
    var version = _this.getQuerystringValue(params, "v");
    _this.showCalculateForm = version == "1" || version == undefined ? true : false;

    var cid = _this.getQuerystringValue(params, "cid");
    _ihtiyackredisistate2.default.setCid(cid);

    var p = _this.getQuerystringValue(params, "p");
    _ihtiyackredisistate2.default.setp(p);

    var firm = _this.getQuerystringValue(params, "firm");

    _this.state = {
      firm: firm ? firm.toLowerCase() : '',
      infoboxText: '',
      sssList: '',
      headerText: ''
    };
    return _this;
  }

  _createClass(Landing, [{
    key: "getQuerystringValue",
    value: function getQuerystringValue(objAllParams, paramsToSearch) {
      if (objAllParams) {
        var keys = Object.keys(objAllParams);
        for (var i = 0; i < keys.length; i++) {
          var k = keys[i];
          if (k.toLowerCase() == paramsToSearch.toLowerCase()) {
            return objAllParams[k];
          }
        }
      }
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      var headerTextKey = 'WebCredit.Landing.HeaderText.v2';
      if (this.state.firm) {
        headerTextKey = headerTextKey + '.' + this.state.firm;
      }
      _ihtiyackredisistate2.default.getConfig(headerTextKey).then(function (response) {
        if (response && !response.error) {
          _this2.setState({
            headerText: response.configValue
          });
        }
      });

      _ihtiyackredisistate2.default.getConfig('WebCredit.Landing.Infobox.v2').then(function (response) {
        if (response && !response.error) {
          _this2.setState({
            infoboxText: response.configValue
          });
        }
      });

      _ihtiyackredisistate2.default.getConfig('WebCredit.Landing.Faq.v2').then(function (response) {
        if (response && !response.error) {
          _this2.setState({
            sssList: response.configValue
          });
        }
      });

      _ihtiyackredisistate2.default.getConfig('WebCredit.Landing.CalcDetails.Text.v2').then(function (response) {
        if (response && !response.error) {
          _this2.setState({
            calcDetailsText: response.configValue
          });
        }
      });

      // TODO: fmtMaxTutar iÃ§in Ã¼rÃ¼nlerin maks tutarÄ±nÄ± almak gerekiyor. Fakat getProductInfo formv2'nin iÃ§inde
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: 'hizli_ihtiyac_kredisi',
        pageName: '/basvuru/hizli-ihtiyac-kredisi/0/landing',
        pageTitle: 'HÄ±zlÄ± Ä°htiyaÃ§ Kredisi'
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _react2.default.Fragment,
        null,
        !this.state.showErrorMsg && _react2.default.createElement(
          "div",
          { className: "sticky" },
          _react2.default.createElement(
            "div",
            { className: "container" },
            _react2.default.createElement(
              "div",
              { className: "content" },
              _react2.default.createElement(
                "div",
                { className: "text" },
                _react2.default.createElement(
                  "h3",
                  null,
                  "Hemen Ba\u015Fvur"
                ),
                _react2.default.createElement(
                  "p",
                  null,
                  "Ba\u015Fvuru s\xFCrecini online olarak sadece bir ka\xE7 dakika i\xE7inde kolayca tamamlayabilirsiniz."
                )
              ),
              _react2.default.createElement(
                "a",
                { className: "btn btn-white btn-scroll-top", href: "#inputArea" },
                "Ba\u015Fvuruyu Ba\u015Flat"
              )
            )
          )
        ),
        _react2.default.createElement(_banner2.default, { firm: this.state.firm, headerText: this.state.headerText }),
        _react2.default.createElement(
          "main",
          null,
          _react2.default.createElement(_formv2.default, { amountOrVadeError: this.handleHata }),
          _react2.default.createElement(_infoboxes2.default, { infoboxText: this.state.infoboxText, calcDetailsText: this.state.calcDetailsText }),
          _react2.default.createElement(_faqlist2.default, { list: this.state.sssList, fmtMaxTutar: "" })
        )
      );
    }
  }]);

  return Landing;
}(_webcore.BappBase);

function mapStateToProps(state, ownProps) {
  return {
    showCalcDetails: state.ihtiyacKredisiState.showCalcDetails,
    cid: state.ihtiyacKredisiState.cid,
    d: state.ihtiyacKredisiState.d,
    firm: state.ihtiyacKredisiState.firm
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(Landing);

/***/ }),

/***/ "sleA":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "t8x9":
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__("77Pl");
var aFunction = __webpack_require__("lOnJ");
var SPECIES = __webpack_require__("dSzd")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "tP4Q":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _webcore = __webpack_require__("9EQB");

var _utils = __webpack_require__("FOo0");

var _block = __webpack_require__("QPkm");

var _block2 = _interopRequireDefault(_block);

var _form = __webpack_require__("3kzJ");

var _form2 = _interopRequireDefault(_form);

__webpack_require__("2xzD");

var _textfield = __webpack_require__("8WwK");

var _textfield2 = _interopRequireDefault(_textfield);

__webpack_require__("ipFE");

var _message = __webpack_require__("+g8O");

var _message2 = _interopRequireDefault(_message);

__webpack_require__("4buR");

var _label = __webpack_require__("79hd");

var _label2 = _interopRequireDefault(_label);

__webpack_require__("fLa5");

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _checkbox = __webpack_require__("7SIJ");

var _checkbox2 = _interopRequireDefault(_checkbox);

__webpack_require__("tZVn");

var _element = __webpack_require__("zsCM");

var _element2 = _interopRequireDefault(_element);

var _button = __webpack_require__("66uW");

var _button2 = _interopRequireDefault(_button);

__webpack_require__("jU+E");

var _link = __webpack_require__("sOPI");

var _link2 = _interopRequireDefault(_link);

__webpack_require__("USSv");

var _captcha = __webpack_require__("TdZ8");

var _captcha2 = _interopRequireDefault(_captcha);

var _ihtiyackredisistate = __webpack_require__("Uz2g");

var _ihtiyackredisistate2 = _interopRequireDefault(_ihtiyackredisistate);

var _utils2 = __webpack_require__("oAV5");

var Utils = _interopRequireWildcard(_utils2);

var _constants = __webpack_require__("iRmV");

var Constants = _interopRequireWildcard(_constants);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var InitialInfo = (_class = function (_BappBase) {
  _inherits(InitialInfo, _BappBase);

  function InitialInfo(props) {
    _classCallCheck(this, InitialInfo);

    var _this = _possibleConstructorReturn(this, (InitialInfo.__proto__ || Object.getPrototypeOf(InitialInfo)).call(this, props));

    var varsToRemember = {
      tckn: "",
      birthDate: "",
      phone: "",
      showCaptcha: false,
      kvkk: false,
      captcha: "",
      didReturnBack: false,
      amount: props.amount ? props.amount : 10000,
      productType: props.productType,
      vade: props.vade ? props.vade : 12
      /*
      InitialInfo ile AmountEntry'de girilen deÄerler applicationInit()'te kontrol ediliyor.
      Buradan alÄ±nacak hatalarÄ±n daha Ã§ok tckn ve telefon numarasÄ± ile ilgili olacaÄÄ±nÄ± dÃ¼ÅÃ¼ndÃ¼ÄÃ¼mÃ¼z iÃ§in servis Ã§aÄrÄ±sÄ± sonrasÄ±nda
      AmountEntry'den buraya dÃ¶nÃ¼yoruz. GirilmiÅ olan deÄerleri de location.state'ten alacaÄÄ±z:
      (NOT: ArtÄ±k AmountEntry'den dÃ¶nÃ¼lmÃ¼yor, aÅaÄÄ±da bloÄa girmesini beklemiyoruz)
      */
    };if (props.location && props.location.state) {
      varsToRemember = {
        tckn: props.location.state.tckn,
        birthDate: props.location.state.birthDate,
        phone: props.location.state.phone,
        showCaptcha: true,
        kvkk: props.location.state.kvkk,
        amount: props.location.state.amount,
        productType: props.location.state.productType,
        vade: props.location.state.vade,
        didReturnBack: true
      };
    }

    _this.state = _extends({}, varsToRemember, {
      captcha: ""
    });
    return _this;
  }

  _createClass(InitialInfo, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _utils.pushGtmValues)({
        event: "virtual_page_view",
        content_group: "hizli_ihtiyac_kredisi",
        pageName: "/basvuru/hizli-ihtiyac-kredisi/1/tckn-ceptel",
        pageTitle: 'HÄ±zlÄ± Ä°htiyaÃ§ Kredisi'
      });
      Utils.loadCDIScripts();

      // EÄer AmountEntry'den geri dÃ¶ndÃ¼ ise Catptcha ve Kvkk uyarÄ±larÄ±nÄ± Ã§Ä±kar (DiÄer formlarÄ±mÄ±zla uyumlu olmasÄ± iÃ§in)
      if (this.state.didReturnBack) {
        this.form.validateAll();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      Utils.unloadCDIScripts();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevProps.tokenSessionId != this.props.tokenSessionId && this.props.tokenSessionId) {
        this.tokenCreated = true;
        _ihtiyackredisistate2.default.createCaptcha({
          tckn: this.state.tckn,
          tokenSessionId: this.props.tokenSessionId
        });
      }
      if (prevProps.captchaData != this.props.captchaData) {
        this.setState({ showCaptcha: true, kvkk: false, captcha: '' }); // eslint-disable-line
      }
    }
  }, {
    key: "handleInputChange",
    value: function handleInputChange(meta) {
      if (meta && meta.hasOwnProperty('tckn') && meta.tckn != this.state.tckn) {
        this.setState({ tckn: meta.tckn });
        if (meta.tckn.length === 11) {
          _ihtiyackredisistate2.default.createToken({ tckn: meta.tckn });
        }
      }

      if (meta && meta.hasOwnProperty('birthDate') && meta.birthDate != this.state.birthDate) {
        this.setState({ birthDate: meta.birthDate });
      }

      if (meta && meta.hasOwnProperty('kvkk') && meta.kvkk != this.state.kvkk) {
        this.setState({ kvkk: meta.kvkk });
      }

      if (meta && meta.hasOwnProperty('captcha') && meta.captcha != this.state.captcha) {
        this.setState({ captcha: meta.captcha });
      }
    }
  }, {
    key: "handleCaptchaRefresh",
    value: function handleCaptchaRefresh() {
      _ihtiyackredisistate2.default.refreshCaptcha({
        tckn: this.state.tckn,
        tokenSessionId: this.props.tokenSessionId
      });
    }
  }, {
    key: "handleSubmit",
    value: function handleSubmit(eventArgs, formValues) {
      var _this2 = this;

      if (formValues.tckn && formValues.tckn.length === 11 && formValues.kvkk) {
        formValues.captcha = formValues.captcha ? formValues.captcha.toUpperCase() : "";
        var birthDate = Utils.getDayMonthYearFromStr(formValues.birthDate);

        _ihtiyackredisistate2.default.applicationInit({
          tckn: formValues.tckn,
          birthDay: birthDate.day,
          birthMonth: birthDate.month,
          birthYear: birthDate.year,
          phone: formValues.phone,
          captcha: formValues.captcha,
          kvkk: formValues.kvkk,
          callCenter: true,
          p: this.props.p,
          tutar: this.state.amount,
          vade: this.state.vade,
          urunTip: this.state.productType,
          isCovid19: this.props.isCovid19,
          cid: this.props.cid,
          firm: this.props.firm ? this.props.firm.toLowerCase() : '',
          tokenSessionId: this.props.tokenSessionId
        }).then(function (response) {
          if (response && !response.error) {
            _webcore.routeActions.push({
              pathname: _this2.props.nextPage
            });
          }
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        _block2.default,
        null,
        this.props.error && _react2.default.createElement(
          _message2.default,
          { id: "errorMsg", msgType: "error" },
          this.props.error
        ),
        _react2.default.createElement(
          _form2.default,
          {
            id: "initial-info-form",
            ref: function ref(f) {
              return _this3.form = f;
            },
            onSubmit: this.handleSubmit,
            onChange: this.handleInputChange
          },
          _react2.default.createElement(
            _panel2.default,
            { hasFooter: false },
            _react2.default.createElement(
              _panel2.default.Body,
              null,
              _react2.default.createElement(
                _form2.default.Row,
                null,
                _react2.default.createElement(
                  _element2.default,
                  { type: "p", className: "form-header" },
                  "MERHABA!"
                )
              ),
              _react2.default.createElement(
                _form2.default.Row,
                null,
                _react2.default.createElement(
                  _element2.default,
                  { type: "p", className: "form-text-strong" },
                  "Ba\u015Fvuru i\xE7in kimlik ve ileti\u015Fim bilgilerine ihtiyac\u0131m\u0131z var."
                )
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { name: "TcKimlikNo" },
                _react2.default.createElement(_label2.default, { text: "TC Kimlik No", forId: "tckn" }),
                _react2.default.createElement(_textfield2.default, {
                  id: "tckn",
                  type: "tel",
                  name: "tckn",
                  maxLength: 11,
                  value: this.state.tckn,
                  validator: _utils.RegexpTypes.Numeric,
                  validations: [(0, _utils.required)("LÃ¼tfen TC Kimlik NumaranÄ±zÄ± giriniz")]
                })
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { name: "BirthDate" },
                _react2.default.createElement(_label2.default, { text: "Do\u011Fum Tarihi", forId: "birthDate" }),
                _react2.default.createElement(_textfield2.default, {
                  id: "birthDate",
                  type: "tel",
                  name: "birthDate",
                  maxLength: 10,
                  placeholder: "GG.AA.YYYY",
                  mask: "11.11.1111",
                  getMaskedValue: true,
                  value: this.state.birthDate,
                  validations: [(0, _utils.required)("LÃ¼tfen DoÄum Tarihinizi giriniz"), (0, _utils.dateFormat)("LÃ¼tfen geÃ§erli bir tarih giriniz.")]
                })
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { name: "CepTelefonu" },
                _react2.default.createElement(_label2.default, { text: "Cep Telefonu No", forId: "phone" }),
                _react2.default.createElement(_textfield2.default, {
                  id: "phone",
                  type: "tel",
                  name: "phone",
                  maxLength: 13,
                  mask: "111 111 11 11",
                  value: this.state.phone,
                  placeholder: "5__ ___ __ __",
                  validations: [(0, _utils.required)("LÃ¼tfen Telefon NumaranÄ±zÄ± giriniz")]
                })
              ),
              this.state.showCaptcha && _react2.default.createElement(
                _form2.default.Group,
                { name: "GuvenlikKodu" },
                _react2.default.createElement(_label2.default, { text: "G\xFCvenlik Kodu", forId: "captcha" }),
                _react2.default.createElement(_captcha2.default, {
                  id: "captcha",
                  type: "text",
                  name: "captcha",
                  captcha: this.props.captchaData,
                  value: this.state.captcha,
                  maxLength: 4,
                  maxRefreshCount: 3,
                  partofform: true,
                  refreshClick: this.handleCaptchaRefresh,
                  validations: [(0, _utils.required)("LÃ¼tfen GÃ¼venlik Kodunu giriniz")]
                })
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { name: "kvkk" },
                _react2.default.createElement(
                  _checkbox2.default,
                  {
                    id: "kvkk",
                    name: "kvkk",
                    value: "1",
                    checked: this.state.kvkk,
                    block: true,
                    validations: [(0, _utils.required)("LÃ¼tfen Onay kutusunu iÅaretleyiniz")],
                    className: "cb-position-fix"
                  },
                  _react2.default.createElement(_link2.default, {
                    href: "https://www.akbank.com/Documents/Akbank_KVKK_Aydinlatma_Metni_(Bireysel_Kredi).pdf",
                    text: "KiÅisel Verilerin KorunmasÄ± Kanunu hakkÄ±nda Bilgilendirme",
                    inline: true,
                    target: "_blank"
                  }),
                  "'yi okudum."
                )
              ),
              _react2.default.createElement(
                _form2.default.Group,
                { name: "submit", className: "form-action-row" },
                _react2.default.createElement(_button2.default, {
                  id: this.props.applyButtonId,
                  text: "Devam Et",
                  fetching: this.props.fetching,
                  disabled: this.props.fetching
                })
              )
            )
          )
        ),
        _react2.default.createElement(
          _block2.default,
          { className: "text-section" },
          _react2.default.createElement(
            _element2.default,
            { type: "p", className: "normal" },
            "Gerekli durumlarda i\u015Fleminizin tamamlanabilmesi i\xE7in M\xFC\u015Fteri \u0130leti\u015Fim Merkezimiz sizinle ileti\u015Fime ge\xE7ecektir."
          )
        )
      );
    }
  }]);

  return InitialInfo;
}(_webcore.BappBase), (_applyDecoratedDescriptor(_class.prototype, "handleInputChange", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleInputChange"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleCaptchaRefresh", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleCaptchaRefresh"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "handleSubmit", [_webcore.autobind], Object.getOwnPropertyDescriptor(_class.prototype, "handleSubmit"), _class.prototype)), _class);


InitialInfo.propTypes = {
  applyButtonId: _propTypes2.default.string
};

function mapStateToProps(state, ownProps) {
  return {
    tokenSessionId: state.ihtiyacKredisiState.tokenSessionId,
    captchaData: state.ihtiyacKredisiState.captchaData,
    amount: state.ihtiyacKredisiState.amount,
    vade: state.ihtiyacKredisiState.vade,
    productType: state.ihtiyacKredisiState.productType,
    fetching: state.ihtiyacKredisiState.fetching,
    nextPage: state.ihtiyacKredisiState.nextPage,
    customerFlg: state.ihtiyacKredisiState.customerFlg,
    potentialFlg: state.ihtiyacKredisiState.potentialFlg,
    p: state.ihtiyacKredisiState.p,
    cid: state.ihtiyacKredisiState.cid,
    firm: state.ihtiyacKredisiState.firm,
    isCovid19: state.ihtiyacKredisiState.isCovid19,
    error: state.ihtiyacKredisiState.error
  };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(InitialInfo);

/***/ }),

/***/ "tZVn":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "u2GR":
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "uNSy":
/***/ (function(module, exports) {

/**
* jQuery core object.
*
* Worker with jQuery deferred
*
* Code from: https://github.com/jquery/jquery/blob/master/src/core.js
*
*/

var jQuery = module.exports = {
	type: type
	, isArray: isArray
	, isFunction: isFunction
	, isPlainObject: isPlainObject
	, each: each
	, extend: extend
	, noop: function() {}
};

var toString = Object.prototype.toString;

var class2type = {};
// Populate the class2type map
"Boolean Number String Function Array Date RegExp Object".split(" ").forEach(function(name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});


function type( obj ) {
	return obj == null ?
		String( obj ) :
			class2type[ toString.call(obj) ] || "object";
}

function isFunction( obj ) {
	return jQuery.type(obj) === "function";
}

function isArray( obj ) {
	return jQuery.type(obj) === "array";
}

function each( object, callback, args ) {
	var name, i = 0,
	length = object.length,
	isObj = length === undefined || isFunction( object );

	if ( args ) {
		if ( isObj ) {
			for ( name in object ) {
				if ( callback.apply( object[ name ], args ) === false ) {
					break;
				}
			}
		} else {
			for ( ; i < length; ) {
				if ( callback.apply( object[ i++ ], args ) === false ) {
					break;
				}
			}
		}

		// A special, fast, case for the most common use of each
	} else {
		if ( isObj ) {
			for ( name in object ) {
				if ( callback.call( object[ name ], name, object[ name ] ) === false ) {
					break;
				}
			}
		} else {
			for ( ; i < length; ) {
				if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {
					break;
				}
			}
		}
	}

	return object;
}

function isPlainObject( obj ) {
	// Must be an Object.
	if ( !obj || jQuery.type(obj) !== "object" ) {
		return false;
	}
	return true;
}

function extend() {
	var options, name, src, copy, copyIsArray, clone,
	target = arguments[0] || {},
	i = 1,
	length = arguments.length,
	deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

					// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};




/***/ }),

/***/ "uqUo":
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__("kM2E");
var core = __webpack_require__("FeBl");
var fails = __webpack_require__("S82l");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "wwnH":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var langGroups = exports.langGroups = {
  "/": [],
  "/about": ["IND.Common", "IND.Login"]
};

/***/ }),

/***/ "wy+F":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _provider = __webpack_require__("fGOM");

var _provider2 = _interopRequireDefault(_provider);

__webpack_require__("FaSI");

var _webcore = __webpack_require__("9EQB");

var _routes = __webpack_require__("7NNL");

var _langGroups = __webpack_require__("wwnH");

var _language = __webpack_require__("iLr6");

var _language2 = _interopRequireDefault(_language);

var _app = __webpack_require__("nCzU");

var _app2 = _interopRequireDefault(_app);

var _reactRouterDom = __webpack_require__("F8kA");

__webpack_require__("ijqj");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var App = function (_BappBase) {
  _inherits(App, _BappBase);

  function App(props) {
    _classCallCheck(this, App);

    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));
  }

  _createClass(App, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      _webcore.routeManager.generateRoutes("tr-TR", _routes.routeModel, _langGroups.langGroups, "lang-service-url", _language2.default);
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _reactRedux.Provider,
        { store: _webcore.store },
        _react2.default.createElement(
          _provider2.default,
          { theme: "theme-default", platform: _provider.Platforms.Desktop },
          _react2.default.createElement(
            _webcore.ConnectedRouter,
            { store: _webcore.store, history: _webcore.routeHistory },
            _react2.default.createElement(_reactRouterDom.Route, { component: _app2.default })
          )
        )
      );
    }
  }]);

  return App;
}(_webcore.BappBase);

exports.default = App;

/***/ }),

/***/ "x4/c":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("eWjm"), __esModule: true };

/***/ }),

/***/ "xH/j":
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__("hJx8");
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),

/***/ "xWJd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__("RH2O");

var _webcore = __webpack_require__("9EQB");

var _panel = __webpack_require__("DjmN");

var _panel2 = _interopRequireDefault(_panel);

__webpack_require__("EKQK");

var _appstate = __webpack_require__("Tt3D");

var _appstate2 = _interopRequireDefault(_appstate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NotFound = function (_BappBase) {
  _inherits(NotFound, _BappBase);

  function NotFound(props) {
    _classCallCheck(this, NotFound);

    return _possibleConstructorReturn(this, (NotFound.__proto__ || Object.getPrototypeOf(NotFound)).call(this, props));
  }

  _createClass(NotFound, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      _appstate2.default.setAppVariables({
        pageTitle: "404",
        pageTitleDescription: "Sorry, page not found",
        backText: "GERÄ°",
        onBackClick: function onBackClick() {
          return _webcore.routeActions.push("/auth/dashboard");
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        _panel2.default,
        null,
        _react2.default.createElement(_panel2.default.Header, { title: "Not Found" }),
        _react2.default.createElement(
          _panel2.default.Body,
          null,
          "Try again later"
        )
      );
    }
  }]);

  return NotFound;
}(_webcore.BappBase);

function mapStateToProps(state, ownProps) {
  return {};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(NotFound);

/***/ }),

/***/ "xafY":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var Events = {
	registered: {},
	scrollEvent: {
		register: function register(evtName, callback) {
			Events.registered[evtName] = callback;
		},
		remove: function remove(evtName) {
			Events.registered[evtName] = null;
		}
	}
};

exports.default = Events;

/***/ }),

/***/ "yBKa":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Tell the browser that the event listener won't prevent a scroll.
 * Allowing the browser to continue scrolling without having to
 * to wait for the listener to return.
 */
var addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {
  var listenerName = listener.name;
  if (!listenerName) {
    listenerName = eventName;
    console.warn('Listener must be a named function.');
  }

  if (!attachedListeners.has(eventName)) attachedListeners.set(eventName, new Set());
  var listeners = attachedListeners.get(eventName);
  if (listeners.has(listenerName)) return;

  var supportsPassiveOption = function () {
    var supportsPassiveOption = false;
    try {
      var opts = Object.defineProperty({}, 'passive', {
        get: function get() {
          supportsPassiveOption = true;
        }
      });
      window.addEventListener('test', null, opts);
    } catch (e) {}
    return supportsPassiveOption;
  }();
  target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);
  listeners.add(listenerName);
};

var removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {
  target.removeEventListener(eventName, listener);
  attachedListeners.get(eventName).delete(listener.name || eventName);
};

var attachedListeners = new Map();

/***/ }),

/***/ "zmAe":
/***/ (function(module, exports) {

module.exports = isPromise;

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}


/***/ }),

/***/ "zmhh":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__("GiK3");

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__("KSGD");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _form = __webpack_require__("3kzJ");

var _form2 = _interopRequireDefault(_form);

__webpack_require__("2xzD");

var _label = __webpack_require__("79hd");

var _label2 = _interopRequireDefault(_label);

__webpack_require__("fLa5");

var _currency = __webpack_require__("RZcY");

var _currency2 = _interopRequireDefault(_currency);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AmountReview = function AmountReview(props) {
  return _react2.default.createElement(
    _form2.default.Group,
    { review: true, name: "reviewFormGroupAmount" },
    _react2.default.createElement(_label2.default, { text: props.label, id: "reviewAccountAmount" }),
    _react2.default.createElement(_currency2.default, {
      value: props.value,
      currency: props.currency,
      size: "sm",
      sizeCurrency: "sm",
      className: "text-right"
    })
  );
};

AmountReview.propTypes = {
  label: _propTypes2.default.string,
  value: _propTypes2.default.number.isRequired,
  currency: _propTypes2.default.oneOf(["TL", "USD", "EUR"])
};

AmountReview.defaultProps = {
  currency: "TL"
};

exports.default = AmountReview;

/***/ }),

/***/ "zp2a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return e; });
/**
 * @preserve jquery-param (c) KNOWLEDGECODE | MIT
 */
var e=function(e){var n=[],o=function(e,o){o=null==(o="function"==typeof o?o():o)?"":o,n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(o)},t=function(e,r){var f,i,l;if(e)if(Array.isArray(r))for(f=0,i=r.length;f<i;f++)t(e+"["+("object"==typeof r[f]&&r[f]?f:"")+"]",r[f]);else if("[object Object]"===Object.prototype.toString.call(r))for(l in r)t(e+"["+l+"]",r[l]);else o(e,r);else if(Array.isArray(r))for(f=0,i=r.length;f<i;f++)o(r[f].name,r[f].value);else for(l in r)t(l,r[l]);return n};return t("",e).join("&")};


/***/ })

},["CjFb"]);